{
  "hash": "53462257e2c5abfcd7a90434a5578980",
  "result": {
    "engine": "knitr",
    "markdown": "# 读入和写出\n\n## Import\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble(\n  x = c(1, 2, 5), \n  y = c(\"h\", \"m\", \"g\"),\n  z = c(0.08, 0.83, 0.60)\n)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|  x|y  |    z|\n|--:|:--|----:|\n|  1|h  | 0.08|\n|  2|m  | 0.83|\n|  5|g  | 0.60|\n\n</div>\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntribble(\n  ~x, ~y, ~z,\n  1, \"h\", 0.08,\n  2, \"m\", 0.83,\n  5, \"g\", 0.60\n)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|  x|y  |    z|\n|--:|:--|----:|\n|  1|h  | 0.08|\n|  2|m  | 0.83|\n|  5|g  | 0.60|\n\n</div>\n:::\n:::\n\n\n### 文本文件\n\n常用的分隔符如逗号`,` ，制表符`\\t`，分号`;`，空格`space`，...... 等。\n\n#### `utils::`\n\nutilities,a piece of computer software that performs a particular task\n\n`read.table()` `read.csv()` `read.csv2`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 列名(第1行),行标识符 (第1列)\nutils::read.table(\"data/leadership.txt\",header = TRUE,sep=\",\",row.names = 1)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|      |date     |country |gender | age| q1| q2| q3| q4| q5|\n|:-----|:--------|:-------|:------|---:|--:|--:|--:|--:|--:|\n|Bob   |10/24/14 |US      |M      |  29|  5|  4|  5|  5|  5|\n|Mary  |10/28/14 |US      |F      |  44|  3|  5|  2|  5|  5|\n|Lily  |10/01/14 |UK      |F      |  45|  3|  5|  5|  5|  2|\n|July  |10/12/14 |UK      |M      |  68|  3|  3|  4| NA| NA|\n|Frank |05/01/14 |UK      |F      |  99|  2|  2|  1|  2|  1|\n\n</div>\n:::\n\n```{.r .cell-code}\nx <- read.csv(\"data/leadership.txt\",header = TRUE,sep=\",\",row.names = 1)\nread.table(\"data/leadership.txt\",header = TRUE,sep=\",\",row.names = \"id\") \n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|      |date     |country |gender | age| q1| q2| q3| q4| q5|\n|:-----|:--------|:-------|:------|---:|--:|--:|--:|--:|--:|\n|Bob   |10/24/14 |US      |M      |  29|  5|  4|  5|  5|  5|\n|Mary  |10/28/14 |US      |F      |  44|  3|  5|  2|  5|  5|\n|Lily  |10/01/14 |UK      |F      |  45|  3|  5|  5|  5|  2|\n|July  |10/12/14 |UK      |M      |  68|  3|  3|  4| NA| NA|\n|Frank |05/01/14 |UK      |F      |  99|  2|  2|  1|  2|  1|\n\n</div>\n:::\n:::\n\n\n#### `readr::`\n\n`read_csv()` `read_tsv()` `read_delim()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreadr::read_csv(\"data/leadership.txt\",col_names = TRUE,id=\"file_path\") |> \n    column_to_rownames(var = \"id\")\n```\n:::\n\n\n#### 批量读取\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsales_files <- c(\"data/01-sales.csv\",\n                 \"data/02-sales.csv\",\n                 \"data/03-sales.csv\")\nread_csv(sales_files, id = \"file_path\")\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|file_path         |month    | year| brand| item|  n|\n|:-----------------|:--------|----:|-----:|----:|--:|\n|data/01-sales.csv |January  | 2019|     1| 1234|  3|\n|data/01-sales.csv |January  | 2019|     1| 8721|  9|\n|data/01-sales.csv |January  | 2019|     1| 1822|  2|\n|data/01-sales.csv |January  | 2019|     2| 3333|  1|\n|data/01-sales.csv |January  | 2019|     2| 2156|  9|\n|data/01-sales.csv |January  | 2019|     2| 3987|  6|\n|data/01-sales.csv |January  | 2019|     2| 3827|  6|\n|data/02-sales.csv |February | 2019|     1| 1234|  8|\n|data/02-sales.csv |February | 2019|     1| 8721|  2|\n|data/02-sales.csv |February | 2019|     1| 1822|  3|\n|data/02-sales.csv |February | 2019|     2| 3333|  1|\n|data/02-sales.csv |February | 2019|     2| 2156|  3|\n|data/02-sales.csv |February | 2019|     2| 3987|  6|\n|data/03-sales.csv |March    | 2019|     1| 1234|  3|\n|data/03-sales.csv |March    | 2019|     1| 3627|  1|\n|data/03-sales.csv |March    | 2019|     1| 8820|  3|\n|data/03-sales.csv |March    | 2019|     2| 7253|  1|\n|data/03-sales.csv |March    | 2019|     2| 8766|  3|\n|data/03-sales.csv |March    | 2019|     2| 8288|  6|\n\n</div>\n:::\n:::\n\n\n### Excel\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\n#read_xls()\n#read_xlsx()\nread_excel(path = \"data/example.xlsx\",sheet = 1,range = \"A1:D11\")\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|姓名 | 数学| 科学| 英语|\n|:----|----:|----:|----:|\n|J.D  |  502|   95|   25|\n|A.W  |  600|   99|   22|\n|B.M  |  412|   80|   18|\n|D.J  |  358|   82|   15|\n|J.M  |  495|   75|   20|\n|C.C  |  512|   85|   28|\n|R.y  |  410|   80|   15|\n|G.K  |  625|   95|   30|\n|J.E  |  573|   89|   27|\n|M.R  |  522|   86|   18|\n\n</div>\n:::\n\n```{.r .cell-code}\nread_excel(\"data/example.xlsx\",2)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n| ID| Time| X1| X2|\n|--:|----:|--:|--:|\n|  1|    1|  5|  6|\n|  1|    2|  3|  5|\n|  2|    1|  6|  1|\n|  2|    2|  2|  4|\n\n</div>\n:::\n:::\n\n\n#### 多个Excel 合并导入\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombine_sheets <- function(excel_file_path) {\n    df <- excel_file_path %>%\n        excel_sheets() %>%\n        set_names() %>%\n        map_df(.f = ~read_excel(path = excel_file_path, sheet = ..1)\n               ,.id = \"sheet\"\n        )\n    return(df)\n}\n\nexcel_file_paths <- list.files(path = \".\",pattern = \".xlsx\",recursive = T)\n\nexcel_file_paths\n#> [1] \"data/deaths.xlsx\"       \"data/deathsA5_F15.xlsx\" \"data/example.xlsx\"     \n#> [4] \"data/penguins.xlsx\"     \"data/students.xlsx\"\ncombine_workbooks <- map_dfr(excel_file_paths, combine_sheets)\n```\n:::\n\n\n### 脚本载入\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(\"data/add_function.R\")\nadd(c(1,24,4),4)\n#> [1]  5 28  8\n```\n:::\n\n\n::: callout-note\nadd_function\n\n\n::: {.cell}\n\n```{.r .cell-code}\nadd <- function(x,y){\n  return(x+y)\n}\n```\n:::\n\n:::\n\n### 二进制文件\n\nRDS,R's custom binary format called RDS\n\n`read_rds()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(x,file = \"data/leadership.parquet\")\nread_rds(\"data/leadership.rds\")\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|      |date     |country |gender | age| q1| q2| q3| q4| q5|\n|:-----|:--------|:-------|:------|---:|--:|--:|--:|--:|--:|\n|Bob   |10/24/14 |US      |M      |  29|  5|  4|  5|  5|  5|\n|Mary  |10/28/14 |US      |F      |  44|  3|  5|  2|  5|  5|\n|Lily  |10/01/14 |UK      |F      |  45|  3|  5|  5|  5|  2|\n|July  |10/12/14 |UK      |M      |  68|  3|  3|  4| NA| NA|\n|Frank |05/01/14 |UK      |F      |  99|  2|  2|  1|  2|  1|\n\n</div>\n:::\n:::\n\n\nParquet,a fast binary and columnar storage file format(列式存储文件)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(arrow)\nwrite_parquet(x,sink = \"data/leadership.parquet\")\nread_parquet(file = \"data/leadership.parquet\" )\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|date     |country |gender | age| q1| q2| q3| q4| q5|\n|:--------|:-------|:------|---:|--:|--:|--:|--:|--:|\n|10/24/14 |US      |M      |  29|  5|  4|  5|  5|  5|\n|10/28/14 |US      |F      |  44|  3|  5|  2|  5|  5|\n|10/01/14 |UK      |F      |  45|  3|  5|  5|  5|  2|\n|10/12/14 |UK      |M      |  68|  3|  3|  4| NA| NA|\n|05/01/14 |UK      |F      |  99|  2|  2|  1|  2|  1|\n\n</div>\n:::\n:::\n\n\n### 数据库\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(DBI)\nlibrary(dbplyr)\n```\n:::\n\n\n### 等宽格式\n\n**readr** 包提供的 `read_fwf()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n' First     Last  Sex Number\n Currer     Bell    F      2\n    Dr.    Seuss    M     49\n    \"\"   Student   NA     21' |> read_fwf()\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|X1     |X2      |X3         |\n|:------|:-------|:----------|\n|First  |Last    |Sex Number |\n|Currer |Bell    |F      2   |\n|Dr.    |Seuss   |M     49   |\n|\"\"     |Student |NA     21  |\n\n</div>\n:::\n:::\n\n\n### Internet Datasets\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl = \"https://www.monetdb.org/sites/default/files/voc_tsvs.zip\"\ndownload.file(url, \"voc_tsvs.zip\") # download file\nunzip(\"voc_tsvs.zip\", exdir = \"data\") # unzip files\nfile.remove(\"voc_tsvs.zip\") # tidy up by removing the zip file\n\nurl = \"https://vincentarelbundock.github.io/Rdatasets/csv/datasets/co2.csv\"\ndownload.file(url, \"extdata/co2.csv\")\ndf_co2 = read_csv(\"extdata/co2.csv\")\n```\n:::\n\n\n### Datasets in library\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|eval: false\ndata(package = \"dplyr\")\n#> Data sets in package ‘dplyr’:\n#> \n#> band_instruments               Band membership\n#> band_instruments2              Band membership\n#> band_members                   Band membership\n#> starwars                       Starwars characters\n#> storms                         Storm tracks data\n```\n:::\n\n\n### JSON\n\n*javascript object notation*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(jsonlite)\nread_json(path = \"data/3龙门币3赤金.json\",simplifyVector = TRUE)\n#> $author\n#> [1] \"wal\"\n#> \n#> $description\n#> [1] \"\"\n#> \n#> $id\n#> [1] 1.71086e+15\n#> \n#> $title\n#> [1] \"3龙门币3赤金\"\n#> \n#> $buildingType\n#> [1] 243\n#> \n#> $planTimes\n#> [1] \"3班\"\n#> \n#> $plans\n#>    name description Fiammetta.enable Fiammetta.target Fiammetta.order\n#> 1 A白班                         TRUE             巫恋             pre\n#> 2 B夜班                         TRUE           龙舌兰             pre\n#>   drones.room drones.index drones.enable drones.order\n#> 1     trading            1          TRUE          pre\n#> 2     trading            1          TRUE          pre\n#>                                                                                                                                      rooms.trading\n#> 1         FALSE, FALSE, FALSE, LMD, LMD, LMD, 巫恋, 龙舌兰, 柏喙, 孑, 银灰, 琳琅诗怀雅, 空弦, 但书, 伺夜, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE\n#> 2 FALSE, FALSE, FALSE, LMD, LMD, LMD, 巫恋, 龙舌兰, 卡夫卡, 能天使, 德克萨斯, 拉普兰德, 黑键, 慕斯, 石英, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE\n#>                                                                                                                                              rooms.manufacture\n#> 1         FALSE, FALSE, FALSE, Pure Gold, Pure Gold, Pure Gold, 槐琥, 至简, 清流, 苍苔, 斑点, 夜烟, 温蒂, 森蚺, 异客, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE\n#> 2 FALSE, FALSE, FALSE, Pure Gold, Pure Gold, Pure Gold, 淬羽赫默, 多萝西, 白面鸮, 砾, 迷迭香, 香草, 火神, 贝娜, 泡泡, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE\n#>                                                                               rooms.power\n#> 1 FALSE, FALSE, FALSE, 承曦格雷伊, 澄闪, 格雷伊, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE\n#> 2       FALSE, FALSE, FALSE, 缪尔赛思, 雷蛇, 黍, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE\n#>                                                                                  rooms.dormitory\n#> 1 FALSE, FALSE, FALSE, FALSE, 菲亚梅塔, 重岳, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE\n#> 2 FALSE, FALSE, FALSE, FALSE, 菲亚梅塔, 塑心, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE\n#>                                                     rooms.control\n#> 1 FALSE, 阿米娅, 麒麟R夜刀, 火龙S黑角, 灵知, 玛恩纳, FALSE, FALSE\n#> 2             FALSE, 重岳, 诗怀雅, 凯尔希, 令, 琴柳, FALSE, FALSE\n#>                       rooms.meeting                    rooms.hire\n#> 1     FALSE, 陈, 白雪, FALSE, FALSE FALSE, 艾雅法拉, FALSE, FALSE\n#> 2 FALSE, 远山, 塞雷娅, FALSE, FALSE     FALSE, 絮雨, FALSE, FALSE\n#>          rooms.processing                     period\n#> 1     FALSE, FALSE, FALSE               07:00, 21:59\n#> 2 FALSE, 年, FALSE, FALSE 22:00, 00:00, 23:59, 06:59\n#> \n#> $scheduleType\n#> $scheduleType$planTimes\n#> [1] 2\n#> \n#> $scheduleType$trading\n#> [1] 3\n#> \n#> $scheduleType$manufacture\n#> [1] 3\n#> \n#> $scheduleType$power\n#> [1] 3\n#> \n#> $scheduleType$dormitory\n#> [1] 4\n```\n:::\n\n\n### SPSS/SAS/stata DTA\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(haven)\nread_spss(file)\nread_sav(file)\nread_sas(file)\nread_dta(file)\nread_stata(file)\n```\n:::\n\n\n### 键盘输入\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- data.frame(id=character(0),age=numeric(0),sex=character(0))\ndf <- edit(df)\n\nfix(df)\n```\n:::\n\n\n### 逐行键入数据\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreadline(\"输入年龄：\")\n\n```\n:::\n\n\n## Write\n\n### 文本输出\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_csv()\nwrite_xlsx()\nwrite_rds()\nwrite_parquet()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsink(\"data/sink_output.txt\",append = F,split = T)  # split =T 输出到控制台和文件\nletters\n#>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n#> [20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\"\nsink(NULL)\n```\n:::\n\n\n### 图片输出\n\nRstudio 直接 Export save as Image/PDF，copy to clipboard\n\n\n::: {.cell}\n\n```{.r .cell-code}\npdf(file = \"data/pdf_output.pdf\")       # bmp,jpeg,png，SVG\nplot(1:25,1:25,pch=1:25,col=\"green\",bg=\"red\",type = \"b\")\nwhile(!is.null(dev.list()))  dev.off() \n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}