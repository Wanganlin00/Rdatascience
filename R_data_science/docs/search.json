[
  {
    "objectID": "transform_tidy.html",
    "href": "transform_tidy.html",
    "title": "\n10  数据清洗\n",
    "section": "",
    "text": "10.1 行操作dplyr\nhttps://dplyr.tidyverse.org/index.html “分割-应用-组合”（Split-Apply-Combine）",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>数据清洗</span>"
    ]
  },
  {
    "objectID": "transform_tidy.html#行操作dplyr",
    "href": "transform_tidy.html#行操作dplyr",
    "title": "\n10  数据清洗\n",
    "section": "",
    "text": "10.1.1 filter()\n\n\nShow the codedplyr::filter(mpg,model==\"a4\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n\n\naudi\na4\n3.1\n2008\n6\nauto(av)\nf\n18\n27\np\ncompact\n\n\n\n\n\nShow the code\n\n\ndplyr::filter(mpg,drv %in% c(\"r\",\"f\")) |&gt; DT::datatable()\n\n\n\n\n\n\n10.1.2 arrange()\n\n\nShow the codearrange(mpg, year,displ,cty)|&gt; DT::datatable()\n\n\n\n\nShow the code\narrange(mpg,desc(displ))|&gt; DT::datatable()\n\n\n\n\n\n\n10.1.3 distinct()\n\n\nShow the codedistinct(mpg,manufacturer)\n\n\n\n\nmanufacturer\n\n\n\naudi\n\n\nchevrolet\n\n\ndodge\n\n\nford\n\n\nhonda\n\n\nhyundai\n\n\njeep\n\n\nland rover\n\n\nlincoln\n\n\nmercury\n\n\nnissan\n\n\npontiac\n\n\nsubaru\n\n\ntoyota\n\n\nvolkswagen\n\n\n\n\n\nShow the codecount(mpg,manufacturer,sort = TRUE)\n\n\n\n\nmanufacturer\nn\n\n\n\ndodge\n37\n\n\ntoyota\n34\n\n\nvolkswagen\n27\n\n\nford\n25\n\n\nchevrolet\n19\n\n\naudi\n18\n\n\nhyundai\n14\n\n\nsubaru\n14\n\n\nnissan\n13\n\n\nhonda\n9\n\n\njeep\n8\n\n\npontiac\n5\n\n\nland rover\n4\n\n\nmercury\n4\n\n\nlincoln\n3\n\n\n\n\n\nShow the code\nmpg |&gt; \n    distinct(manufacturer,cyl) |&gt; \n    count(cyl)\n\n\n\n\ncyl\nn\n\n\n\n4\n9\n\n\n5\n1\n\n\n6\n11\n\n\n8\n11\n\n\n\n\n\nShow the code\n# 将在数据集中找到唯一行的第一个出现并丢弃其余行\ndistinct(mpg,manufacturer,.keep_all = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\nchevrolet\nc1500 suburban 2wd\n5.3\n2008\n8\nauto(l4)\nr\n14\n20\nr\nsuv\n\n\ndodge\ncaravan 2wd\n2.4\n1999\n4\nauto(l3)\nf\n18\n24\nr\nminivan\n\n\nford\nexpedition 2wd\n4.6\n1999\n8\nauto(l4)\nr\n11\n17\nr\nsuv\n\n\nhonda\ncivic\n1.6\n1999\n4\nmanual(m5)\nf\n28\n33\nr\nsubcompact\n\n\nhyundai\nsonata\n2.4\n1999\n4\nauto(l4)\nf\n18\n26\nr\nmidsize\n\n\njeep\ngrand cherokee 4wd\n3.0\n2008\n6\nauto(l5)\n4\n17\n22\nd\nsuv\n\n\nland rover\nrange rover\n4.0\n1999\n8\nauto(l4)\n4\n11\n15\np\nsuv\n\n\nlincoln\nnavigator 2wd\n5.4\n1999\n8\nauto(l4)\nr\n11\n17\nr\nsuv\n\n\nmercury\nmountaineer 4wd\n4.0\n1999\n6\nauto(l5)\n4\n14\n17\nr\nsuv\n\n\nnissan\naltima\n2.4\n1999\n4\nmanual(m5)\nf\n21\n29\nr\ncompact\n\n\npontiac\ngrand prix\n3.1\n1999\n6\nauto(l4)\nf\n18\n26\nr\nmidsize\n\n\nsubaru\nforester awd\n2.5\n1999\n4\nmanual(m5)\n4\n18\n25\nr\nsuv\n\n\ntoyota\n4runner 4wd\n2.7\n1999\n4\nmanual(m5)\n4\n15\n20\nr\nsuv\n\n\nvolkswagen\ngti\n2.0\n1999\n4\nmanual(m5)\nf\n21\n29\nr\ncompact\n\n\n\n\n\n\n\n10.1.4 slice()\n\n\nShow the codeslice_head(mpg , n=6)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n\n\n\n\n\nShow the codeslice_max(mpg, order_by = displ ,n=6)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\nchevrolet\ncorvette\n7.0\n2008\n8\nmanual(m6)\nr\n15\n24\np\n2seater\n\n\nchevrolet\nk1500 tahoe 4wd\n6.5\n1999\n8\nauto(l4)\n4\n14\n17\nd\nsuv\n\n\nchevrolet\ncorvette\n6.2\n2008\n8\nmanual(m6)\nr\n16\n26\np\n2seater\n\n\nchevrolet\ncorvette\n6.2\n2008\n8\nauto(s6)\nr\n15\n25\np\n2seater\n\n\njeep\ngrand cherokee 4wd\n6.1\n2008\n8\nauto(l5)\n4\n11\n14\np\nsuv\n\n\nchevrolet\nc1500 suburban 2wd\n6.0\n2008\n8\nauto(l4)\nr\n12\n17\nr\nsuv\n\n\n\n\n\nShow the codeslice_min(mpg,order_by = displ,prop = 0.01)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\nhonda\ncivic\n1.6\n1999\n4\nmanual(m5)\nf\n28\n33\nr\nsubcompact\n\n\nhonda\ncivic\n1.6\n1999\n4\nauto(l4)\nf\n24\n32\nr\nsubcompact\n\n\nhonda\ncivic\n1.6\n1999\n4\nmanual(m5)\nf\n25\n32\nr\nsubcompact\n\n\nhonda\ncivic\n1.6\n1999\n4\nmanual(m5)\nf\n23\n29\np\nsubcompact\n\n\nhonda\ncivic\n1.6\n1999\n4\nauto(l4)\nf\n24\n32\nr\nsubcompact\n\n\n\n\n\nShow the code\nslice_sample(mpg,n=6,weight_by =hwy ,replace = T)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\nford\nexplorer 4wd\n4.0\n1999\n6\nauto(l5)\n4\n14\n17\nr\nsuv\n\n\ntoyota\ncamry solara\n2.4\n2008\n4\nauto(s5)\nf\n22\n31\nr\ncompact\n\n\ntoyota\ncamry\n3.0\n1999\n6\nauto(l4)\nf\n18\n26\nr\nmidsize\n\n\ndodge\ncaravan 2wd\n3.3\n2008\n6\nauto(l4)\nf\n17\n24\nr\nminivan\n\n\ndodge\ndurango 4wd\n4.7\n2008\n8\nauto(l5)\n4\n13\n17\nr\nsuv",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>数据清洗</span>"
    ]
  },
  {
    "objectID": "transform_tidy.html#列操作-dplyr",
    "href": "transform_tidy.html#列操作-dplyr",
    "title": "\n10  数据清洗\n",
    "section": "\n10.2 列操作 dplyr\n",
    "text": "10.2 列操作 dplyr\n\n\n10.2.1 glimpse()\n\n\nShow the codeglimpse(mpg) %&gt;% select(1:3) %&gt;% head()\n#&gt; Rows: 234\n#&gt; Columns: 11\n#&gt; $ manufacturer &lt;chr&gt; \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"…\n#&gt; $ model        &lt;chr&gt; \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4 quattro\", \"…\n#&gt; $ displ        &lt;dbl&gt; 1.8, 1.8, 2.0, 2.0, 2.8, 2.8, 3.1, 1.8, 1.8, 2.0, 2.0, 2.…\n#&gt; $ year         &lt;int&gt; 1999, 1999, 2008, 2008, 1999, 1999, 2008, 1999, 1999, 200…\n#&gt; $ cyl          &lt;int&gt; 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 8, 8, …\n#&gt; $ trans        &lt;chr&gt; \"auto(l5)\", \"manual(m5)\", \"manual(m6)\", \"auto(av)\", \"auto…\n#&gt; $ drv          &lt;chr&gt; \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"4\", \"4\", \"4\", \"4\", \"4…\n#&gt; $ cty          &lt;int&gt; 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 1…\n#&gt; $ hwy          &lt;int&gt; 29, 29, 31, 30, 26, 26, 27, 26, 25, 28, 27, 25, 25, 25, 2…\n#&gt; $ fl           &lt;chr&gt; \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p…\n#&gt; $ class        &lt;chr&gt; \"compact\", \"compact\", \"compact\", \"compact\", \"compact\", \"c…\n\n\n\n\nmanufacturer\nmodel\ndispl\n\n\n\naudi\na4\n1.8\n\n\naudi\na4\n1.8\n\n\naudi\na4\n2.0\n\n\naudi\na4\n2.0\n\n\naudi\na4\n2.8\n\n\naudi\na4\n2.8\n\n\n\n\n\n\n\n10.2.2 pull()\n\n提取单个列\n\nShow the codempg %&gt;% \n    pull(var = cyl)\n#&gt;   [1] 4 4 4 4 6 6 6 4 4 4 4 6 6 6 6 6 6 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 4 4 6 6 6\n#&gt;  [38] 4 6 6 6 6 6 6 6 6 6 6 6 6 6 6 8 8 8 8 8 6 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n#&gt;  [75] 8 8 8 6 6 6 6 8 8 6 6 8 8 8 8 8 6 6 6 6 8 8 8 8 8 4 4 4 4 4 4 4 4 4 4 4 4\n#&gt; [112] 4 6 6 6 4 4 4 4 6 6 6 6 6 6 8 8 8 8 8 8 8 8 8 8 8 8 6 6 8 8 4 4 4 4 6 6 6\n#&gt; [149] 6 6 6 6 6 8 6 6 6 6 8 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 6 6 6 8 4 4 4 4 6 6\n#&gt; [186] 6 4 4 4 4 6 6 6 4 4 4 4 4 8 8 4 4 4 6 6 6 6 4 4 4 4 6 4 4 4 4 4 5 5 6 6 4\n#&gt; [223] 4 4 4 5 5 4 4 4 4 6 6 6\n\n\n\n10.2.3 mutate()\n\n\nShow the codemutate(mpg,\n       id=nrow(mpg),\n       .before = 1)|&gt; DT::datatable()\n\n\n\n\nShow the code\nmutate(mpg,\n       id=nrow(mpg),\n       .after = 1)|&gt; DT::datatable()\n\n\n\n\nShow the code\nmutate(mpg,\n       id=nrow(mpg),\n       .keep = \"used\")|&gt; DT::datatable()\n\n\n\n\n\n\n10.2.4 rename()\n\n\nShow the coderename(mpg,生产厂商=manufacturer) |&gt; head()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n生产厂商\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n\n\n\n\n\n\n\n10.2.5 relocate()\n\n\nShow the coderelocate(mpg , model:year ,.before = 1) |&gt; head()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmodel\ndispl\nyear\nmanufacturer\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\na4\n1.8\n1999\naudi\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\na4\n1.8\n1999\naudi\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\na4\n2.0\n2008\naudi\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\na4\n2.0\n2008\naudi\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\na4\n2.8\n1999\naudi\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\na4\n2.8\n1999\naudi\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n\n\n\n\n\nShow the coderelocate(mpg , model:year ,.after = cyl) |&gt; head()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmanufacturer\ncyl\nmodel\ndispl\nyear\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\naudi\n4\na4\n1.8\n1999\nauto(l5)\nf\n18\n29\np\ncompact\n\n\naudi\n4\na4\n1.8\n1999\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\naudi\n4\na4\n2.0\n2008\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\naudi\n4\na4\n2.0\n2008\nauto(av)\nf\n21\n30\np\ncompact\n\n\naudi\n6\na4\n2.8\n1999\nauto(l5)\nf\n16\n26\np\ncompact\n\n\naudi\n6\na4\n2.8\n1999\nmanual(m5)\nf\n18\n26\np\ncompact\n\n\n\n\n\n\n\n10.2.6 select()\n\n\n:用于选择一系列连续变量。\n!用于获取一组变量的补集。\n&以及|用于选择交集 或并集。\nc()用于组合选择。\n\n选择帮助程序( selection helpers )选择特定的列：\n\neverything()：匹配所有变量。\nlast_col()：选择最后一个变量，可能带有偏移量。\ngroup_cols()：选择所有分组列。\nstarts_with()：前缀开头。\nends_with()：后缀结尾。\ncontains()：包含文本字符串。\nmatches()：匹配正则表达式。\nnum_range()：匹配 x01、x02、x03 等数值范围。\n\n或者从存储在字符向量中的变量：\n\nall_of()：匹配字符向量中的变量名称。所有 名称必须存在，否则抛出越界错误（out-of-bounds error）。\nany_of()：与all_of()相同，只是对于不存在的名称不会抛出任何错误。\n\n或者使用谓词( predicate )函数：\n\n\nwhere(fn)：将该函数应用于所有变量并选择该函数返回TRUE的变量。\n\n\nShow the codedplyr::select(mpg,model:year)|&gt; DT::datatable()\n\n\n\n\nShow the codeselect(mpg,c(3,4,5))|&gt; DT::datatable()\n\n\n\n\nShow the codeselect(mpg,where(is.numeric))|&gt; DT::datatable()\n\n\n\n\nShow the codeselect(mpg,where(~is.numeric(.x) && mean(.x,na.rm=TRUE)&lt;50))|&gt; DT::datatable()\n\n\n\n\n\n\n10.2.7 across(.cols, .fns, ...)\n\n\nShow the codeiris &lt;- as_tibble(iris)\niris %&gt;%\n  mutate(across(where(is.double) & !c(Petal.Length, Petal.Width), round)) %&gt;% \n    head(6)\n\n\n\n\nSepal.Length\nSepal.Width\nPetal.Length\nPetal.Width\nSpecies\n\n\n\n5\n4\n1.4\n0.2\nsetosa\n\n\n5\n3\n1.4\n0.2\nsetosa\n\n\n5\n3\n1.3\n0.2\nsetosa\n\n\n5\n3\n1.5\n0.2\nsetosa\n\n\n5\n4\n1.4\n0.2\nsetosa\n\n\n5\n4\n1.7\n0.4\nsetosa\n\n\n\n\n\nShow the code\ncols &lt;- c(\"Sepal.Length\", \"Petal.Width\")\niris %&gt;%\n  mutate(across(all_of(cols), round))\n\n\n\n\nSepal.Length\nSepal.Width\nPetal.Length\nPetal.Width\nSpecies\n\n\n\n5\n3.5\n1.4\n0\nsetosa\n\n\n5\n3.0\n1.4\n0\nsetosa\n\n\n5\n3.2\n1.3\n0\nsetosa\n\n\n5\n3.1\n1.5\n0\nsetosa\n\n\n5\n3.6\n1.4\n0\nsetosa\n\n\n5\n3.9\n1.7\n0\nsetosa\n\n\n5\n3.4\n1.4\n0\nsetosa\n\n\n5\n3.4\n1.5\n0\nsetosa\n\n\n4\n2.9\n1.4\n0\nsetosa\n\n\n5\n3.1\n1.5\n0\nsetosa\n\n\n5\n3.7\n1.5\n0\nsetosa\n\n\n5\n3.4\n1.6\n0\nsetosa\n\n\n5\n3.0\n1.4\n0\nsetosa\n\n\n4\n3.0\n1.1\n0\nsetosa\n\n\n6\n4.0\n1.2\n0\nsetosa\n\n\n6\n4.4\n1.5\n0\nsetosa\n\n\n5\n3.9\n1.3\n0\nsetosa\n\n\n5\n3.5\n1.4\n0\nsetosa\n\n\n6\n3.8\n1.7\n0\nsetosa\n\n\n5\n3.8\n1.5\n0\nsetosa\n\n\n5\n3.4\n1.7\n0\nsetosa\n\n\n5\n3.7\n1.5\n0\nsetosa\n\n\n5\n3.6\n1.0\n0\nsetosa\n\n\n5\n3.3\n1.7\n0\nsetosa\n\n\n5\n3.4\n1.9\n0\nsetosa\n\n\n5\n3.0\n1.6\n0\nsetosa\n\n\n5\n3.4\n1.6\n0\nsetosa\n\n\n5\n3.5\n1.5\n0\nsetosa\n\n\n5\n3.4\n1.4\n0\nsetosa\n\n\n5\n3.2\n1.6\n0\nsetosa\n\n\n5\n3.1\n1.6\n0\nsetosa\n\n\n5\n3.4\n1.5\n0\nsetosa\n\n\n5\n4.1\n1.5\n0\nsetosa\n\n\n6\n4.2\n1.4\n0\nsetosa\n\n\n5\n3.1\n1.5\n0\nsetosa\n\n\n5\n3.2\n1.2\n0\nsetosa\n\n\n6\n3.5\n1.3\n0\nsetosa\n\n\n5\n3.6\n1.4\n0\nsetosa\n\n\n4\n3.0\n1.3\n0\nsetosa\n\n\n5\n3.4\n1.5\n0\nsetosa\n\n\n5\n3.5\n1.3\n0\nsetosa\n\n\n4\n2.3\n1.3\n0\nsetosa\n\n\n4\n3.2\n1.3\n0\nsetosa\n\n\n5\n3.5\n1.6\n1\nsetosa\n\n\n5\n3.8\n1.9\n0\nsetosa\n\n\n5\n3.0\n1.4\n0\nsetosa\n\n\n5\n3.8\n1.6\n0\nsetosa\n\n\n5\n3.2\n1.4\n0\nsetosa\n\n\n5\n3.7\n1.5\n0\nsetosa\n\n\n5\n3.3\n1.4\n0\nsetosa\n\n\n7\n3.2\n4.7\n1\nversicolor\n\n\n6\n3.2\n4.5\n2\nversicolor\n\n\n7\n3.1\n4.9\n2\nversicolor\n\n\n6\n2.3\n4.0\n1\nversicolor\n\n\n6\n2.8\n4.6\n2\nversicolor\n\n\n6\n2.8\n4.5\n1\nversicolor\n\n\n6\n3.3\n4.7\n2\nversicolor\n\n\n5\n2.4\n3.3\n1\nversicolor\n\n\n7\n2.9\n4.6\n1\nversicolor\n\n\n5\n2.7\n3.9\n1\nversicolor\n\n\n5\n2.0\n3.5\n1\nversicolor\n\n\n6\n3.0\n4.2\n2\nversicolor\n\n\n6\n2.2\n4.0\n1\nversicolor\n\n\n6\n2.9\n4.7\n1\nversicolor\n\n\n6\n2.9\n3.6\n1\nversicolor\n\n\n7\n3.1\n4.4\n1\nversicolor\n\n\n6\n3.0\n4.5\n2\nversicolor\n\n\n6\n2.7\n4.1\n1\nversicolor\n\n\n6\n2.2\n4.5\n2\nversicolor\n\n\n6\n2.5\n3.9\n1\nversicolor\n\n\n6\n3.2\n4.8\n2\nversicolor\n\n\n6\n2.8\n4.0\n1\nversicolor\n\n\n6\n2.5\n4.9\n2\nversicolor\n\n\n6\n2.8\n4.7\n1\nversicolor\n\n\n6\n2.9\n4.3\n1\nversicolor\n\n\n7\n3.0\n4.4\n1\nversicolor\n\n\n7\n2.8\n4.8\n1\nversicolor\n\n\n7\n3.0\n5.0\n2\nversicolor\n\n\n6\n2.9\n4.5\n2\nversicolor\n\n\n6\n2.6\n3.5\n1\nversicolor\n\n\n6\n2.4\n3.8\n1\nversicolor\n\n\n6\n2.4\n3.7\n1\nversicolor\n\n\n6\n2.7\n3.9\n1\nversicolor\n\n\n6\n2.7\n5.1\n2\nversicolor\n\n\n5\n3.0\n4.5\n2\nversicolor\n\n\n6\n3.4\n4.5\n2\nversicolor\n\n\n7\n3.1\n4.7\n2\nversicolor\n\n\n6\n2.3\n4.4\n1\nversicolor\n\n\n6\n3.0\n4.1\n1\nversicolor\n\n\n6\n2.5\n4.0\n1\nversicolor\n\n\n6\n2.6\n4.4\n1\nversicolor\n\n\n6\n3.0\n4.6\n1\nversicolor\n\n\n6\n2.6\n4.0\n1\nversicolor\n\n\n5\n2.3\n3.3\n1\nversicolor\n\n\n6\n2.7\n4.2\n1\nversicolor\n\n\n6\n3.0\n4.2\n1\nversicolor\n\n\n6\n2.9\n4.2\n1\nversicolor\n\n\n6\n2.9\n4.3\n1\nversicolor\n\n\n5\n2.5\n3.0\n1\nversicolor\n\n\n6\n2.8\n4.1\n1\nversicolor\n\n\n6\n3.3\n6.0\n2\nvirginica\n\n\n6\n2.7\n5.1\n2\nvirginica\n\n\n7\n3.0\n5.9\n2\nvirginica\n\n\n6\n2.9\n5.6\n2\nvirginica\n\n\n6\n3.0\n5.8\n2\nvirginica\n\n\n8\n3.0\n6.6\n2\nvirginica\n\n\n5\n2.5\n4.5\n2\nvirginica\n\n\n7\n2.9\n6.3\n2\nvirginica\n\n\n7\n2.5\n5.8\n2\nvirginica\n\n\n7\n3.6\n6.1\n2\nvirginica\n\n\n6\n3.2\n5.1\n2\nvirginica\n\n\n6\n2.7\n5.3\n2\nvirginica\n\n\n7\n3.0\n5.5\n2\nvirginica\n\n\n6\n2.5\n5.0\n2\nvirginica\n\n\n6\n2.8\n5.1\n2\nvirginica\n\n\n6\n3.2\n5.3\n2\nvirginica\n\n\n6\n3.0\n5.5\n2\nvirginica\n\n\n8\n3.8\n6.7\n2\nvirginica\n\n\n8\n2.6\n6.9\n2\nvirginica\n\n\n6\n2.2\n5.0\n2\nvirginica\n\n\n7\n3.2\n5.7\n2\nvirginica\n\n\n6\n2.8\n4.9\n2\nvirginica\n\n\n8\n2.8\n6.7\n2\nvirginica\n\n\n6\n2.7\n4.9\n2\nvirginica\n\n\n7\n3.3\n5.7\n2\nvirginica\n\n\n7\n3.2\n6.0\n2\nvirginica\n\n\n6\n2.8\n4.8\n2\nvirginica\n\n\n6\n3.0\n4.9\n2\nvirginica\n\n\n6\n2.8\n5.6\n2\nvirginica\n\n\n7\n3.0\n5.8\n2\nvirginica\n\n\n7\n2.8\n6.1\n2\nvirginica\n\n\n8\n3.8\n6.4\n2\nvirginica\n\n\n6\n2.8\n5.6\n2\nvirginica\n\n\n6\n2.8\n5.1\n2\nvirginica\n\n\n6\n2.6\n5.6\n1\nvirginica\n\n\n8\n3.0\n6.1\n2\nvirginica\n\n\n6\n3.4\n5.6\n2\nvirginica\n\n\n6\n3.1\n5.5\n2\nvirginica\n\n\n6\n3.0\n4.8\n2\nvirginica\n\n\n7\n3.1\n5.4\n2\nvirginica\n\n\n7\n3.1\n5.6\n2\nvirginica\n\n\n7\n3.1\n5.1\n2\nvirginica\n\n\n6\n2.7\n5.1\n2\nvirginica\n\n\n7\n3.2\n5.9\n2\nvirginica\n\n\n7\n3.3\n5.7\n2\nvirginica\n\n\n7\n3.0\n5.2\n2\nvirginica\n\n\n6\n2.5\n5.0\n2\nvirginica\n\n\n6\n3.0\n5.2\n2\nvirginica\n\n\n6\n3.4\n5.4\n2\nvirginica\n\n\n6\n3.0\n5.1\n2\nvirginica\n\n\n\n\n\nShow the code\n\niris %&gt;%\n  group_by(Species) %&gt;%\n  summarise(across(starts_with(\"Sepal\"), ~ mean(.x, na.rm = TRUE),.names = \"mean_{.col}\"))\n\n\n\n\nSpecies\nmean_Sepal.Length\nmean_Sepal.Width\n\n\n\nsetosa\n5.006\n3.428\n\n\nversicolor\n5.936\n2.770\n\n\nvirginica\n6.588\n2.974\n\n\n\n\n\nShow the code\n\n# 命名列表\niris %&gt;%\n  group_by(Species) %&gt;%\n  summarise(across(starts_with(\"Sepal\"), list(mean = mean, sd = sd), .names = \"{.col}_{.fn}\"))\n\n\n\n\n\n\n\n\n\n\n\nSpecies\nSepal.Length_mean\nSepal.Length_sd\nSepal.Width_mean\nSepal.Width_sd\n\n\n\nsetosa\n5.006\n0.3524897\n3.428\n0.3790644\n\n\nversicolor\n5.936\n0.5161711\n2.770\n0.3137983\n\n\nvirginica\n6.588\n0.6358796\n2.974\n0.3224966\n\n\n\n\n\nShow the code\niris %&gt;%\n  group_by(Species) %&gt;%\n  summarise(across(starts_with(\"Sepal\"), list(mean, sd), .names = \"{.col}_function{.fn}\"))\n\n\n\n\n\n\n\n\n\n\n\nSpecies\nSepal.Length_function1\nSepal.Length_function2\nSepal.Width_function1\nSepal.Width_function2\n\n\n\nsetosa\n5.006\n0.3524897\n3.428\n0.3790644\n\n\nversicolor\n5.936\n0.5161711\n2.770\n0.3137983\n\n\nvirginica\n6.588\n0.6358796\n2.974\n0.3224966\n\n\n\n\n\n\n\nShow the codeiris %&gt;%\n  dplyr::filter(if_any(ends_with(\"Width\"), ~ . &gt; 4))\n\n\n\n\nSepal.Length\nSepal.Width\nPetal.Length\nPetal.Width\nSpecies\n\n\n\n5.7\n4.4\n1.5\n0.4\nsetosa\n\n\n5.2\n4.1\n1.5\n0.1\nsetosa\n\n\n5.5\n4.2\n1.4\n0.2\nsetosa\n\n\n\n\n\n\n\nShow the codeiris %&gt;%\n  dplyr::filter(if_all(ends_with(\"Width\"), ~ . &gt; 2))\n\n\n\n\nSepal.Length\nSepal.Width\nPetal.Length\nPetal.Width\nSpecies\n\n\n\n6.3\n3.3\n6.0\n2.5\nvirginica\n\n\n7.1\n3.0\n5.9\n2.1\nvirginica\n\n\n6.5\n3.0\n5.8\n2.2\nvirginica\n\n\n7.6\n3.0\n6.6\n2.1\nvirginica\n\n\n7.2\n3.6\n6.1\n2.5\nvirginica\n\n\n6.8\n3.0\n5.5\n2.1\nvirginica\n\n\n5.8\n2.8\n5.1\n2.4\nvirginica\n\n\n6.4\n3.2\n5.3\n2.3\nvirginica\n\n\n7.7\n3.8\n6.7\n2.2\nvirginica\n\n\n7.7\n2.6\n6.9\n2.3\nvirginica\n\n\n6.9\n3.2\n5.7\n2.3\nvirginica\n\n\n6.7\n3.3\n5.7\n2.1\nvirginica\n\n\n6.4\n2.8\n5.6\n2.1\nvirginica\n\n\n6.4\n2.8\n5.6\n2.2\nvirginica\n\n\n7.7\n3.0\n6.1\n2.3\nvirginica\n\n\n6.3\n3.4\n5.6\n2.4\nvirginica\n\n\n6.9\n3.1\n5.4\n2.1\nvirginica\n\n\n6.7\n3.1\n5.6\n2.4\nvirginica\n\n\n6.9\n3.1\n5.1\n2.3\nvirginica\n\n\n6.8\n3.2\n5.9\n2.3\nvirginica\n\n\n6.7\n3.3\n5.7\n2.5\nvirginica\n\n\n6.7\n3.0\n5.2\n2.3\nvirginica\n\n\n6.2\n3.4\n5.4\n2.3\nvirginica",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>数据清洗</span>"
    ]
  },
  {
    "objectID": "transform_tidy.html#按组操作",
    "href": "transform_tidy.html#按组操作",
    "title": "\n10  数据清洗\n",
    "section": "\n10.3 按组操作",
    "text": "10.3 按组操作\n\n10.3.1 group_by()\n\n\nShow the codempg |&gt; \n    group_by(cyl,drv) |&gt; \n    summarise(n=n(),\n              .groups = \"drop_last\") #删除最后一个分组条件\n\n\n\n\ncyl\ndrv\nn\n\n\n\n4\n4\n23\n\n\n4\nf\n58\n\n\n5\nf\n4\n\n\n6\n4\n32\n\n\n6\nf\n43\n\n\n6\nr\n4\n\n\n8\n4\n48\n\n\n8\nf\n1\n\n\n8\nr\n21\n\n\n\n\n\nShow the code# drop 删除所有分组\n# keep 保留所有分组\n\n\n\n10.3.2 .by =\n\n\nShow the codempg %&gt;% \n    summarise(n=n(),\n              .by = c(cyl,drv))\n\n\n\n\ncyl\ndrv\nn\n\n\n\n4\nf\n58\n\n\n6\nf\n43\n\n\n4\n4\n23\n\n\n6\n4\n32\n\n\n8\n4\n48\n\n\n8\nr\n21\n\n\n6\nr\n4\n\n\n8\nf\n1\n\n\n5\nf\n4\n\n\n\n\n\n\n\n10.3.3 计数\n\nShow the codestarwars %&gt;% count(sex, gender, sort = TRUE)\n\n\n\n\nsex\ngender\nn\n\n\n\nmale\nmasculine\n60\n\n\nfemale\nfeminine\n16\n\n\nnone\nmasculine\n5\n\n\nNA\nNA\n4\n\n\nhermaphroditic\nmasculine\n1\n\n\nnone\nfeminine\n1\n\n\n\n\n\nShow the code\nstarwars %&gt;% group_by(sex, gender) %&gt;% \n    summarise(n=n(),.groups = \"drop\") %&gt;% \n    arrange(desc(n))\n\n\n\n\nsex\ngender\nn\n\n\n\nmale\nmasculine\n60\n\n\nfemale\nfeminine\n16\n\n\nnone\nmasculine\n5\n\n\nNA\nNA\n4\n\n\nhermaphroditic\nmasculine\n1\n\n\nnone\nfeminine\n1\n\n\n\n\n\n\n\n10.3.4 rowwise()\n\n\nShow the codeoptions(digits = 3)\nset.seed(123)\ndf &lt;- tibble(x = runif(6), y = runif(6), z = runif(6))\ndf\n\n\n\n\nx\ny\nz\n\n\n\n0.288\n0.528\n0.678\n\n\n0.788\n0.892\n0.573\n\n\n0.409\n0.551\n0.103\n\n\n0.883\n0.457\n0.900\n\n\n0.940\n0.957\n0.246\n\n\n0.046\n0.453\n0.042\n\n\n\n\n\nShow the code\ndf %&gt;% mutate(m = pmin(x, y, z))\n\n\n\n\nx\ny\nz\nm\n\n\n\n0.288\n0.528\n0.678\n0.288\n\n\n0.788\n0.892\n0.573\n0.573\n\n\n0.409\n0.551\n0.103\n0.103\n\n\n0.883\n0.457\n0.900\n0.457\n\n\n0.940\n0.957\n0.246\n0.246\n\n\n0.046\n0.453\n0.042\n0.042\n\n\n\n\n\n\n\n10.3.5 reframe()\n\n\nShow the codedf &lt;- tibble(\n  g = c(1, 1, 1, 2, 2, 2, 2),\n  x = c(1:7)\n)\ndf %&gt;%\n  reframe(x = mean(x), .by = g)\n\n\n\n\ng\nx\n\n\n\n1\n2.0\n\n\n2\n5.5",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>数据清洗</span>"
    ]
  },
  {
    "objectID": "transform_tidy.html#按数据框操作",
    "href": "transform_tidy.html#按数据框操作",
    "title": "\n10  数据清洗\n",
    "section": "\n10.4 按数据框操作",
    "text": "10.4 按数据框操作\n\n10.4.1 绑定操作\n\n10.4.1.1 bing_cols()\n\n\nShow the codedf1 &lt;- tibble(x = 1:3)\ndf2 &lt;- tibble(y = 3:1)\nbind_cols(df1, df2)\n\n\n\n\nx\ny\n\n\n\n1\n3\n\n\n2\n2\n\n\n3\n1\n\n\n\n\n\n\n\n10.4.1.2 bind_rows()\n\n\nShow the codedf1 &lt;- tibble(x = 1:2, y = letters[1:2])\ndf2 &lt;- tibble(x = 4:5, z = 1:2)\n\nbind_rows(df1, df2)\n\n\n\n\nx\ny\nz\n\n\n\n1\na\nNA\n\n\n2\nb\nNA\n\n\n4\nNA\n1\n\n\n5\nNA\n2\n\n\n\n\n\n\n\n10.4.2 集合操作\n集合运算 要求变量名（列）完全相同,把观测（行）看成是集合中的元素\n\nShow the codex&lt;-tibble(ID=c(1,2),X=c(\"a1\",'a2'))\ny&lt;-tibble(ID=c(2,3),X=c(\"a2\",'a3'))\nx;y\n\n\n\n\nID\nX\n\n\n\n1\na1\n\n\n2\na2\n\n\n\n\n\n\n\n\n\nID\nX\n\n\n\n2\na2\n\n\n3\na3\n\n\n\n\n\n\n\nShow the codedplyr::intersect(x,y) \n\n\n\n\nID\nX\n\n\n2\na2\n\n\n\n\nShow the codeunion(x,y)\n\n\n\n\nID\nX\n\n\n\n1\na1\n\n\n2\na2\n\n\n3\na3\n\n\n\n\n\nShow the codeunion_all(x,y)\n\n\n\n\nID\nX\n\n\n\n1\na1\n\n\n2\na2\n\n\n2\na2\n\n\n3\na3\n\n\n\n\n\nShow the code\ndplyr::setdiff(x,y) #返回在x中不在y中\n\n\n\n\nID\nX\n\n\n1\na1\n\n\n\n\nShow the codesymdiff(x,y)  # 在x不在y中的行和在y中不在x中的行\n\n\n\n\nID\nX\n\n\n\n1\na1\n\n\n3\na3\n\n\n\n\n\nShow the codesetequal(x,y)#判断是否相等\n#&gt; [1] FALSE\n\n\n\n10.4.3 连接操作\n\nShow the codex &lt;- tribble(\n  ~ID, ~X,\n  1, \"x1\",\n  2, \"x2\",\n  3, \"x3\"\n)\ny &lt;- tribble(\n  ~id, ~Y,\n  1, \"y1\",\n  2, \"y2\",\n  4, \"y4\"\n)\nx;y\n\n\n\n\nID\nX\n\n\n\n1\nx1\n\n\n2\nx2\n\n\n3\nx3\n\n\n\n\n\n\n\n\n\nid\nY\n\n\n\n1\ny1\n\n\n2\ny2\n\n\n4\ny4\n\n\n\n\n\n\n\n10.4.3.1 mutate-joins\n\nShow the code# 左连接\nleft_join(x, y, by = join_by(ID == id))\n\n\n\n\nID\nX\nY\n\n\n\n1\nx1\ny1\n\n\n2\nx2\ny2\n\n\n3\nx3\nNA\n\n\n\n\n\nShow the code\n# 右连接\nright_join(x, y, by = join_by(ID == id))\n\n\n\n\nID\nX\nY\n\n\n\n1\nx1\ny1\n\n\n2\nx2\ny2\n\n\n4\nNA\ny4\n\n\n\n\n\nShow the code\n\n# 全连接\nfull_join(x, y, by = join_by(ID == id))\n\n\n\n\nID\nX\nY\n\n\n\n1\nx1\ny1\n\n\n2\nx2\ny2\n\n\n3\nx3\nNA\n\n\n4\nNA\ny4\n\n\n\n\n\nShow the code\n# 内连接\ninner_join(x, y, by = join_by(ID == id))\n\n\n\n\nID\nX\nY\n\n\n\n1\nx1\ny1\n\n\n2\nx2\ny2\n\n\n\n\n\nShow the codeinner_join(x,y, by = join_by(ID &gt;=id), keep = TRUE)\n\n\n\n\nID\nX\nid\nY\n\n\n\n1\nx1\n1\ny1\n\n\n2\nx2\n1\ny1\n\n\n2\nx2\n2\ny2\n\n\n3\nx3\n1\ny1\n\n\n3\nx3\n2\ny2\n\n\n\n\n\nShow the code#滚动联接  rolling join 类似于不等式连接，但仅匹配最近一个值。\ninner_join(x,y, join_by(closest(ID &gt;=id)))\n\n\n\n\nID\nX\nid\nY\n\n\n\n1\nx1\n1\ny1\n\n\n2\nx2\n2\ny2\n\n\n3\nx3\n2\ny2\n\n\n\n\n\n\n\n10.4.3.2 filter-joins\n对第一个数据框进行 筛选\n\nShow the code# 半连接\nsemi_join(x, y, by = join_by(ID == id))\n\n\n\n\nID\nX\n\n\n\n1\nx1\n\n\n2\nx2\n\n\n\n\n\nShow the code\n# 反连接\nanti_join(x, y, by = join_by(ID == id))\n\n\n\n\nID\nX\n\n\n3\nx3\n\n\n\n\n\n\n10.4.3.3 cross-join\n\nShow the code#交叉连接\ncross_join(x,y)         #nrow(x) * nrow(y)\n\n\n\n\nID\nX\nid\nY\n\n\n\n1\nx1\n1\ny1\n\n\n1\nx1\n2\ny2\n\n\n1\nx1\n4\ny4\n\n\n2\nx2\n1\ny1\n\n\n2\nx2\n2\ny2\n\n\n2\nx2\n4\ny4\n\n\n3\nx3\n1\ny1\n\n\n3\nx3\n2\ny2\n\n\n3\nx3\n4\ny4\n\n\n\n\n\nShow the code\n\nnest_join(x,y,by = join_by(ID==id))-&gt;nested\n\nnested[[3]]\n#&gt; [[1]]\n#&gt; # A tibble: 1 × 1\n#&gt;   Y    \n#&gt;   &lt;chr&gt;\n#&gt; 1 y1   \n#&gt; \n#&gt; [[2]]\n#&gt; # A tibble: 1 × 1\n#&gt;   Y    \n#&gt;   &lt;chr&gt;\n#&gt; 1 y2   \n#&gt; \n#&gt; [[3]]\n#&gt; # A tibble: 0 × 1\n#&gt; # ℹ 1 variable: Y &lt;chr&gt;\n\n\n\n10.4.3.4 group_nest()\n\n\nShow the codelibrary(tidyverse)\nlibrary(broom)\ndata(crickets, package = \"modeldata\")\nnames(crickets)\n#&gt; [1] \"species\" \"temp\"    \"rate\"\n\nsplit_by_species &lt;- crickets %&gt;% \n  group_nest(species) \nsplit_by_species\n\n\n\n\n\n\n\n\nspecies\ndata\n\n\n\nO. exclamationis\n20.8, 20.8, 24.0, 24.0, 24.0, 24.0, 26.2, 26.2, 26.2, 26.2, 28.4, 29.0, 30.4, 30.4, 67.9, 65.1, 77.3, 78.7, 79.4, 80.4, 85.8, 86.6, 87.5, 89.1, 98.6, 100.8, 99.3, 101.7\n\n\nO. niveus\n17.2, 18.3, 18.3, 18.3, 18.9, 18.9, 20.4, 21.0, 21.0, 22.1, 23.5, 24.2, 25.9, 26.5, 26.5, 26.5, 28.6, 44.3, 47.2, 47.6, 49.6, 50.3, 51.8, 60.0, 58.5, 58.9, 60.7, 69.8, 70.9, 76.2, 76.1, 77.0, 77.7, 84.7\n\n\n\n\n\nShow the code\nmodel_by_species &lt;- \n  split_by_species %&gt;% \n  mutate(model = map(data, ~ lm(rate ~ temp, data = .x)))\nmodel_by_species\n\n\n\n\n\n\n\n\n\nspecies\ndata\nmodel\n\n\n\nO. exclamationis\n20.8, 20.8, 24.0, 24.0, 24.0, 24.0, 26.2, 26.2, 26.2, 26.2, 28.4, 29.0, 30.4, 30.4, 67.9, 65.1, 77.3, 78.7, 79.4, 80.4, 85.8, 86.6, 87.5, 89.1, 98.6, 100.8, 99.3, 101.7\n-11, 3.75, 0.911, -1.89, -1.69, -0.294, 0.406, 1.41, -1.45, -0.647, 0.253, 1.85, 3.1, 3.05, -3.7, -1.3, -320, 41.6, -1.79, -0.387, 0.313, 1.31, -1.85, -1.05, -0.146, 1.45, 2.4, 2.26, -4.68, -2.28, 2, 67, 67, 79, 79, 79, 79, 87.2, 87.2, 87.2, 87.2, 95.5, 97.8, 103, 103, 0, 1, -3.74, 0.267, 0.267, 0.267, 0.267, 0.267, 0.267, 0.267, 0.267, 0.267, 0.267, 0.267, 0.267, 0.267, -96.4, 11.1, 0.0642, 0.0642, 0.0642, 0.0642, -0.134, -0.134, -0.134, -0.134, -0.333, -0.387, -0.513, -0.513, 1.27, 1.35, 1, 2, 1e-07, 2, 12, lm(formula = rate ~ temp, data = .x), rate ~ temp, 67.9, 65.1, 77.3, 78.7, 79.4, 80.4, 85.8, 86.6, 87.5, 89.1, 98.6, 101, 99.3, 102, 20.8, 20.8, 24, 24, 24, 24, 26.2, 26.2, 26.2, 26.2, 28.4, 29, 30.4, 30.4\n\n\nO. niveus\n17.2, 18.3, 18.3, 18.3, 18.9, 18.9, 20.4, 21.0, 21.0, 22.1, 23.5, 24.2, 25.9, 26.5, 26.5, 26.5, 28.6, 44.3, 47.2, 47.6, 49.6, 50.3, 51.8, 60.0, 58.5, 58.9, 60.7, 69.8, 70.9, 76.2, 76.1, 77.0, 77.7, 84.7\n-15.4, 3.52, -0.811, -1.78, -1.38, 0.62, -0.791, 0.709, 3.63, 0.0226, 0.423, -1.65, 2.53, 1.17, 0.487, -1.72, -0.823, -0.123, -0.51, -257, 51.5, -0.957, 1.04, -0.423, 1.08, 3.86, 0.196, 0.596, -1.58, 2.47, 1.04, 0.206, -2.06, -1.16, -0.46, -1.04, 2, 45.1, 49, 49, 49, 51.1, 51.1, 56.4, 58.5, 58.5, 62.3, 67.3, 69.7, 75.7, 77.8, 77.8, 77.8, 85.2, 0, 1, -4.12, 0.243, 0.243, 0.243, 0.243, 0.243, 0.243, 0.243, 0.243, 0.243, 0.243, 0.243, 0.243, 0.243, 0.243, 0.243, 0.243, -91.2, 14.6, 0.196, 0.196, 0.155, 0.155, 0.0521, 0.0111, 0.0111, -0.064, -0.16, -0.208, -0.324, -0.365, -0.365, -0.365, -0.508, 1.24, 1.2, 1, 2, 1e-07, 2, 15, lm(formula = rate ~ temp, data = .x), rate ~ temp, 44.3, 47.2, 47.6, 49.6, 50.3, 51.8, 60, 58.5, 58.9, 60.7, 69.8, 70.9, 76.2, 76.1, 77, 77.7, 84.7, 17.2, 18.3, 18.3, 18.3, 18.9, 18.9, 20.4, 21, 21, 22.1, 23.5, 24.2, 25.9, 26.5, 26.5, 26.5, 28.6\n\n\n\n\n\nShow the code\nmodel_by_species %&gt;% \n  mutate(coef = map(model, tidy)) %&gt;% \n  select(species, coef) %&gt;% \n  unnest(cols = c(coef))\n\n\n\n\n\n\n\n\n\n\n\n\nspecies\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\nO. exclamationis\n(Intercept)\n-11.04\n4.765\n-2.32\n0.039\n\n\nO. exclamationis\ntemp\n3.75\n0.184\n20.41\n0.000\n\n\nO. niveus\n(Intercept)\n-15.39\n2.347\n-6.56\n0.000\n\n\nO. niveus\ntemp\n3.52\n0.105\n33.59\n0.000\n\n\n\n\n\n\n\n10.4.3.5 group_split()",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>数据清洗</span>"
    ]
  },
  {
    "objectID": "transform_tidy.html#整洁操作",
    "href": "transform_tidy.html#整洁操作",
    "title": "\n10  数据清洗\n",
    "section": "\n10.5 整洁操作",
    "text": "10.5 整洁操作\n\n10.5.1 pivot_longer()\n\n\n10.5.1.1 列名包含一个变量名\n\nShow the codebillboard|&gt; DT::datatable()\n\n\n\n\n\n\nShow the codebillboard_longer &lt;- billboard |&gt; \n  pivot_longer(\n    cols = starts_with(\"wk\"), \n    names_to = \"week\", \n    values_to = \"排名\" ,\n    values_drop_na = TRUE,\n  ) |&gt; \n    mutate(\n        week=parse_number(week)\n    )\nbillboard_longer|&gt; DT::datatable()\n\n\n\n\n\n\nShow the codebillboard_longer |&gt; \n  ggplot(aes(x = week, y = 排名, group = track)) + \n  geom_line(alpha = 0.25) + \n  scale_y_reverse()\n\n\n\n歌曲排名随时间变化的折线图\n\n\n\n\n10.5.1.2 列名包含多个变量名\n\nShow the codewho2 |&gt; DT::datatable()\n\n\n\n\n\n\nShow the codewho2 |&gt; \n  pivot_longer(\n    cols = !(country:year),\n    names_to = c(\"diagnosis\", \"gender\", \"age\"), \n    names_sep = \"_\",\n    values_to = \"count\",\n    values_drop_na = T\n  ) |&gt; head()\n\n\n\n\ncountry\nyear\ndiagnosis\ngender\nage\ncount\n\n\n\nAfghanistan\n1997\nsp\nm\n014\n0\n\n\nAfghanistan\n1997\nsp\nm\n1524\n10\n\n\nAfghanistan\n1997\nsp\nm\n2534\n6\n\n\nAfghanistan\n1997\nsp\nm\n3544\n3\n\n\nAfghanistan\n1997\nsp\nm\n4554\n5\n\n\nAfghanistan\n1997\nsp\nm\n5564\n2\n\n\n\n\n\n\n\n10.5.1.3 列名包含变量名和变量值\n\nShow the codehousehold\n\n\n\n\nfamily\ndob_child1\ndob_child2\nname_child1\nname_child2\n\n\n\n1\n1998-11-26\n2000-01-29\nSusan\nJose\n\n\n2\n1996-06-22\nNA\nMark\nNA\n\n\n3\n2002-07-11\n2004-04-05\nSam\nSeth\n\n\n4\n2004-10-10\n2009-08-27\nCraig\nKhai\n\n\n5\n2000-12-05\n2005-02-28\nParker\nGracie\n\n\n\n\n\n\n\nShow the codehousehold |&gt; \n  pivot_longer(\n    cols = !family, \n    names_to = c(\".value\", \"child\"), # 使用透视列名称的第一个组件作为变量名称\n    names_sep = \"_\", \n    values_drop_na = TRUE\n  )\n\n\n\n\nfamily\nchild\ndob\nname\n\n\n\n1\nchild1\n1998-11-26\nSusan\n\n\n1\nchild2\n2000-01-29\nJose\n\n\n2\nchild1\n1996-06-22\nMark\n\n\n3\nchild1\n2002-07-11\nSam\n\n\n3\nchild2\n2004-04-05\nSeth\n\n\n4\nchild1\n2004-10-10\nCraig\n\n\n4\nchild2\n2009-08-27\nKhai\n\n\n5\nchild1\n2000-12-05\nParker\n\n\n5\nchild2\n2005-02-28\nGracie\n\n\n\n\n\n\n\nShow the codedf &lt;- tibble(ID=c(\"A\",\"B\",\"C\"),\n       GDP_2019=c(114,251,152),\n       GDP_2018=c(215,115,141),\n       GDP_2017=c(141,244,243)) \ndf\n\n\n\n\nID\nGDP_2019\nGDP_2018\nGDP_2017\n\n\n\nA\n114\n215\n141\n\n\nB\n251\n115\n244\n\n\nC\n152\n141\n243\n\n\n\n\n\nShow the code\ndf %&gt;% \n  pivot_longer(\n    cols = -ID,\n    names_to =c(\".value\",\"year\"),\n    names_sep = \"_\") %&gt;% \n    arrange(year)\n\n\n\n\nID\nyear\nGDP\n\n\n\nA\n2017\n141\n\n\nB\n2017\n244\n\n\nC\n2017\n243\n\n\nA\n2018\n215\n\n\nB\n2018\n115\n\n\nC\n2018\n141\n\n\nA\n2019\n114\n\n\nB\n2019\n251\n\n\nC\n2019\n152\n\n\n\n\n\n\n\nShow the code\ndf &lt;- tribble(\n  ~class1_name,~class1_major,~class2_name,~class2_major,~class3_name,~class3_major,\n  '张非',\"math\",'李斯','English','王武','statistic',\n  '钟爱','English','陈述','math','孙健','medicine'\n) \ndf\n\n\n\n\n\n\n\n\n\n\n\n\nclass1_name\nclass1_major\nclass2_name\nclass2_major\nclass3_name\nclass3_major\n\n\n\n张非\nmath\n李斯\nEnglish\n王武\nstatistic\n\n\n钟爱\nEnglish\n陈述\nmath\n孙健\nmedicine\n\n\n\n\n\nShow the codedf%&gt;% \n  pivot_longer(\n    col=starts_with(\"class\"),\n    names_to = c(\"group\",\".value\"),\n    names_sep = \"_\",\n  )\n\n\n\n\ngroup\nname\nmajor\n\n\n\nclass1\n张非\nmath\n\n\nclass2\n李斯\nEnglish\n\n\nclass3\n王武\nstatistic\n\n\nclass1\n钟爱\nEnglish\n\n\nclass2\n陈述\nmath\n\n\nclass3\n孙健\nmedicine\n\n\n\n\n\n\n\n10.5.2 pivot_wider()\n\n\nShow the codecms_patient_experience|&gt; DT::datatable()\n\n\n\n\n\n\nShow the codecms_patient_experience |&gt; \n  distinct(measure_cd, measure_title)\n\n\n\n\n\n\n\n\nmeasure_cd\nmeasure_title\n\n\n\nCAHPS_GRP_1\nCAHPS for MIPS SSM: Getting Timely Care, Appointments, and Information\n\n\nCAHPS_GRP_2\nCAHPS for MIPS SSM: How Well Providers Communicate\n\n\nCAHPS_GRP_3\nCAHPS for MIPS SSM: Patient’s Rating of Provider\n\n\nCAHPS_GRP_5\nCAHPS for MIPS SSM: Health Promotion and Education\n\n\nCAHPS_GRP_8\nCAHPS for MIPS SSM: Courteous and Helpful Office Staff\n\n\nCAHPS_GRP_12\nCAHPS for MIPS SSM: Stewardship of Patient Resources\n\n\n\n\n\n\n\nShow the codecms_patient_experience |&gt;\n    pivot_wider(\n        id_cols = starts_with(\"org\"),# 唯一标识列\n        names_from = measure_cd,\n        values_from = prf_rate\n    ) |&gt; DT::datatable()\n\n\n\n\n\n\n10.5.3 tidyr::separate_longer_*()\n\n\nShow the code# df |&gt; separate_longer_delim(cols, delim)\n# df |&gt; separate_longer_position(cols, width)\n# df |&gt; separate_wider_delim(cols, delim, names)\n# df |&gt; separate_wider_position(cols, widths)\n# df |&gt; separate_wider_regex(cols,patterns)\n\n\n\nShow the codedf1 &lt;- tibble(x = c(\"a,b,c\", \"d,e\", \"f\"))\ndf1 |&gt; \n  separate_longer_delim(x, delim = \",\")\n\n\n\n\nx\n\n\n\na\n\n\nb\n\n\nc\n\n\nd\n\n\ne\n\n\nf\n\n\n\n\n\nShow the code\ndf2 &lt;- tibble(x = c(\"1211\", \"131\", \"21\"))\ndf2 |&gt; \n  separate_longer_position(x, width = 1)\n\n\n\n\nx\n\n\n\n1\n\n\n2\n\n\n1\n\n\n1\n\n\n1\n\n\n3\n\n\n1\n\n\n2\n\n\n1\n\n\n\n\n\n\n\n10.5.4 separate_wider_*()\n\n\nShow the codedf3 &lt;- tibble(x = c(\"a10.1.2022\", \"b10.2.2011\", \"e15.1.2015\"))\ndf3\n\n\n\n\nx\n\n\n\na10.1.2022\n\n\nb10.2.2011\n\n\ne15.1.2015\n\n\n\n\n\nShow the codedf3 |&gt; \n  separate_wider_delim(\n    x,\n    delim = \".\",\n    names = c(\"code\", \"edition\", \"year\")\n  )\n\n\n\n\ncode\nedition\nyear\n\n\n\na10\n1\n2022\n\n\nb10\n2\n2011\n\n\ne15\n1\n2015\n\n\n\n\n\nShow the codedf3 |&gt; \n  separate_wider_delim(\n    x,\n    delim = \".\",\n    names = c(\"code\", NA, \"year\")\n  )\n\n\n\n\ncode\nyear\n\n\n\na10\n2022\n\n\nb10\n2011\n\n\ne15\n2015\n\n\n\n\n\nShow the code\ndf4 &lt;- tibble(x = c(\"202215TX\", \"202122LA\", \"202325CA\")) \ndf4 |&gt; \n  separate_wider_position(\n    x,\n    widths = c(year = 4, age = 2, state = 2)\n  )\n\n\n\n\nyear\nage\nstate\n\n\n\n2022\n15\nTX\n\n\n2021\n22\nLA\n\n\n2023\n25\nCA\n\n\n\n\n\nShow the code\ndf5 &lt;- tribble(\n    ~ str,\n    \"&lt;Sheryl&gt;-F_34\",\n    \"&lt;Kisha&gt;-F_45\",\n    \"&lt;Brandon&gt;-N_33\",\n    \"&lt;Sharon&gt;-F_38\",\n    \"&lt;Penny&gt;-F_58\",\n    \"&lt;Justin&gt;-M_41\",\n    \"&lt;Patricia&gt;-F_84\",\n)\ndf5 |&gt;\n    separate_wider_regex(str,\n                         patterns = c(\n                             \"&lt;\",\n                             name = \"[A-Za-z]+\",\n                             #匹配 ≥1 个字母\n                             \"&gt;-\",\n                             gender = \".\",\n                             #匹配除\\n以外任意字符\n                             \"_\",\n                             age = \"[0-9]+\"      #匹配 ≥1 个数字\n                         ))\n\n\n\n\nname\ngender\nage\n\n\n\nSheryl\nF\n34\n\n\nKisha\nF\n45\n\n\nBrandon\nN\n33\n\n\nSharon\nF\n38\n\n\nPenny\nF\n58\n\n\nJustin\nM\n41\n\n\nPatricia\nF\n84\n\n\n\n\n\n\n\n10.5.5 tidyr::extract()\n\nShow the codetibble(\n  obs.=c('Rich(Sam)','Wind(Ash)','Bil(Hela)'),\n  A_count=c(7,10,5)\n) %&gt;% \n  extract(obs.,into = c(\"site\",\"surveyor\"),\n          regex = \"(.*)\\\\((.*)\\\\)\")\n\n\n\n\nsite\nsurveyor\nA_count\n\n\n\nRich\nSam\n7\n\n\nWind\nAsh\n10\n\n\nBil\nHela\n5\n\n\n\n\n\n\n\n10.5.6 unite()\n\nShow the code# 合并列\ntable5\n\n\n\n\ncountry\ncentury\nyear\nrate\n\n\n\nAfghanistan\n19\n99\n745/19987071\n\n\nAfghanistan\n20\n00\n2666/20595360\n\n\nBrazil\n19\n99\n37737/172006362\n\n\nBrazil\n20\n00\n80488/174504898\n\n\nChina\n19\n99\n212258/1272915272\n\n\nChina\n20\n00\n213766/1280428583\n\n\n\n\n\nShow the codetable5 %&gt;% \n  unite(year_Y,century,year,sep='')\n\n\n\n\ncountry\nyear_Y\nrate\n\n\n\nAfghanistan\n1999\n745/19987071\n\n\nAfghanistan\n2000\n2666/20595360\n\n\nBrazil\n1999\n37737/172006362\n\n\nBrazil\n2000\n80488/174504898\n\n\nChina\n1999\n212258/1272915272\n\n\nChina\n2000\n213766/1280428583",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>数据清洗</span>"
    ]
  },
  {
    "objectID": "transform_tidy.html#重编码",
    "href": "transform_tidy.html#重编码",
    "title": "\n10  数据清洗\n",
    "section": "\n10.6 重编码",
    "text": "10.6 重编码\n\nShow the codestudents &lt;- read_csv(\"data/students.csv\", na = c(\"N/A\", \"\"))\nstudents\n\n\n\n\n\n\n\n\n\n\n\nStudent ID\nFull Name\nfavourite.food\nmealPlan\nAGE\n\n\n\n1\nSunil Huffmann\nStrawberry yoghurt\nLunch only\n4\n\n\n2\nBarclay Lynn\nFrench fries\nLunch only\n5\n\n\n3\nJayendra Lyne\nNA\nBreakfast and lunch\n7\n\n\n4\nLeon Rossini\nAnchovies\nLunch only\nNA\n\n\n5\nChidiegwu Dunkel\nPizza\nBreakfast and lunch\nfive\n\n\n6\nG??ven? Attila\nIce cream\nLunch only\n6\n\n\n\n\n\n\n\n10.6.0.1 变量名\n\nShow the codeif(!require(janitor)) install.packages(\"janitor\")\n\n# snake_case\nstudents |&gt;\n    janitor::clean_names(case=\"snake\") #\"title\"  \"lower_camel\" \"upper_camel\"\n\n\n\n\n\n\n\n\n\n\n\nstudent_id\nfull_name\nfavourite_food\nmeal_plan\nage\n\n\n\n1\nSunil Huffmann\nStrawberry yoghurt\nLunch only\n4\n\n\n2\nBarclay Lynn\nFrench fries\nLunch only\n5\n\n\n3\nJayendra Lyne\nNA\nBreakfast and lunch\n7\n\n\n4\nLeon Rossini\nAnchovies\nLunch only\nNA\n\n\n5\nChidiegwu Dunkel\nPizza\nBreakfast and lunch\nfive\n\n\n6\nG??ven? Attila\nIce cream\nLunch only\n6\n\n\n\n\n\n\n\n10.6.0.2 变量值\n缺失值",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>数据清洗</span>"
    ]
  },
  {
    "objectID": "functionals.html",
    "href": "functionals.html",
    "title": "\n11  泛函purrr\n",
    "section": "",
    "text": "11.1 map 变体\n高阶函数 （higher-order functions）\n泛函（functionals）是将函数作为输入并返回向量作为输出的函数。\n在R语言中，purrr是一个函数式编程包，它提供了一种简洁的方式来迭代数据结构。这个包的名字来源于它所提供的核心功能，即“纯”（pure）函数的迭代。在函数式编程中，纯函数是指给定相同的输入总是返回相同输出的函数，并且没有副作用（如更改全局变量的值-&gt;、写入磁盘write_csv()或显示在屏幕上print()）。\nmap 的基本构造如下，实际上是用 C 语言编写的，以节省性能，保留名称，并支持一些快捷方式。\nShow the codesimple_map &lt;- function(x, f, ...) {\n  out &lt;- vector(\"list\", length(x)) # 分配一个与输入长度相同的列表\n  for (i in seq_along(x)) {        # 用 for 循环填充列表\n    out[[i]] &lt;- f(x[[i]], ...)\n  }\n  out\n}",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>泛函`purrr`</span>"
    ]
  },
  {
    "objectID": "functionals.html#map-变体",
    "href": "functionals.html#map-变体",
    "title": "\n11  泛函purrr\n",
    "section": "",
    "text": "参数 \\ 返回\n列表\n原子\n同类型\n无\n\n\n\n一个参数\nmap()\n\nmap_lgl(), …\nmodify()\nwalk()\n\n\n两个参数\nmap2()\n\nmap2_lgl(), …\nmodify2()\nwalk2()\n\n\n一个参数 + 索引\nimap()\n\nimap_lgl(), …\nimodify()\niwalk()\n\n\nN 个参数\npmap()\n\npmap_lgl(), …\n—\npwalk()\n\n\n\n\n\n\n11.1.1 返回列表\npurrr::map(1:3,f) 接受一个向量和一个函数，为向量的每个元素调用一次函数，并在列表中返回结果，等价于list(f(1), f(2), f(3))\n\nShow the codetriple &lt;- function(x) x * 3\nmap(1:3, triple)\n#&gt; [[1]]\n#&gt; [1] 3\n#&gt; \n#&gt; [[2]]\n#&gt; [1] 6\n#&gt; \n#&gt; [[3]]\n#&gt; [1] 9\n\n\n\n11.1.2 返回原子向量\nmap_lgl()、map_int()、map_dbl()、map_chr() 每个都返回一个指定类型的原子向量\n\nShow the codemap_chr(mtcars, typeof) \n#&gt;      mpg      cyl     disp       hp     drat       wt     qsec       vs \n#&gt; \"double\" \"double\" \"double\" \"double\" \"double\" \"double\" \"double\" \"double\" \n#&gt;       am     gear     carb \n#&gt; \"double\" \"double\" \"double\"\nmap_lgl(mtcars, is.double)  \n#&gt;  mpg  cyl disp   hp drat   wt qsec   vs   am gear carb \n#&gt; TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nn_unique &lt;- function(x)length(unique(x)) \nmap_int(mtcars, n_unique)  \n#&gt;  mpg  cyl disp   hp drat   wt qsec   vs   am gear carb \n#&gt;   25    3   27   22   22   29   30    2    2    3    6\n\nmap_dbl(mtcars, mean)\n#&gt;        mpg        cyl       disp         hp       drat         wt       qsec \n#&gt;  20.090625   6.187500 230.721875 146.687500   3.596563   3.217250  17.848750 \n#&gt;         vs         am       gear       carb \n#&gt;   0.437500   0.406250   3.687500   2.812500\n\n\n\nShow the codeby_cyl &lt;- split(mtcars, mtcars$cyl)\nby_cyl %&gt;% \n  map(~ lm(mpg ~ wt, data = .x)) %&gt;% \n  map(coef) %&gt;% \n  map_dbl(2)\n#&gt;         4         6         8 \n#&gt; -5.647025 -2.780106 -2.192438\n\n\n\n11.1.3 返回与输入类型相同的输出：modify()\n\n\nShow the codedf &lt;- data.frame(\n  x = 1:3,\n  y = 6:4\n)\n\n# 返回列表\nmap(df, ~ .x * 2)\n#&gt; $x\n#&gt; [1] 2 4 6\n#&gt; \n#&gt; $y\n#&gt; [1] 12 10  8\n\n# 返回数据框\nmodify(df, ~ .x * 2)\n\n\n\n\nx\ny\n\n\n\n2\n12\n\n\n4\n10\n\n\n6\n8\n\n\n\n\n\n\n\n11.1.4 无返回\n某些函数主要是为了它们的副作用（如cat()、write_csv()、ggsave()）而被调用，并且捕获和存储它们的结果是没有意义的。\n\nShow the codewelcome &lt;- function(x) {\n  cat(\"Welcome \", x, \"!\\n\", sep = \"\")\n}\nnames &lt;- c(\"Hadley\", \"Jenny\")\nmap(names, welcome)\n#&gt; Welcome Hadley!\n#&gt; Welcome Jenny!\n#&gt; [[1]]\n#&gt; NULL\n#&gt; \n#&gt; [[2]]\n#&gt; NULL\n\n\n\nShow the codewalk(names, welcome)\n#&gt; Welcome Hadley!\n#&gt; Welcome Jenny!\n\n\n\nShow the codecyls &lt;- split(mtcars, mtcars$cyl)\npaths &lt;- paste0(\"data/cyl-\", names(cyls), \".csv\")\nwalk2(cyls, paths, write.csv)\n\n\n等价于write.csv(cyls[[1]]paths[[1]])、write.csv(cyls[[2]],paths[[2]])\nwrite.csv(cyls[[3]], paths[[3]])\n\n11.1.5 两个输入\n\nShow the codeset.seed(10)\nxs &lt;- map(1:8, ~ runif(10))\n\n\n# 权重\nset.seed(100)\nws &lt;- map(1:8, ~ rpois(10, 5) + 1)\n\nxs[[1]][[1]] &lt;- NA\nxs\n#&gt; [[1]]\n#&gt;  [1]         NA 0.30676851 0.42690767 0.69310208 0.08513597 0.22543662\n#&gt;  [7] 0.27453052 0.27230507 0.61582931 0.42967153\n#&gt; \n#&gt; [[2]]\n#&gt;  [1] 0.65165567 0.56773775 0.11350898 0.59592531 0.35804998 0.42880942\n#&gt;  [7] 0.05190332 0.26417767 0.39879073 0.83613414\n#&gt; \n#&gt; [[3]]\n#&gt;  [1] 0.8647212 0.6153524 0.7751099 0.3555687 0.4058500 0.7066469 0.8382877\n#&gt;  [8] 0.2395891 0.7707715 0.3558977\n#&gt; \n#&gt; [[4]]\n#&gt;  [1] 0.53559704 0.09308813 0.16980304 0.89983245 0.42263761 0.74774647\n#&gt;  [7] 0.82265258 0.95465365 0.68544451 0.50050323\n#&gt; \n#&gt; [[5]]\n#&gt;  [1] 0.27548386 0.22890394 0.01443391 0.72896456 0.24988047 0.16118328\n#&gt;  [7] 0.01704265 0.48610035 0.10290017 0.80154700\n#&gt; \n#&gt; [[6]]\n#&gt;  [1] 0.3543281 0.9364325 0.2458664 0.4731415 0.1915609 0.5832220 0.4594732\n#&gt;  [8] 0.4674340 0.3998326 0.5052856\n#&gt; \n#&gt; [[7]]\n#&gt;  [1] 0.03188816 0.11446759 0.46893548 0.39698674 0.83361919 0.76112174\n#&gt;  [7] 0.57335645 0.44750805 0.08380201 0.21913855\n#&gt; \n#&gt; [[8]]\n#&gt;  [1] 0.07557029 0.53442678 0.64135658 0.52573932 0.03928139 0.54585984\n#&gt;  [7] 0.37276310 0.96130241 0.25734157 0.20795168\n\n# 未加权均值\nmap_dbl(xs, mean)\n#&gt; [1]        NA 0.4266693 0.5927795 0.5831959 0.3066440 0.4616577 0.3930824\n#&gt; [8] 0.4161593\n# 加权均值  weighted.mean()\nmap2_dbl(xs, ws, weighted.mean)\n#&gt; [1]        NA 0.4590300 0.5834602 0.5998278 0.3067582 0.4448242 0.3947274\n#&gt; [8] 0.4418898\nmap2_dbl(xs, ws, weighted.mean, na.rm = TRUE)\n#&gt; [1] 0.3479728 0.4590300 0.5834602 0.5998278 0.3067582 0.4448242 0.3947274\n#&gt; [8] 0.4418898\n\n\n\n11.1.6 遍历值和索引\n\nimap(x, f)等价于map2(x, names(x), f)、map2(x, seq_along(x), f)\nimap()通常可用于构建标签：\n\nShow the codeimap_chr(iris, ~ paste0(\"The first value of \", .y, \" is \", .x[[1]]))\n#&gt;                             Sepal.Length \n#&gt; \"The first value of Sepal.Length is 5.1\" \n#&gt;                              Sepal.Width \n#&gt;  \"The first value of Sepal.Width is 3.5\" \n#&gt;                             Petal.Length \n#&gt; \"The first value of Petal.Length is 1.4\" \n#&gt;                              Petal.Width \n#&gt;  \"The first value of Petal.Width is 0.2\" \n#&gt;                                  Species \n#&gt;   \"The first value of Species is setosa\"\nmap2_chr(iris,names(iris),~ paste0(\"The first value of \", .y, \" is \", .x[[1]]))\n#&gt;                             Sepal.Length \n#&gt; \"The first value of Sepal.Length is 5.1\" \n#&gt;                              Sepal.Width \n#&gt;  \"The first value of Sepal.Width is 3.5\" \n#&gt;                             Petal.Length \n#&gt; \"The first value of Petal.Length is 1.4\" \n#&gt;                              Petal.Width \n#&gt;  \"The first value of Petal.Width is 0.2\" \n#&gt;                                  Species \n#&gt;   \"The first value of Species is setosa\"\n\n\n如果向量未命名，则第二个参数将是索引：\n\nShow the codex &lt;- map(1:6, ~ sample(1000, 10))\nimap_chr(x, ~ paste0(\"The maximum value of \", .y, \" is \", max(.x)))\n#&gt; [1] \"The maximum value of 1 is 965\" \"The maximum value of 2 is 978\"\n#&gt; [3] \"The maximum value of 3 is 949\" \"The maximum value of 4 is 871\"\n#&gt; [5] \"The maximum value of 5 is 843\" \"The maximum value of 6 is 848\"\nmap2_chr(x,seq_along(x), ~ paste0(\"The highest value of \", .y, \" is \", max(.x)))\n#&gt; [1] \"The highest value of 1 is 965\" \"The highest value of 2 is 978\"\n#&gt; [3] \"The highest value of 3 is 949\" \"The highest value of 4 is 871\"\n#&gt; [5] \"The highest value of 5 is 843\" \"The highest value of 6 is 848\"\n\n\n\n11.1.7 任意数量的输入\n\nmap2(x, y, f ) 等价于 pmap(list(x, y), f)\n\nShow the codepmap_dbl(list(xs, ws), weighted.mean)\n#&gt; [1]        NA 0.4590300 0.5834602 0.5998278 0.3067582 0.4448242 0.3947274\n#&gt; [8] 0.4418898\npmap_dbl(list(xs, ws), weighted.mean, na.rm = TRUE)\n#&gt; [1] 0.3479728 0.4590300 0.5834602 0.5998278 0.3067582 0.4448242 0.3947274\n#&gt; [8] 0.4418898\n\n\n\nShow the code# 命名列表 调用函数\nparams &lt;- tibble::tribble(\n  ~ n, ~ min, ~ max,\n   1L,     0,     1,\n   2L,    10,   100,\n   3L,   100,  1000\n)\ntypeof(params)\n#&gt; [1] \"list\"\npmap(params, runif)\n#&gt; [[1]]\n#&gt; [1] 0.08703467\n#&gt; \n#&gt; [[2]]\n#&gt; [1] 22.92254 91.76306\n#&gt; \n#&gt; [[3]]\n#&gt; [1] 210.2793 755.9765 955.3395",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>泛函`purrr`</span>"
    ]
  },
  {
    "objectID": "functionals.html#reduce-家族",
    "href": "functionals.html#reduce-家族",
    "title": "\n11  泛函purrr\n",
    "section": "\n11.2 reduce 家族",
    "text": "11.2 reduce 家族\n通过迭代应用两个输入的函数（a binary function）将列表简化为单个值。\n\n11.2.1 reduce()\n\nreduce()获取长度为 n 的向量，并通过一次调用具有一对值的函数来生成长度为 1 的向量\n\n\n\n\nreduce(1:4, f)等价于f(f(f(1, 2), 3), 4)\n\nShow the codel &lt;- map(1:4, ~ sample(1:10, 15, replace = T))\n\n# 交集\nreduce(l, intersect)\n#&gt; [1] 10  5  7  4\n\n# 并集\nreduce(l, union)\n#&gt;  [1] 10  5  7  8  1  6  3  4  2  9\n\n\n\nShow the codesimple_reduce &lt;- function(x, f) {\n  out &lt;- x[[1]]\n  for (i in seq(2, length(x))) {\n    out &lt;- f(out, x[[i]])\n  }\n  out\n}\n\n\n\n11.2.2 accumulate()\n\n第一个变体 ，不仅返回最终结果，还返回所有中间结果\n\nShow the codeaccumulate(l, intersect)\n#&gt; [[1]]\n#&gt;  [1] 10  5  7  8  1  8  6 10  3  6 10  6  8  3  4\n#&gt; \n#&gt; [[2]]\n#&gt; [1] 10  5  7  1  4\n#&gt; \n#&gt; [[3]]\n#&gt; [1] 10  5  7  1  4\n#&gt; \n#&gt; [[4]]\n#&gt; [1] 10  5  7  4\n\n\n\nShow the codex &lt;- c(4, 3, 10)\nreduce(x, `+`)\n#&gt; [1] 17\n\naccumulate(x, `+`)\n#&gt; [1]  4  7 17\n\n\n\n11.2.3 reduce2(x,y,f,.init)",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>泛函`purrr`</span>"
    ]
  },
  {
    "objectID": "functionals.html#谓词泛函",
    "href": "functionals.html#谓词泛函",
    "title": "\n11  泛函purrr\n",
    "section": "\n11.3 谓词泛函",
    "text": "11.3 谓词泛函\n在编程和数学中，“谓词”（Predicate）是一个表达式，它返回一个布尔值（真或假）。谓词通常用于逻辑和函数式编程中，作为判断或决策的基础。\n谓词泛函（Predicate Functionals）是谓词的一个特例，它是一个接受一个或多个参数，并返回一个布尔值的函数。谓词泛函在很多编程语言中都很常见，尤其是在支持函数式编程的语言中。\n谓词泛函的一些关键特点包括：\n\n返回布尔值：谓词泛函的输出是一个布尔值，即真（true）或假（false）。\n接受参数：谓词泛函可以接收一个或多个参数，这些参数的值会影响函数的返回结果。\n无副作用：在函数式编程中，谓词泛函通常是纯函数，即它们不会产生副作用，也不会修改外部状态。\n逻辑判断：谓词泛函常用于逻辑判断，如条件语句（if）、循环（while、for）等。\n\n\n\nsome(.x, .p)如果存在元素匹配，则返回TRUE;every(.x, .p)如果所有元素都匹配，则返回TRUE;none(.x, .p)如果没有元素匹配，则返回TRUE\n当它看到第一个时返回，当它们看到第一个或时返回。\n\ndetect(.x, .p)返回第一个匹配项的值;detect_index(.x, .p) 返回第一个匹配项的位置。\nkeep(.x, .p) 保留所有匹配的元素; discard(.x, .p)删除所有匹配的元素。\n\n\nShow the codedf &lt;- data.frame(\n  num1 = c(0, 10, 20),\n  num2 = c(5, 6, 7),\n  chr1 = c(\"a\", \"b\", \"c\")\n)\ndetect(df, is.factor)\n#&gt; NULL\ndetect_index(df, is.factor)\n#&gt; [1] 0\nstr(keep(df, is.factor))\n#&gt; 'data.frame':    3 obs. of  0 variables\nstr(discard(df, is.factor))\n#&gt; 'data.frame':    3 obs. of  3 variables:\n#&gt;  $ num1: num  0 10 20\n#&gt;  $ num2: num  5 6 7\n#&gt;  $ chr1: chr  \"a\" \"b\" \"c\"\n\n\nmap变体也有谓词泛函\n\nShow the codestr(map_if(df, is.numeric, mean))\n#&gt; List of 3\n#&gt;  $ num1: num 10\n#&gt;  $ num2: num 6\n#&gt;  $ chr1: chr [1:3] \"a\" \"b\" \"c\"\nstr(modify_if(df, is.numeric, mean))\n#&gt; 'data.frame':    3 obs. of  3 variables:\n#&gt;  $ num1: num  10 10 10\n#&gt;  $ num2: num  6 6 6\n#&gt;  $ chr1: chr  \"a\" \"b\" \"c\"\nstr(map(keep(df, is.numeric), mean))\n#&gt; List of 2\n#&gt;  $ num1: num 10\n#&gt;  $ num2: num 6",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>泛函`purrr`</span>"
    ]
  },
  {
    "objectID": "functionals.html#base-包泛函",
    "href": "functionals.html#base-包泛函",
    "title": "\n11  泛函purrr\n",
    "section": "\n11.4 base 包泛函",
    "text": "11.4 base 包泛函\n\n11.4.1 apply()\n\nbase::apply()\n\nX，要汇总的矩阵或数组。\nMARGIN，一个整数向量，给出要汇总的维度， 1 = 行，2 = 列，以此类推（参数名称来自思考 联合分布的边距）。\nFUN，一个汇总函数。\n\n\nShow the codea3d &lt;- array(1:24, c(4, 3, 2))\na3d\n#&gt; , , 1\n#&gt; \n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]    1    5    9\n#&gt; [2,]    2    6   10\n#&gt; [3,]    3    7   11\n#&gt; [4,]    4    8   12\n#&gt; \n#&gt; , , 2\n#&gt; \n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]   13   17   21\n#&gt; [2,]   14   18   22\n#&gt; [3,]   15   19   23\n#&gt; [4,]   16   20   24\napply(a3d, c(1, 2), mean)\n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]    7   11   15\n#&gt; [2,]    8   12   16\n#&gt; [3,]    9   13   17\n#&gt; [4,]   10   14   18\n\n\nlapply()、sapply() 和 vapply() 针对的都是列表结构的数据，sapply()是简化（simplified）版本的 lapply()，而 vapply() 则在 sapply() 的基础上加了结果验证，以保证可靠性。\n\nShow the codeset.seed(10)\n\ntemp &lt;- list(\n  35 + rnorm(10, mean = 1, sd = 10),\n  20 + rnorm(5, mean = 1, sd = 3),\n  25 + rnorm(22, mean = 2, sd = 6),\n  33 + rnorm(14, mean = 4, sd = 20)\n)\nbasic &lt;- function(x) {\n  c(min = min(x), mean = mean(x), median = median(x), max = max(x))\n}\n\n\n\nShow the codelapply(temp, basic)\n#&gt; [[1]]\n#&gt;      min     mean   median      max \n#&gt; 19.73327 31.09343 32.89923 39.89794 \n#&gt; \n#&gt; [[2]]\n#&gt;      min     mean   median      max \n#&gt; 20.28530 23.00890 23.26734 24.30534 \n#&gt; \n#&gt; [[3]]\n#&gt;      min     mean   median      max \n#&gt; 13.88828 23.72360 24.09008 32.81140 \n#&gt; \n#&gt; [[4]]\n#&gt;       min      mean    median       max \n#&gt;  1.818265 31.437784 29.748184 58.731028\nsapply(temp, basic)\n#&gt;            [,1]     [,2]     [,3]      [,4]\n#&gt; min    19.73327 20.28530 13.88828  1.818265\n#&gt; mean   31.09343 23.00890 23.72360 31.437784\n#&gt; median 32.89923 23.26734 24.09008 29.748184\n#&gt; max    39.89794 24.30534 32.81140 58.731028\n\n\n\nShow the codevapply(temp, basic, numeric(4))\n#&gt;            [,1]     [,2]     [,3]      [,4]\n#&gt; min    19.73327 20.28530 13.88828  1.818265\n#&gt; mean   31.09343 23.00890 23.72360 31.437784\n#&gt; median 32.89923 23.26734 24.09008 29.748184\n#&gt; max    39.89794 24.30534 32.81140 58.731028\n\n\nvapply() 第 3 个参数传入对每一个子集调用函数后结果的预期，上述设定为包含 4 个元素的数值型向量。",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>泛函`purrr`</span>"
    ]
  },
  {
    "objectID": "functionals.html#apply函数簇",
    "href": "functionals.html#apply函数簇",
    "title": "\n11  泛函purrr\n",
    "section": "\n11.5 apply函数簇",
    "text": "11.5 apply函数簇\n\n11.5.1 apply()\n\n\nShow the codeapply(X = mtcars, MARGIN = 2, FUN = mean)\n#&gt;        mpg        cyl       disp         hp       drat         wt       qsec \n#&gt;  20.090625   6.187500 230.721875 146.687500   3.596563   3.217250  17.848750 \n#&gt;         vs         am       gear       carb \n#&gt;   0.437500   0.406250   3.687500   2.812500\n\n\n\n11.5.2 aggregate()\n\n\nShow the codeaggregate(x = mtcars,\n          by = list(am=mtcars$am,cyl=mtcars$cyl),\n          FUN = mean)  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nam\ncyl\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n0\n4\n22.90000\n4\n135.8667\n84.66667\n3.770000\n2.935000\n20.97000\n1.000\n0\n3.666667\n1.666667\n\n\n1\n4\n28.07500\n4\n93.6125\n81.87500\n4.183750\n2.042250\n18.45000\n0.875\n1\n4.250000\n1.500000\n\n\n0\n6\n19.12500\n6\n204.5500\n115.25000\n3.420000\n3.388750\n19.21500\n1.000\n0\n3.500000\n2.500000\n\n\n1\n6\n20.56667\n6\n155.0000\n131.66667\n3.806667\n2.755000\n16.32667\n0.000\n1\n4.333333\n4.666667\n\n\n0\n8\n15.05000\n8\n357.6167\n194.16667\n3.120833\n4.104083\n17.14250\n0.000\n0\n3.000000\n3.083333\n\n\n1\n8\n15.40000\n8\n326.0000\n299.50000\n3.880000\n3.370000\n14.55000\n0.000\n1\n5.000000\n6.000000\n\n\n\n\n\nShow the codeaggregate(.~am+cyl,\n          data = mtcars,\n          FUN = mean)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nam\ncyl\nmpg\ndisp\nhp\ndrat\nwt\nqsec\nvs\ngear\ncarb\n\n\n\n0\n4\n22.90000\n135.8667\n84.66667\n3.770000\n2.935000\n20.97000\n1.000\n3.666667\n1.666667\n\n\n1\n4\n28.07500\n93.6125\n81.87500\n4.183750\n2.042250\n18.45000\n0.875\n4.250000\n1.500000\n\n\n0\n6\n19.12500\n204.5500\n115.25000\n3.420000\n3.388750\n19.21500\n1.000\n3.500000\n2.500000\n\n\n1\n6\n20.56667\n155.0000\n131.66667\n3.806667\n2.755000\n16.32667\n0.000\n4.333333\n4.666667\n\n\n0\n8\n15.05000\n357.6167\n194.16667\n3.120833\n4.104083\n17.14250\n0.000\n3.000000\n3.083333\n\n\n1\n8\n15.40000\n326.0000\n299.50000\n3.880000\n3.370000\n14.55000\n0.000\n5.000000\n6.000000\n\n\n\n\n\nShow the codeaggregate(mpg~am+cyl,\n          data = mtcars,\n          FUN = summary)\n\n\n\n\nam\ncyl\nmpg\n\n\n\n0\n4\n21.50000\n\n\n1\n4\n21.40000\n\n\n0\n6\n17.80000\n\n\n1\n6\n19.70000\n\n\n0\n8\n10.40000\n\n\n1\n8\n15.00000\n\n\n\n\n\n\n\n11.5.3 by(), tapply()\n\nby()是应用于数据框的tapply的面向对象包装器。\n\nShow the codeby(data = mtcars[,1:3],\n   INDICES = list(cyl=mtcars$cyl),\n   FUN = summary)\n#&gt; cyl: 4\n#&gt;       mpg             cyl         disp       \n#&gt;  Min.   :21.40   Min.   :4   Min.   : 71.10  \n#&gt;  1st Qu.:22.80   1st Qu.:4   1st Qu.: 78.85  \n#&gt;  Median :26.00   Median :4   Median :108.00  \n#&gt;  Mean   :26.66   Mean   :4   Mean   :105.14  \n#&gt;  3rd Qu.:30.40   3rd Qu.:4   3rd Qu.:120.65  \n#&gt;  Max.   :33.90   Max.   :4   Max.   :146.70  \n#&gt; ------------------------------------------------------------ \n#&gt; cyl: 6\n#&gt;       mpg             cyl         disp      \n#&gt;  Min.   :17.80   Min.   :6   Min.   :145.0  \n#&gt;  1st Qu.:18.65   1st Qu.:6   1st Qu.:160.0  \n#&gt;  Median :19.70   Median :6   Median :167.6  \n#&gt;  Mean   :19.74   Mean   :6   Mean   :183.3  \n#&gt;  3rd Qu.:21.00   3rd Qu.:6   3rd Qu.:196.3  \n#&gt;  Max.   :21.40   Max.   :6   Max.   :258.0  \n#&gt; ------------------------------------------------------------ \n#&gt; cyl: 8\n#&gt;       mpg             cyl         disp      \n#&gt;  Min.   :10.40   Min.   :8   Min.   :275.8  \n#&gt;  1st Qu.:14.40   1st Qu.:8   1st Qu.:301.8  \n#&gt;  Median :15.20   Median :8   Median :350.5  \n#&gt;  Mean   :15.10   Mean   :8   Mean   :353.1  \n#&gt;  3rd Qu.:16.25   3rd Qu.:8   3rd Qu.:390.0  \n#&gt;  Max.   :19.20   Max.   :8   Max.   :472.0\n\nby(data = mtcars[,1:3],\n   INDICES = factor(mtcars$cyl),\n   FUN = function(x) lm( disp ~ mpg, data = x))\n#&gt; factor(mtcars$cyl): 4\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = disp ~ mpg, data = x)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)          mpg  \n#&gt;     233.067       -4.798  \n#&gt; \n#&gt; ------------------------------------------------------------ \n#&gt; factor(mtcars$cyl): 6\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = disp ~ mpg, data = x)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)          mpg  \n#&gt;     125.122        2.947  \n#&gt; \n#&gt; ------------------------------------------------------------ \n#&gt; factor(mtcars$cyl): 8\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = disp ~ mpg, data = x)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)          mpg  \n#&gt;      560.87       -13.76\n\ntapply(X = mtcars[,1:3],\n       INDEX = list(cyl=mtcars$cyl),\n       FUN = summary)\n#&gt; $`4`\n#&gt;       mpg             cyl         disp       \n#&gt;  Min.   :21.40   Min.   :4   Min.   : 71.10  \n#&gt;  1st Qu.:22.80   1st Qu.:4   1st Qu.: 78.85  \n#&gt;  Median :26.00   Median :4   Median :108.00  \n#&gt;  Mean   :26.66   Mean   :4   Mean   :105.14  \n#&gt;  3rd Qu.:30.40   3rd Qu.:4   3rd Qu.:120.65  \n#&gt;  Max.   :33.90   Max.   :4   Max.   :146.70  \n#&gt; \n#&gt; $`6`\n#&gt;       mpg             cyl         disp      \n#&gt;  Min.   :17.80   Min.   :6   Min.   :145.0  \n#&gt;  1st Qu.:18.65   1st Qu.:6   1st Qu.:160.0  \n#&gt;  Median :19.70   Median :6   Median :167.6  \n#&gt;  Mean   :19.74   Mean   :6   Mean   :183.3  \n#&gt;  3rd Qu.:21.00   3rd Qu.:6   3rd Qu.:196.3  \n#&gt;  Max.   :21.40   Max.   :6   Max.   :258.0  \n#&gt; \n#&gt; $`8`\n#&gt;       mpg             cyl         disp      \n#&gt;  Min.   :10.40   Min.   :8   Min.   :275.8  \n#&gt;  1st Qu.:14.40   1st Qu.:8   1st Qu.:301.8  \n#&gt;  Median :15.20   Median :8   Median :350.5  \n#&gt;  Mean   :15.10   Mean   :8   Mean   :353.1  \n#&gt;  3rd Qu.:16.25   3rd Qu.:8   3rd Qu.:390.0  \n#&gt;  Max.   :19.20   Max.   :8   Max.   :472.0\n\n\n\n11.5.4 lapply(), sapply()\n\nlapply() returns a list of the same length as X,\nsapply() is a user-friendly version and wrapper of lapply() by default returning a vector or matrix\n\nShow the codex &lt;- list(a = 1:10, beta = exp(-3:3), logic = c(TRUE,FALSE,FALSE,TRUE))\nlapply(X = x,FUN = quantile)\n#&gt; $a\n#&gt;    0%   25%   50%   75%  100% \n#&gt;  1.00  3.25  5.50  7.75 10.00 \n#&gt; \n#&gt; $beta\n#&gt;          0%         25%         50%         75%        100% \n#&gt;  0.04978707  0.25160736  1.00000000  5.05366896 20.08553692 \n#&gt; \n#&gt; $logic\n#&gt;   0%  25%  50%  75% 100% \n#&gt;  0.0  0.0  0.5  1.0  1.0\n\nsapply(x, quantile)\n#&gt;          a        beta logic\n#&gt; 0%    1.00  0.04978707   0.0\n#&gt; 25%   3.25  0.25160736   0.0\n#&gt; 50%   5.50  1.00000000   0.5\n#&gt; 75%   7.75  5.05366896   1.0\n#&gt; 100% 10.00 20.08553692   1.0\n\n\n\n11.5.5 vapply\n\n\nShow the codeby_cyl &lt;- split(mtcars, mtcars$cyl)\nmodels &lt;- lapply(by_cyl, function(data) lm(mpg ~ wt, data = data))\nmodels\n#&gt; $`4`\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = mpg ~ wt, data = data)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)           wt  \n#&gt;      39.571       -5.647  \n#&gt; \n#&gt; \n#&gt; $`6`\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = mpg ~ wt, data = data)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)           wt  \n#&gt;       28.41        -2.78  \n#&gt; \n#&gt; \n#&gt; $`8`\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = mpg ~ wt, data = data)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)           wt  \n#&gt;      23.868       -2.192\nvapply(models, function(x) coef(x)[[2]], double(1))\n#&gt;         4         6         8 \n#&gt; -5.647025 -2.780106 -2.192438\n\n\n\n11.5.6 数学泛函",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>泛函`purrr`</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html",
    "href": "dynamic_report.html",
    "title": "\n13  动态报告\n",
    "section": "",
    "text": "1 文本格式\nhttps://quarto.org/docs/guide/\nhttps://www.productive-r-workflow.com/quarto-tricks",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#section-text_format",
    "href": "dynamic_report.html#section-text_format",
    "title": "\n13  动态报告\n",
    "section": "",
    "text": "output\nsyntax\n\n\n\ncode\n` code `\n\n\n\n粗体\n**粗体**\n\n\n\n斜体\n*斜体*\n\n\n\nText highlight\n&lt;mark&gt;Text highlight&lt;/mark&gt;\n\n\n\n颜色标注\n[颜色标注]{style=\"color:red\"}\n\n\n\nkeyboard  Ctrl+C \n\n&lt;kbd&gt; Ctrl+C &lt;/kbd&gt;\n\n\n\n下横线\n[下横线]{.underline}\n\n\n\n删除线\n~~删除线~~\n\n\n\n上标X2\n\nX^2^\n\n\n\n下标 X1\n\nX~1~\n\n\n\n\n水平线分隔符\n\n\n***\n\n\n\nhttps://r4ds.hadley.nz/\n&lt;https://r4ds.hadley.nz/&gt;\n\n\n\nquarto\n[quarto](https://quarto.org)\n\n\n\n\n | \n\n\n\n\n\n\nBlockquote\n\n&gt; Blockquote",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#yaml",
    "href": "dynamic_report.html#yaml",
    "title": "\n13  动态报告\n",
    "section": "\n2 YAML",
    "text": "2 YAML\n\n2.1 添加页脚\n您可以创建包含某些内容的文件。然后将其显示在 quarto 文档的底部。html\n首先，创建一个名为 file 的文件。在其中复制以下内容：footer.html\n在YAML block 中添加 include-after-body: \"footer.html\"\n\n2.2 标题上方添加额外空间\n使用自定义样式表可以直接实现此效果。此样式表将包含专门设计用于在标题上方添加额外空间的规则。\n首先创建一个名为并包含以下规则的 CSS 文件：style.css\nh1, .h1, h2, .h2, h3, .h3 {\n  margin-top: 84px;\n}\n这些 CSS 规则将在 1、2 和 3 级标题（分别由h1 、h2 和h3 标签表示）上方添加 84 像素的边距。\n最后，在YAML block 中添加 css: style.css",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#内部链接",
    "href": "dynamic_report.html#内部链接",
    "title": "\n13  动态报告\n",
    "section": "\n3 内部链接",
    "text": "3 内部链接\n如 文本格式 是第一节",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#脚注",
    "href": "dynamic_report.html#脚注",
    "title": "\n13  动态报告\n",
    "section": "\n4 脚注",
    "text": "4 脚注\n第一个1\nFor instance2, here is one attached to the word carrot3.\n\n4.1 Execute chunk\n\n\n\n\n\n\n\nOption\nDefault\nEffects\n\n\n\necho\ntrue\n\n\nfalse: hide code in output\\\n\ninclude code cell syntaxfenced\n\n\n\n\neval\ntrue\n\nfalse: don’t run code\n\n\ninclude\ntrue\n\nfalse: don’t include code or results\n\n\noutput\ntrue\n\n\nfalse: don’t include results\\\n\ntreat results as raw markdownasis\n\n\n\n\nwarning\ntrue\n\nfalse: don’t include warnings in output\n\n\nerror\nfalse\n\ntrue: include error in output and continue with render",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#figure",
    "href": "dynamic_report.html#figure",
    "title": "\n13  动态报告\n",
    "section": "\n5 Figure",
    "text": "5 Figure\n\n5.1 Caption\n\nShow the codelibrary(tidyverse)\n\nmpg %&gt;%\n  ggplot(aes(x = reorder(class, hwy), y = hwy, fill = class)) +\n  geom_boxplot() +\n  xlab(\"class\") +\n  theme(legend.position = \"none\")\n\n\n\n箱线图\n\n\n\n标题文本居中\ninclude-in-header:\n   - text: |\n       &lt;style&gt;\n       figcaption {\n         text-align: center;\n       }\n       &lt;/style&gt;\nShow the codeplot(1:25,1:25,pch=c(1:25))\nplot(1:25,1:25,type=\"o\",pch=c(1:25))\n\n\n\n\n\n\n\n\n\n(a) 点\n\n\n\n\n\n\n\n\n\n(b) 线\n\n\n\n\n\n\n图 1: 组图",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#表格",
    "href": "dynamic_report.html#表格",
    "title": "\n13  动态报告\n",
    "section": "\n7 表格",
    "text": "7 表格\n表 13.1 displays basic summary statistics for these two variables.\n\nShow the codempg %&gt;%\n  summarise(\n    mean_displ=mean(displ),\n    mean_hwy=mean(hwy),\n    mean_cty=mean(cty),\n    .by = cyl\n    ) %&gt;%\n  knitr::kable(digits = c(0, 0, 0, 0, 2))\n\n\n表 1: Table Summary statistics\n\n\n\n\ncyl\nmean_displ\nmean_hwy\nmean_cty\n\n\n\n4\n2\n29\n21\n\n\n6\n3\n23\n16\n\n\n8\n5\n18\n13\n\n\n5\n2\n29\n20",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#sec-formula",
    "href": "dynamic_report.html#sec-formula",
    "title": "\n13  动态报告\n",
    "section": "\n8 公式",
    "text": "8 公式\nBlack-Scholes (式 13.1) is a mathematical model that seeks to explain the behavior of financial derivatives, most commonly options:\n\\[ \\frac{\\partial \\mathrm C}{ \\partial \\mathrm t } + \\frac{1}{2}\\sigma^{2} \\mathrm S^{2} \\frac{\\partial^{2} \\mathrm C}{\\partial \\mathrm C^2}   + \\mathrm r \\mathrm S \\frac{\\partial \\mathrm C}{\\partial \\mathrm S}\\ =   \\mathrm r \\mathrm C   \\tag{1}\\]\nWe can fit a simple linear regression model of the form shown in 式 13.2.\n\\[\nprice = \\hat{\\beta}_0 + \\hat{\\beta}_1 \\times area + \\epsilon\n\\tag{2}\\]",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#callout",
    "href": "dynamic_report.html#callout",
    "title": "\n13  动态报告\n",
    "section": "\n9 Callout",
    "text": "9 Callout\n\n\n\n\n\n\nNote\n\n\n\nNote that there are five types of callouts, including: note, tip, warning, caution, and important.\n\n\n\n\n\n\n\n\nTip\n\n\n\nThis is an example of an tip callout\n\n\n\n\n\n\n\n\nCaution\n\n\n\nThis is an example of an caution callout\n\n\n\n\n\n\n\n\nWarning\n\n\n\nThis is an example of an warning callout\n\n\n\n\n\n\n\n\nImportant\n\n\n\nThis is an example of an important callout\n\n\n\n\n\n\n\n\nTip 1\n\n\n\n交叉引用 a Tip\nAdd an ID starting with #tip- to reference a tip.\n\n\nSee Tip 13.1…\n自定义callout\n\n\n\n\n\n\n\nNote\n\n\n\nThis is a custom callout.\nUsing CSS, you can control pretty much everything.\nThis div is even shaking every now and then 🙃\n\n\n\n\n\n标注类型\n前缀\n\n\n\nnote\n#nte-\n\n\ntip\n#tip-\n\n\nwarning\n#wrn-\n\n\nimportant\n#imp-\n\n\ncaution\n#cau-",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#页边距",
    "href": "dynamic_report.html#页边距",
    "title": "\n13  动态报告\n",
    "section": "\n10 页边距",
    "text": "10 页边距\n\n10.1 R结果\n\nShow the codeknitr::kable(\n  mtcars[1:3, 1:3]\n)\n\n\n\n\n\nmpg\ncyl\ndisp\n\n\n\nMazda RX4\n21.0\n6\n160\n\n\nMazda RX4 Wag\n21.0\n6\n160\n\n\nDatsun 710\n22.8\n4\n108\n\n\n\n\n\n10.2 Div\n\n\nHi! I’m a side note! 🔥",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#latex",
    "href": "dynamic_report.html#latex",
    "title": "\n13  动态报告\n",
    "section": "\n11 LaTex",
    "text": "11 LaTex\n\n11.1 公式对齐\n\\[\\begin{aligned}\n  f(x) =& \\sum_{k=0}^\\infty \\frac{1}{k!} x^k \\\\\n  =& e^x\n\\end{aligned}\\]\n\n11.2 括号等高\n\\[\\phi(x) = \\frac{1}{\\sqrt{2\\pi}} \\exp\\left\\{ \\frac{1}{2} x^2 \\right\\} \\]\n\n11.3 矩阵\n\\[\n\\begin{bmatrix}\nx_{11} & x_{12}&...&x_{1p} \\\\\nx_{21} & x_{22}&...&x_{2p} \\\\\n\\vdots &\\vdots &   &\\vdots\\\\\nx_{n1} & x_{n2}&...&x_{np} \\\\\n\\end{bmatrix}\n\\]\n\n11.4 向量表示\n\\[   \\boldsymbol{v} = (v_1, v_2)^T \\]",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#定理类段落",
    "href": "dynamic_report.html#定理类段落",
    "title": "\n13  动态报告\n",
    "section": "\n12 定理类段落",
    "text": "12 定理类段落\n\n术语\n\n定义：三角形的内角和等于180°。\n\n\n或者\n引用Theorem 13.1。\n\nTheorem 1 (勒贝格定理) 一元函数黎曼可积， 当且仅当其不连续点的集合为零测集。\n\n\n\n环境名\n默认显示名\n标签前缀\n\n\n\ntheorem\nTheorem\n#thm-\n\n\nlemma\nLemma\n#lem-\n\n\ncorollary\nCorollary\n#cor-\n\n\nproposition\nProposition\n#prp-\n\n\nconjecture\nConjecture\n#cnj-\n\n\ndefinition\nDefinition\n#def-\n\n\nexample\nExample\n#exm-\n\n\nexercise\nExercise\n#exr-",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#opts_chunkset.r",
    "href": "dynamic_report.html#opts_chunkset.r",
    "title": "\n13  动态报告\n",
    "section": "\n13 _opts_chunk$set.R",
    "text": "13 _opts_chunk$set.R\n\nShow the codeknitr::opts_chunk$set(\n  # comment = \"#&gt;\",\n  # collapse = TRUE,\n  # cache = TRUE,\n  # message = FALSE,\n  # error = FALSE,\n)\nggplot2::theme_set(new = ggplot2::theme_classic())",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#内联代码",
    "href": "dynamic_report.html#内联代码",
    "title": "\n13  动态报告\n",
    "section": "\n14 内联代码",
    "text": "14 内联代码\nUse computed values directly in text sections. Code is evaluated at render and results appear as text.\n\nShow the codea &lt;- 1+2+3\n\n\n\n14.0.1 Knitr\na 的值为 6",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#文本高亮",
    "href": "dynamic_report.html#文本高亮",
    "title": "\n13  动态报告\n",
    "section": "\n15 文本高亮",
    "text": "15 文本高亮\n&lt;Text highlight\n\n\n红色文本\n\nkeyboard\n Ctrl+C &gt;",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#会话信息",
    "href": "dynamic_report.html#会话信息",
    "title": "\n13  动态报告\n",
    "section": "\n15 会话信息",
    "text": "15 会话信息\n\nSession Information,click to show\n\n\n\nShow the codesessionInfo()\n#&gt; R version 4.4.2 (2024-10-31 ucrt)\n#&gt; Platform: x86_64-w64-mingw32/x64\n#&gt; Running under: Windows 11 x64 (build 22631)\n#&gt; \n#&gt; Matrix products: default\n#&gt; \n#&gt; \n#&gt; locale:\n#&gt; [1] LC_COLLATE=Chinese (Simplified)_China.utf8 \n#&gt; [2] LC_CTYPE=Chinese (Simplified)_China.utf8   \n#&gt; [3] LC_MONETARY=Chinese (Simplified)_China.utf8\n#&gt; [4] LC_NUMERIC=C                               \n#&gt; [5] LC_TIME=Chinese (Simplified)_China.utf8    \n#&gt; \n#&gt; time zone: Asia/Shanghai\n#&gt; tzcode source: internal\n#&gt; \n#&gt; attached base packages:\n#&gt; [1] stats     graphics  grDevices utils     datasets  methods   base     \n#&gt; \n#&gt; other attached packages:\n#&gt;  [1] writexl_1.5.1    readxl_1.4.3     conflicted_1.2.0 lubridate_1.9.4 \n#&gt;  [5] forcats_1.0.0    stringr_1.5.1    dplyr_1.1.4      purrr_1.0.2     \n#&gt;  [9] readr_2.1.5      tidyr_1.3.1      tibble_3.2.1     ggplot2_3.5.1   \n#&gt; [13] tidyverse_2.0.0  showtext_0.9-7   showtextdb_3.0   sysfonts_0.8.9  \n#&gt; \n#&gt; loaded via a namespace (and not attached):\n#&gt;  [1] gtable_0.3.6            xfun_0.49               htmlwidgets_1.6.4      \n#&gt;  [4] tzdb_0.4.0              vctrs_0.6.5             tools_4.4.2            \n#&gt;  [7] generics_0.1.3          stats4_4.4.2            fansi_1.0.6            \n#&gt; [10] pkgconfig_2.0.3         S4Vectors_0.44.0        lifecycle_1.0.4        \n#&gt; [13] GenomeInfoDbData_1.2.13 compiler_4.4.2          farver_2.1.2           \n#&gt; [16] munsell_0.5.1           GenomeInfoDb_1.42.1     htmltools_0.5.8.1      \n#&gt; [19] yaml_2.3.10             pillar_1.9.0            cachem_1.1.0           \n#&gt; [22] tidyselect_1.2.1        digest_0.6.37           stringi_1.8.4          \n#&gt; [25] labeling_0.4.3          fastmap_1.2.0           grid_4.4.2             \n#&gt; [28] colorspace_2.1-1        cli_3.6.3               magrittr_2.0.3         \n#&gt; [31] utf8_1.2.4              withr_3.0.2             scales_1.3.0           \n#&gt; [34] UCSC.utils_1.2.0        timechange_0.3.0        rmarkdown_2.29         \n#&gt; [37] XVector_0.46.0          httr_1.4.7              cellranger_1.1.0       \n#&gt; [40] hms_1.1.3               memoise_2.0.1           evaluate_1.0.1         \n#&gt; [43] knitr_1.49              GenomicRanges_1.58.0    IRanges_2.40.1         \n#&gt; [46] rlang_1.1.4             glue_1.8.0              BiocGenerics_0.52.0    \n#&gt; [49] rstudioapi_0.17.1       jsonlite_1.8.9          R6_2.5.1               \n#&gt; [52] zlibbioc_1.52.0",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#footnotes",
    "href": "dynamic_report.html#footnotes",
    "title": "\n13  动态报告\n",
    "section": "",
    "text": "WANG,A.,et al.(2025)↩︎\ndafhaifhafoahfo↩︎\nThe carrot (Daucus carota subsp. sativus) is a root vegetable, typically orange in color↩︎",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "regular_expression.html",
    "href": "regular_expression.html",
    "title": "\n10  正则表达式\n",
    "section": "",
    "text": "10.1 匹配固定项\nShow the codestr_view(fruit, \"berry\")  \n#&gt;  [6] │ bil&lt;berry&gt;\n#&gt;  [7] │ black&lt;berry&gt;\n#&gt; [10] │ blue&lt;berry&gt;\n#&gt; [11] │ boysen&lt;berry&gt;\n#&gt; [19] │ cloud&lt;berry&gt;\n#&gt; [21] │ cran&lt;berry&gt;\n#&gt; [29] │ elder&lt;berry&gt;\n#&gt; [32] │ goji &lt;berry&gt;\n#&gt; [33] │ goose&lt;berry&gt;\n#&gt; [38] │ huckle&lt;berry&gt;\n#&gt; [50] │ mul&lt;berry&gt;\n#&gt; [70] │ rasp&lt;berry&gt;\n#&gt; [73] │ salal &lt;berry&gt;\n#&gt; [76] │ straw&lt;berry&gt;",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>正则表达式</span>"
    ]
  },
  {
    "objectID": "regular_expression.html#量词-quantifier",
    "href": "regular_expression.html#量词-quantifier",
    "title": "\n10  正则表达式\n",
    "section": "\n10.2 量词 Quantifier",
    "text": "10.2 量词 Quantifier\n\n10.2.1 贪婪量词\n尽可能匹配\nn*      匹配任意次数（0 or more than n）       {0,}\nn+      至少匹配1次（1 or more than n ）       {1,}\nn?      匹配 0或1次（0 or 1 n）                {0,1}\n\n{n,}    至少匹配 n 次。\n{n,m}   N ~ M 次之间的匹配。\n{n}     正好匹配 n 次。\n\nShow the codex &lt;- c(\"1234_abcd abbb\", \"123 a33aabb\", \" ab.bcaab\", \"abbb_132bb\")\n\nstr_view(x, \"ab*\") \n#&gt; [1] │ 1234_&lt;ab&gt;cd &lt;abbb&gt;\n#&gt; [2] │ 123 &lt;a&gt;33&lt;a&gt;&lt;abb&gt;\n#&gt; [3] │  &lt;ab&gt;.bc&lt;a&gt;&lt;ab&gt;\n#&gt; [4] │ &lt;abbb&gt;_132bb\n\nstr_view(x, \"ab+\") \n#&gt; [1] │ 1234_&lt;ab&gt;cd &lt;abbb&gt;\n#&gt; [2] │ 123 a33a&lt;abb&gt;\n#&gt; [3] │  &lt;ab&gt;.bca&lt;ab&gt;\n#&gt; [4] │ &lt;abbb&gt;_132bb\n\nstr_view(x, \"ab?\")\n#&gt; [1] │ 1234_&lt;ab&gt;cd &lt;ab&gt;bb\n#&gt; [2] │ 123 &lt;a&gt;33&lt;a&gt;&lt;ab&gt;b\n#&gt; [3] │  &lt;ab&gt;.bc&lt;a&gt;&lt;ab&gt;\n#&gt; [4] │ &lt;ab&gt;bb_132bb\n\nstr_view(x, \"b{2,5}\")\n#&gt; [1] │ 1234_abcd a&lt;bbb&gt;\n#&gt; [2] │ 123 a33aa&lt;bb&gt;\n#&gt; [4] │ a&lt;bbb&gt;_132&lt;bb&gt;\nstr_view(x, \"\\\\d{2}\")\n#&gt; [1] │ &lt;12&gt;&lt;34&gt;_abcd abbb\n#&gt; [2] │ &lt;12&gt;3 a&lt;33&gt;aabb\n#&gt; [4] │ abbb_&lt;13&gt;2bb\nstr_view(x, \"\\\\d{2,}\")\n#&gt; [1] │ &lt;1234&gt;_abcd abbb\n#&gt; [2] │ &lt;123&gt; a&lt;33&gt;aabb\n#&gt; [4] │ abbb_&lt;132&gt;bb\nstr_view(x, \"\\\\d{2,3}\")\n#&gt; [1] │ &lt;123&gt;4_abcd abbb\n#&gt; [2] │ &lt;123&gt; a&lt;33&gt;aabb\n#&gt; [4] │ abbb_&lt;132&gt;bb\n\n\n\n10.2.2 懒惰量词\n在满足条件的情况下会尽量少地匹配\n原有量词后加一个 ? ，仅保持最小匹配\n\nShow the codestr_view(x, \"b{3,5}?\")  #匹配bbb\n#&gt; [1] │ 1234_abcd a&lt;bbb&gt;\n#&gt; [4] │ a&lt;bbb&gt;_132bb\nstr_view(x, \"abb??\")  # 匹配ab\n#&gt; [1] │ 1234_&lt;ab&gt;cd &lt;ab&gt;bb\n#&gt; [2] │ 123 a33a&lt;ab&gt;b\n#&gt; [3] │  &lt;ab&gt;.bca&lt;ab&gt;\n#&gt; [4] │ &lt;ab&gt;bb_132bb\nstr_view(x, \"ab+?\")  # 匹配ab\n#&gt; [1] │ 1234_&lt;ab&gt;cd &lt;ab&gt;bb\n#&gt; [2] │ 123 a33a&lt;ab&gt;b\n#&gt; [3] │  &lt;ab&gt;.bca&lt;ab&gt;\n#&gt; [4] │ &lt;ab&gt;bb_132bb\nstr_view(x, \"ab*?\")  # 匹配a\n#&gt; [1] │ 1234_&lt;a&gt;bcd &lt;a&gt;bbb\n#&gt; [2] │ 123 &lt;a&gt;33&lt;a&gt;&lt;a&gt;bb\n#&gt; [3] │  &lt;a&gt;b.bc&lt;a&gt;&lt;a&gt;b\n#&gt; [4] │ &lt;a&gt;bbb_132bb",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>正则表达式</span>"
    ]
  },
  {
    "objectID": "regular_expression.html#ranges",
    "href": "regular_expression.html#ranges",
    "title": "\n10  正则表达式\n",
    "section": "\n10.3 Ranges",
    "text": "10.3 Ranges\n在方括号[]内定义字符范围\n\n10.3.1 字符类\n\n\nexpression\nfunction\n\n\n\n.\nAny character except new line ()\n\n\n(A|B)\nA or B\n\n\n(…)\nGroup\n\n\n\nnth group / sub pattern\n\n\n[ABC]\nRange (A, B or C) 匹配方括号内任意一个字符\n\n\n[^ABC]\nNot A, B or C 匹配除方括号内的任意字符\n\n\n-\n定义一个范围 [a - zA - Z0 - 9]\n\n\n\n\\\n对特殊字符进行转义，[\\^\\-\\]] 匹配 ^、-和 ]\n\n\n\n\nShow the code\nc(\"s.d \\n zxc\") %&gt;%\n  str_view(\".\")\n#&gt; [1] │ &lt;s&gt;&lt;.&gt;&lt;d&gt;&lt; &gt;\n#&gt;     │ &lt; &gt;&lt;z&gt;&lt;x&gt;&lt;c&gt;\n\n\nstr_view(words, \"[aeiou]x[aeiou]\")  #匹配 中间x两边元音\n#&gt; [284] │ &lt;exa&gt;ct\n#&gt; [285] │ &lt;exa&gt;mple\n#&gt; [288] │ &lt;exe&gt;rcise\n#&gt; [289] │ &lt;exi&gt;st\nstr_view(words, \"[^aeiou]y[^aeiou]\") #匹配 中间y两边辅音\n#&gt; [836] │ &lt;sys&gt;tem\n#&gt; [901] │ &lt;typ&gt;e\nstr_view(fruit, \"a...e\")\n#&gt;  [1] │ &lt;apple&gt;\n#&gt;  [7] │ bl&lt;ackbe&gt;rry\n#&gt; [48] │ mand&lt;arine&gt;\n#&gt; [51] │ nect&lt;arine&gt;\n#&gt; [62] │ pine&lt;apple&gt;\n#&gt; [64] │ pomegr&lt;anate&gt;\n#&gt; [70] │ r&lt;aspbe&gt;rry\n#&gt; [73] │ sal&lt;al be&gt;rry\nx &lt;- \"ab-cd AB[CD  123.45 !@#%^  \"\nstr_view(x, \"[abc\\\\-\\\\[\\\\@\\\\.]\")\n#&gt; [1] │ &lt;a&gt;&lt;b&gt;&lt;-&gt;&lt;c&gt;d AB&lt;[&gt;CD  123&lt;.&gt;45 !&lt;@&gt;#%^\n\n\n\n10.3.2 或运算符\n\nShow the code#alternation\nstr_view(fruit, \"apple|melon|nut\")\n#&gt;  [1] │ &lt;apple&gt;\n#&gt; [13] │ canary &lt;melon&gt;\n#&gt; [20] │ coco&lt;nut&gt;\n#&gt; [52] │ &lt;nut&gt;\n#&gt; [62] │ pine&lt;apple&gt;\n#&gt; [72] │ rock &lt;melon&gt;\n#&gt; [80] │ water&lt;melon&gt;\nstr_view(fruit, \"aa|ee|ii|oo|uu\")\n#&gt;  [9] │ bl&lt;oo&gt;d orange\n#&gt; [33] │ g&lt;oo&gt;seberry\n#&gt; [47] │ lych&lt;ee&gt;\n#&gt; [66] │ purple mangost&lt;ee&gt;n\n\n\n\n10.3.3 Unicode字符\n\n\n基本 Unicode 范围匹配：对于支持 Unicode 的正则表达式引擎，可以匹配更广泛的字符范围。例如，\\p{L}匹配任何语言中的字母字符。\\p{Nd}匹配任何十进制数字（相当于[0 - 9]的 Unicode 版本）。\n\nShow the codex &lt;- c(\"拼音aāà⇌α\", \"拉丁aáǎβ\", \"a€∀ζ\",\"货币123¥δ\")\n\nstr_view(x,pattern = \"\\\\p{L}\")\n#&gt; [1] │ &lt;拼&gt;&lt;音&gt;&lt;a&gt;&lt;ā&gt;&lt;à&gt;⇌&lt;α&gt;\n#&gt; [2] │ &lt;拉&gt;&lt;丁&gt;&lt;a&gt;&lt;á&gt;&lt;ǎ&gt;&lt;β&gt;\n#&gt; [3] │ &lt;a&gt;€∀&lt;ζ&gt;\n#&gt; [4] │ &lt;货&gt;&lt;币&gt;123¥&lt;δ&gt;\nstr_view(x,pattern = \"\\\\p{Nd}\")\n#&gt; [4] │ 货币&lt;1&gt;&lt;2&gt;&lt;3&gt;¥δ\n\n\n\n特定语言或脚本的 Unicode 范围：可以使用更具体的 Unicode 脚本块来匹配字符。比如，\\p{Han}匹配中文、日文、韩文等汉字字符。\\p{Greek}匹配希腊字母。这些对于处理多语言文本非常有用，例如在文本提取或格式化中，根据不同语言的字符进行区分。\n\n\nShow the codestr_view(x,pattern = \"\\\\p{Han}\")\n#&gt; [1] │ &lt;拼&gt;&lt;音&gt;aāà⇌α\n#&gt; [2] │ &lt;拉&gt;&lt;丁&gt;aáǎβ\n#&gt; [4] │ &lt;货&gt;&lt;币&gt;123¥δ\nstr_view(x,pattern = \"\\\\p{Greek}\")\n#&gt; [1] │ 拼音aāà⇌&lt;α&gt;\n#&gt; [2] │ 拉丁aáǎ&lt;β&gt;\n#&gt; [3] │ a€∀&lt;ζ&gt;\n#&gt; [4] │ 货币123¥&lt;δ&gt;",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>正则表达式</span>"
    ]
  },
  {
    "objectID": "regular_expression.html#锚点anchors",
    "href": "regular_expression.html#锚点anchors",
    "title": "\n10  正则表达式\n",
    "section": "\n10.4 锚点Anchors",
    "text": "10.4 锚点Anchors\n\nShow the code# 匹配开头^  或结尾$ \nstr_view(fruit, \"^(str)\")\n#&gt; [76] │ &lt;str&gt;awberry\nstr_view(fruit, \"(is)$\")\n#&gt; [61] │ physal&lt;is&gt;\n\nstr_view(fruit, \"apple\")\n#&gt;  [1] │ &lt;apple&gt;\n#&gt; [62] │ pine&lt;apple&gt;\nstr_view(fruit, \"^apple$\") #仅匹配完整字符串\n#&gt; [1] │ &lt;apple&gt;",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>正则表达式</span>"
    ]
  },
  {
    "objectID": "regular_expression.html#元字符meta-characters",
    "href": "regular_expression.html#元字符meta-characters",
    "title": "\n10  正则表达式\n",
    "section": "\n10.5 元字符（meta-characters）",
    "text": "10.5 元字符（meta-characters）\n\nShow the codex &lt;- c(\"1234_abcd abbb\", \"123 a33aabb\", \" ab.bcaab\", \"abbb_132bb\")\n#\\d匹配任何数字;匹配任何非数字的内容\\D\nstr_view(x, \"\\\\d+\")\n#&gt; [1] │ &lt;1234&gt;_abcd abbb\n#&gt; [2] │ &lt;123&gt; a&lt;33&gt;aabb\n#&gt; [4] │ abbb_&lt;132&gt;bb\nstr_view(x, \"\\\\D+\")\n#&gt; [1] │ 1234&lt;_abcd abbb&gt;\n#&gt; [2] │ 123&lt; a&gt;33&lt;aabb&gt;\n#&gt; [3] │ &lt; ab.bcaab&gt;\n#&gt; [4] │ &lt;abbb_&gt;132&lt;bb&gt;\n\n#\\s匹配任何空格（例如，空格、制表符、换行符）;匹配任何非空格的内容。\\S\nstr_view(x, \"\\\\s+\")\n#&gt; [1] │ 1234_abcd&lt; &gt;abbb\n#&gt; [2] │ 123&lt; &gt;a33aabb\n#&gt; [3] │ &lt; &gt;ab.bcaab\nstr_view(x, \"\\\\S+\")\n#&gt; [1] │ &lt;1234_abcd&gt; &lt;abbb&gt;\n#&gt; [2] │ &lt;123&gt; &lt;a33aabb&gt;\n#&gt; [3] │  &lt;ab.bcaab&gt;\n#&gt; [4] │ &lt;abbb_132bb&gt;\n\n#\\w匹配任何“单词”字符，即字母、数字和下划线;匹配任何“非单词”字符。\\W\nstr_view(x, \"\\\\w+\")\n#&gt; [1] │ &lt;1234_abcd&gt; &lt;abbb&gt;\n#&gt; [2] │ &lt;123&gt; &lt;a33aabb&gt;\n#&gt; [3] │  &lt;ab&gt;.&lt;bcaab&gt;\n#&gt; [4] │ &lt;abbb_132bb&gt;\nstr_view(x, \"\\\\W+\")\n#&gt; [1] │ 1234_abcd&lt; &gt;abbb\n#&gt; [2] │ 123&lt; &gt;a33aabb\n#&gt; [3] │ &lt; &gt;ab&lt;.&gt;bcaab\n\n\n#  \\b  单词的开头或结尾,字符的边界\nx &lt;- c(\"summary(x)\", \"summarize(df)\", \"row_sum(x)\", \"sum_(x)\")\nstr_view(x, \"sum\")\n#&gt; [1] │ &lt;sum&gt;mary(x)\n#&gt; [2] │ &lt;sum&gt;marize(df)\n#&gt; [3] │ row_&lt;sum&gt;(x)\n#&gt; [4] │ &lt;sum&gt;_(x)\nstr_view(x, \"^sum$\")\nstr_view(x, \"\\\\bsum\\\\_\\\\b\") \n#&gt; [4] │ &lt;sum_&gt;(x)",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>正则表达式</span>"
    ]
  },
  {
    "objectID": "regular_expression.html#零宽匹配",
    "href": "regular_expression.html#零宽匹配",
    "title": "\n10  正则表达式\n",
    "section": "\n10.6 零宽匹配",
    "text": "10.6 零宽匹配\n断言（assertions）是一种零宽度（zero - width）的匹配，它用于指定一个位置，这个位置应该满足某种条件，但不会消耗（匹配）任何字符。\nzero-width match\n\nShow the codestr_view(\"abc\", c(\"$\", \"^\", \"\\\\b\"))\n#&gt; [1] │ abc&lt;&gt;\n#&gt; [2] │ &lt;&gt;abc\n#&gt; [3] │ &lt;&gt;abc&lt;&gt;\nstr_replace_all(\n    string = \"abc\",\n    pattern =  c(\"$\", \"^\", \"\\\\b\"),\n    replacement =  \"+_+\"\n)\n#&gt; [1] \"abc+_+\"    \"+_+abc\"    \"+_+abc+_+\"\n\n\n\n10.6.1 断言assertions\n\n(?=pattern) 要求此位置的后面必须匹配表达式pattern\n(?!pattern) 要求此位置的后面不能匹配表达式pattern\n(?&lt;=pattern) 要求此位置的前面必须匹配表达式pattern\n(?&lt;!pattern) 要求此位置的前面不能匹配表达式pattern\n\n\nShow the codex &lt;- c(\"ocauuno\", \"0on0242uh\",\"nauguio\",\"nucu0ono0huhun\")\n\n# 正向肯定预查（Positive Lookahead）\nstr_view(x,pattern = \"n(?=o)\")  # 向后匹配 n后面紧跟着o，不匹配o\n#&gt; [1] │ ocauu&lt;n&gt;o\n#&gt; [4] │ nucu0o&lt;n&gt;o0huhun\n\n# 正向否定预查（Negative Lookahead）\nstr_view(x,pattern = \"n(?!o)\")  # 匹配后面不跟着o的n\n#&gt; [2] │ 0o&lt;n&gt;0242uh\n#&gt; [3] │ &lt;n&gt;auguio\n#&gt; [4] │ &lt;n&gt;ucu0ono0huhu&lt;n&gt;\n\n\n\n# 反向肯定预查（Positive Lookbehind）\nstr_view(x,pattern = \"(?&lt;=0o)n\")  # 匹配前面是0o的n\n#&gt; [2] │ 0o&lt;n&gt;0242uh\n#&gt; [4] │ nucu0o&lt;n&gt;o0huhun\n\n# 反向否定预查（Negative Lookbehind）\n\nstr_view(x,pattern = \"(?&lt;!0o)n\")  # 匹配前面不是0o的n\n#&gt; [1] │ ocauu&lt;n&gt;o\n#&gt; [3] │ &lt;n&gt;auguio\n#&gt; [4] │ &lt;n&gt;ucu0ono0huhu&lt;n&gt;",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>正则表达式</span>"
    ]
  },
  {
    "objectID": "regular_expression.html#反向引用backreference",
    "href": "regular_expression.html#反向引用backreference",
    "title": "\n10  正则表达式\n",
    "section": "\n10.7 反向引用backreference",
    "text": "10.7 反向引用backreference\n反向引用（Backreference）允许引用之前在正则表达式中匹配到的子表达式。简单来说，就是可以在正则表达式的后续部分重复使用之前已经匹配的内容。它通过使用\\数字的形式来实现，其中 “数字” 表示之前捕获组的编号。\n\nShow the code# 有哪些字母是重复两次的\nstr_view(fruit, \"(.)\\\\1\", match = TRUE)\n#&gt;  [1] │ a&lt;pp&gt;le\n#&gt;  [5] │ be&lt;ll&gt; pe&lt;pp&gt;er\n#&gt;  [6] │ bilbe&lt;rr&gt;y\n#&gt;  [7] │ blackbe&lt;rr&gt;y\n#&gt;  [8] │ blackcu&lt;rr&gt;ant\n#&gt;  [9] │ bl&lt;oo&gt;d orange\n#&gt; [10] │ bluebe&lt;rr&gt;y\n#&gt; [11] │ boysenbe&lt;rr&gt;y\n#&gt; [16] │ che&lt;rr&gt;y\n#&gt; [17] │ chili pe&lt;pp&gt;er\n#&gt; [19] │ cloudbe&lt;rr&gt;y\n#&gt; [21] │ cranbe&lt;rr&gt;y\n#&gt; [23] │ cu&lt;rr&gt;ant\n#&gt; [28] │ e&lt;gg&gt;plant\n#&gt; [29] │ elderbe&lt;rr&gt;y\n#&gt; [32] │ goji be&lt;rr&gt;y\n#&gt; [33] │ g&lt;oo&gt;sebe&lt;rr&gt;y\n#&gt; [38] │ hucklebe&lt;rr&gt;y\n#&gt; [47] │ lych&lt;ee&gt;\n#&gt; [50] │ mulbe&lt;rr&gt;y\n#&gt; ... and 9 more\n\nstr_view(fruit, \"(..)\\\\1\", match = TRUE)\n#&gt;  [4] │ b&lt;anan&gt;a\n#&gt; [20] │ &lt;coco&gt;nut\n#&gt; [22] │ &lt;cucu&gt;mber\n#&gt; [41] │ &lt;juju&gt;be\n#&gt; [56] │ &lt;papa&gt;ya\n#&gt; [73] │ s&lt;alal&gt; berry\n\n\n捕获组是通过在正则表达式中使用括号()来定义的。例如，在正则表达式()-()中，()是第一个捕获组，()是第二个捕获组。捕获组的编号是从左到右，从 1 开始计数。当这个正则表达式匹配一个电话号码，如123 - 4567时，123被存储在第一个捕获组中，4567被存储在第二个捕获组中。\n\nShow the codestr_replace(string = c(\"123 - 4567 - 0030 - 789\",\n                           \"123 - 4567 - 4567 - 123\"),\n         pattern = \"(\\\\d{3}) - (\\\\d{4}) - \\\\2 - \\\\1\",\n         replacement = \"backreference\")\n#&gt; [1] \"123 - 4567 - 0030 - 789\" \"backreference\"\n\n\n有时候，我们可能不希望捕获组存储匹配内容，但又想使用分组来控制优先级或者方便使用反向引用。这时候可以使用非捕获组，其语法是(?:…)。例如，在正则表达式(?:)-()中，(?:)是一个非捕获组，它匹配 3 位数字但不存储，只有()是捕获组。如果要在后续部分引用部分的内容，就不能使用反向引用，因为它没有被捕获。\n\nShow the codestr_replace(string = c(\"123 - 4567 - 0030 - 789\",\n                           \"123 - 4567 - 45657 - 123\"),\n         pattern = \"(\\\\d{3}) - (?:\\\\d{4}) - (?:\\\\d{5}) - \\\\1\",\n         replacement = \"no backreference\")\n#&gt; [1] \"123 - 4567 - 0030 - 789\" \"no backreference\"",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>正则表达式</span>"
    ]
  },
  {
    "objectID": "string.html",
    "href": "string.html",
    "title": "\n11  字符文本的操纵\n",
    "section": "",
    "text": "11.1 stringr\nstringi+ stringr + glue + stringx\nShow the codex &lt;- c(\"apple\", \"banana\", \"pear\",\"why\")\n\n# 连接\nstr_c(x, collapse = \"; \")\n#&gt; [1] \"apple; banana; pear; why\"\npaste0(\"Hello \", c(\"John\", \"Susan\"))\n#&gt; [1] \"Hello John\"  \"Hello Susan\"\npaste(\"x\",c(\"a\",\"b\"),sep=\"\",collapse = \"?\")  \n#&gt; [1] \"xa?xb\"\npaste0(\"x\",c(\"A\",\"B\"),collapse=\"?\")\n#&gt; [1] \"xA?xB\"\ncat(\"hello\",\"BOb\",\"\\b\\n\",\"\\bIsn\\' R\",\"\\t\",\"GREAT?\\n\",sep = \" \" )\n#&gt; hello BOb \n#&gt;  Isn' R      GREAT?\n\n# \nstr_length(x) \n#&gt; [1] 5 6 4 3\nstr_sub(x,start =  1,end =  2)\n#&gt; [1] \"ap\" \"ba\" \"pe\" \"wh\"\nstr_dup(x, times = 2)\n#&gt; [1] \"appleapple\"   \"bananabanana\" \"pearpear\"     \"whywhy\"\n\n\n# 空格\nstr_pad(x, 10, \"both\")\n#&gt; [1] \"  apple   \" \"  banana  \" \"   pear   \" \"   why    \"\nx &lt;- c(\"  a   \", \"b   \",  \"   c\")\nstr_trim(x,side = \"left\")\n#&gt; [1] \"a   \" \"b   \" \"c\"\n\njabberwocky &lt;- str_c(\n  \"`Twas brillig, and the slithy toves \",\n  \"did gyre and gimble in the wabe: \",\n  \"All mimsy were the borogoves, \",\n  \"and the mome raths outgrabe. \"\n)\nstr_wrap(jabberwocky, width = 40)\n#&gt; [1] \"`Twas brillig, and the slithy toves did\\ngyre and gimble in the wabe: All mimsy\\nwere the borogoves, and the mome raths\\noutgrabe.\"\ncat(str_wrap(jabberwocky, width = 40))\n#&gt; `Twas brillig, and the slithy toves did\n#&gt; gyre and gimble in the wabe: All mimsy\n#&gt; were the borogoves, and the mome raths\n#&gt; outgrabe.\n\n# 截断\nx &lt;- \"This string is moderately long\"\nrbind(\n  str_trunc(x, 20, \"right\"),\n  str_trunc(x, 20, \"left\"),\n  str_trunc(x, 20, \"center\")\n)\n#&gt;      [,1]                  \n#&gt; [1,] \"This string is mo...\"\n#&gt; [2,] \"...s moderately long\"\n#&gt; [3,] \"This stri...ely long\"\n\n# Locale sensitive \nx &lt;- \"I like horses.\"\nstr_to_upper(x)\n#&gt; [1] \"I LIKE HORSES.\"\nstr_to_title(x)\n#&gt; [1] \"I Like Horses.\"\nstr_to_lower(x)\n#&gt; [1] \"i like horses.\"\nstr_to_lower(x,locale =  \"tr\")\n#&gt; [1] \"ı like horses.\"\n\n# 排序\nx &lt;- c(\"y\", \"i\", \"k\")\nstr_order(x)\n#&gt; [1] 2 3 1\n\nstr_sort(x,locale = \"en\")\n#&gt; [1] \"i\" \"k\" \"y\"",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>字符文本的操纵</span>"
    ]
  },
  {
    "objectID": "string.html#匹配正则表达式",
    "href": "string.html#匹配正则表达式",
    "title": "\n11  字符文本的操纵\n",
    "section": "\n11.2 匹配正则表达式",
    "text": "11.2 匹配正则表达式\n\nShow the codestrings &lt;- c(\n  \"apple\", \n  \"219 733 8965\", \n  \"329-293-8753\", \n  \"Work: 579-499-7527; Home: 543.355.3679\"\n)\nphone &lt;- \"([2-9][0-9]{2})[- .]([0-9]{3})[- .]([0-9]{4})\"\n# 检测\nstr_detect(strings, phone)\n#&gt; [1] FALSE  TRUE  TRUE  TRUE\ngrepl(pattern = phone, x = strings)\n#&gt; [1] FALSE  TRUE  TRUE  TRUE\n\n# 查找\nstr_subset(strings, phone)\n#&gt; [1] \"219 733 8965\"                          \n#&gt; [2] \"329-293-8753\"                          \n#&gt; [3] \"Work: 579-499-7527; Home: 543.355.3679\"\ngrep(pattern = phone, x = strings,value = T)\n#&gt; [1] \"219 733 8965\"                          \n#&gt; [2] \"329-293-8753\"                          \n#&gt; [3] \"Work: 579-499-7527; Home: 543.355.3679\"\n\nstr_which(strings, phone)\n#&gt; [1] 2 3 4\ngrep(pattern = phone, x = strings)\n#&gt; [1] 2 3 4\n\n\n# 计数\nstr_count(strings, phone)\n#&gt; [1] 0 1 1 2\n\n# 定位\nstr_locate(strings, phone)\n#&gt;      start end\n#&gt; [1,]    NA  NA\n#&gt; [2,]     1  12\n#&gt; [3,]     1  12\n#&gt; [4,]     7  18\nstr_locate_all(strings, phone)\n#&gt; [[1]]\n#&gt;      start end\n#&gt; \n#&gt; [[2]]\n#&gt;      start end\n#&gt; [1,]     1  12\n#&gt; \n#&gt; [[3]]\n#&gt;      start end\n#&gt; [1,]     1  12\n#&gt; \n#&gt; [[4]]\n#&gt;      start end\n#&gt; [1,]     7  18\n#&gt; [2,]    27  38\n\n# 提取\nstr_extract(strings, phone)\n#&gt; [1] NA             \"219 733 8965\" \"329-293-8753\" \"579-499-7527\"\nstr_extract_all(strings, phone)\n#&gt; [[1]]\n#&gt; character(0)\n#&gt; \n#&gt; [[2]]\n#&gt; [1] \"219 733 8965\"\n#&gt; \n#&gt; [[3]]\n#&gt; [1] \"329-293-8753\"\n#&gt; \n#&gt; [[4]]\n#&gt; [1] \"579-499-7527\" \"543.355.3679\"\nstr_extract_all(strings, phone, simplify = TRUE)\n#&gt;      [,1]           [,2]          \n#&gt; [1,] \"\"             \"\"            \n#&gt; [2,] \"219 733 8965\" \"\"            \n#&gt; [3,] \"329-293-8753\" \"\"            \n#&gt; [4,] \"579-499-7527\" \"543.355.3679\"\n\n# 提取匹配的捕获组 （）\nstr_match(strings, phone)\n#&gt;      [,1]           [,2]  [,3]  [,4]  \n#&gt; [1,] NA             NA    NA    NA    \n#&gt; [2,] \"219 733 8965\" \"219\" \"733\" \"8965\"\n#&gt; [3,] \"329-293-8753\" \"329\" \"293\" \"8753\"\n#&gt; [4,] \"579-499-7527\" \"579\" \"499\" \"7527\"\nstr_match_all(strings, phone)\n#&gt; [[1]]\n#&gt;      [,1] [,2] [,3] [,4]\n#&gt; \n#&gt; [[2]]\n#&gt;      [,1]           [,2]  [,3]  [,4]  \n#&gt; [1,] \"219 733 8965\" \"219\" \"733\" \"8965\"\n#&gt; \n#&gt; [[3]]\n#&gt;      [,1]           [,2]  [,3]  [,4]  \n#&gt; [1,] \"329-293-8753\" \"329\" \"293\" \"8753\"\n#&gt; \n#&gt; [[4]]\n#&gt;      [,1]           [,2]  [,3]  [,4]  \n#&gt; [1,] \"579-499-7527\" \"579\" \"499\" \"7527\"\n#&gt; [2,] \"543.355.3679\" \"543\" \"355\" \"3679\"\n\n# 替换\nstr_replace(strings, phone, replacement = \"XXX-XXX-XXXX\")\n#&gt; [1] \"apple\"                                 \n#&gt; [2] \"XXX-XXX-XXXX\"                          \n#&gt; [3] \"XXX-XXX-XXXX\"                          \n#&gt; [4] \"Work: XXX-XXX-XXXX; Home: 543.355.3679\"\n\nstr_replace_all(strings, phone, replacement = \"XXX-XXX-XXXX\")\n#&gt; [1] \"apple\"                                 \n#&gt; [2] \"XXX-XXX-XXXX\"                          \n#&gt; [3] \"XXX-XXX-XXXX\"                          \n#&gt; [4] \"Work: XXX-XXX-XXXX; Home: XXX-XXX-XXXX\"\n\nx &lt;- c(\"apple\", \"pear\", \"banana\")\nstr_remove(x, \"[aeiou]\")      #删除        相当于替换符为空字符\"\"\n#&gt; [1] \"pple\"  \"par\"   \"bnana\"\nstr_remove_all(x, \"[aeiou]\")   #str_replace(x, pattern, \"\")\n#&gt; [1] \"ppl\" \"pr\"  \"bnn\"\n\n# 拆分\nstr_split(\"a-b-c\", pattern = \"-\")\n#&gt; [[1]]\n#&gt; [1] \"a\" \"b\" \"c\"\nstr_split_fixed(\"a-b-c\", \"-\", n = 2)\n#&gt;      [,1] [,2] \n#&gt; [1,] \"a\"  \"b-c\"",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>字符文本的操纵</span>"
    ]
  },
  {
    "objectID": "string.html#匹配固定项",
    "href": "string.html#匹配固定项",
    "title": "\n11  字符文本的操纵\n",
    "section": "\n11.3 匹配固定项",
    "text": "11.3 匹配固定项\n\nShow the codea1 &lt;- \"\\u00e1\"\na2 &lt;- \"a\\u0301\"\nc(a1, a2)\n#&gt; [1] \"á\" \"á\"\nstr_detect(a1, fixed(a2))\n#&gt; [1] FALSE\nstr_detect(a1, coll(a2))\n#&gt; [1] TRUE\n\nx &lt;- \"This is a sentence.\"\nstr_split(x, boundary(\"word\"))\n#&gt; [[1]]\n#&gt; [1] \"This\"     \"is\"       \"a\"        \"sentence\"\nstr_count(x, boundary(\"word\"))\n#&gt; [1] 4\nstr_extract_all(x, boundary(\"word\"))\n#&gt; [[1]]\n#&gt; [1] \"This\"     \"is\"       \"a\"        \"sentence\"\nstr_split(x, \"\")\n#&gt; [[1]]\n#&gt;  [1] \"T\" \"h\" \"i\" \"s\" \" \" \"i\" \"s\" \" \" \"a\" \" \" \"s\" \"e\" \"n\" \"t\" \"e\" \"n\" \"c\" \"e\" \".\"\n\nstr_view(c(\"\", \"a\", \".\"), stringr::fixed(\"a\"))\n#&gt; [2] │ &lt;a&gt;\nstr_view(\"x X\", stringr::fixed(\"X\", ignore_case = TRUE))\n#&gt; [1] │ &lt;x&gt; &lt;X&gt;",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>字符文本的操纵</span>"
    ]
  },
  {
    "objectID": "string.html#宽格式str_flatten",
    "href": "string.html#宽格式str_flatten",
    "title": "\n11  字符文本的操纵\n",
    "section": "\n11.4 宽格式str_flatten\n",
    "text": "11.4 宽格式str_flatten\n\n\nShow the codedf &lt;- tribble(\n  ~ name, ~ fruit,\n  \"Carmen\", \"banana\",\n  \"Carmen\", \"apple\",\n  \"Marvin\", \"nectarine\",\n  \"Terence\", \"cantaloupe\",\n  \"Terence\", \"papaya\",\n  \"Terence\", \"mandarin\"\n)\ndf |&gt;\n  group_by(name) |&gt; \n  summarize(fruits = str_flatten(fruit, \", \",last = \", and \"))\n\n\n\n\nname\nfruits\n\n\n\nCarmen\nbanana, and apple\n\n\nMarvin\nnectarine\n\n\nTerence\ncantaloupe, papaya, and mandarin",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>字符文本的操纵</span>"
    ]
  },
  {
    "objectID": "string.html#str_glue",
    "href": "string.html#str_glue",
    "title": "\n11  字符文本的操纵\n",
    "section": "\n11.5 str_glue()\n",
    "text": "11.5 str_glue()\n\n\nShow the codename &lt;- \"Fred\"\nage &lt;- 50\nanniversary &lt;- as.Date(\"1991-10-12\")\n\nstr_glue(\n  \"My name is {name}, \",\n  \"my age next year is {age + 1}, \",\n  \"and my anniversary is {format(anniversary, '%A, %B %d, %Y')}.\"\n)\n#&gt; My name is Fred, my age next year is 51, and my anniversary is 星期六, 十月 12, 1991.\n\nstr_glue(\"My name is {name}, not {{name}}.\")\n#&gt; My name is Fred, not {name}.",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>字符文本的操纵</span>"
    ]
  },
  {
    "objectID": "string.html#转义escape",
    "href": "string.html#转义escape",
    "title": "\n11  字符文本的操纵\n",
    "section": "\n11.6 转义escape",
    "text": "11.6 转义escape\n\nShow the code# 转义字符串\nsingle_quote &lt;- \"\\'\"\ndouble_quote &lt;- '\\\"'\nbackslash &lt;- \"\\\\\"\nx &lt;- c(single_quote, double_quote, backslash)\n\nstr_view(x)\n#&gt; [1] │ '\n#&gt; [2] │ \"\n#&gt; [3] │ \\\n\n\n\nShow the codex &lt;- c(\"one\\ntwo\", \"one\\ttwo\", \"\\u00b5\", \"\\U0001f604\")\nx\n#&gt; [1] \"one\\ntwo\" \"one\\ttwo\" \"µ\"        \"😄\"\nstr_view(x)\n#&gt; [1] │ one\n#&gt;     │ two\n#&gt; [2] │ one{\\t}two\n#&gt; [3] │ µ\n#&gt; [4] │ 😄\n\n\n\nShow the codedot &lt;- \"\\\\.\"\nstr_view(dot)\n#&gt; [1] │ \\.\nstr_view(c(\"abc\", \"a.c\", \"bef\"), \"a\\\\.c\")  \n#&gt; [2] │ &lt;a.c&gt;",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>字符文本的操纵</span>"
    ]
  },
  {
    "objectID": "string.html#raw",
    "href": "string.html#raw",
    "title": "\n11  字符文本的操纵\n",
    "section": "\n11.7 raw",
    "text": "11.7 raw\n\nShow the codesingle_quote &lt;- r\"(')\"        # []    ---()---  -()-\ndouble_quote &lt;- r\"[\"]\"\nbackslash &lt;- r\"--(\\)--\"\n\nx &lt;- c(single_quote, double_quote, backslash)\nx\n#&gt; [1] \"'\"  \"\\\"\" \"\\\\\"\nstr_view(x)\n#&gt; [1] │ '\n#&gt; [2] │ \"\n#&gt; [3] │ \\",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>字符文本的操纵</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#pandoc-div块",
    "href": "dynamic_report.html#pandoc-div块",
    "title": "\n13  动态报告\n",
    "section": "\n6 Pandoc Div块",
    "text": "6 Pandoc Div块\nDiv .class .panel-tabset .nav-pills\n\n\nScatterplot\nBoxplot\nBarplot\n\n\n\n\nShow the codempg %&gt;%\n  ggplot(aes(x = reorder(class, hwy), y = hwy, fill = class)) +\n  geom_point() +\n  xlab(\"class\") +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n\nShow the codempg %&gt;%\n  ggplot(aes(x = reorder(class, hwy), y = hwy, fill = class)) +\n  geom_boxplot() +\n  xlab(\"class\") +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n\nShow the codempg %&gt;%\n  ggplot(aes(x = reorder(class, hwy), y = hwy, fill = class)) +\n  geom_bar(stat = \"identity\") +\n  xlab(\"class\") +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n\n如左图 图 13.1 (a) 所示，点有25种不同的形状，\n右图 图 13.1 (b) 所示。\n\nShow the codeplot(cars)\nplot(pressure)\nplot(mtcars)\n\n\n\n\n\n\n\n\n\n(a) 汽车\n\n\n\n\n\n\n\n\n\n\n\n(b) 压力\n\n\n\n\n\n\n\n\n\n(c) mtcars\n\n\n\n\n\n\n图 2: 复杂排版组图输出",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>动态报告</span>"
    ]
  }
]