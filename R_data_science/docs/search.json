[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R数据科学与编程",
    "section": "",
    "text": "推荐阅读",
    "crumbs": [
      "推荐阅读"
    ]
  },
  {
    "objectID": "index.html#数据科学",
    "href": "index.html#数据科学",
    "title": "R数据科学与编程",
    "section": "数据科学",
    "text": "数据科学\n\nhttps://r-coder.com/\nR for data science\ntidyverse.org\nbookdown.org\ndata.table\narrow.apache.R\nPandoc",
    "crumbs": [
      "推荐阅读"
    ]
  },
  {
    "objectID": "index.html#编程",
    "href": "index.html#编程",
    "title": "R数据科学与编程",
    "section": "编程",
    "text": "编程\n\nAdvanced R\nEfficient R programming\nR Packages(2e)",
    "crumbs": [
      "推荐阅读"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "\n1  介绍\n",
    "section": "",
    "text": "1.1 工作空间\nShow the codex=10\nsave(x,file = \"mydata.RData\")\nload(\"mydata.RData\")\n\nmy_model &lt;- lm(hwy~ displ, data = mpg)\nsaveRDS(my_model, file = \"my_model.rds\")\nreadRDS(\"my_model.rds\")\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = hwy ~ displ, data = mpg)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)        displ  \n#&gt;      35.698       -3.531\n\nls()\n#&gt; [1] \"my_model\" \"x\"\nrm(list = ls())",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>介绍</span>"
    ]
  },
  {
    "objectID": "intro.html#工作目录",
    "href": "intro.html#工作目录",
    "title": "\n1  介绍\n",
    "section": "\n1.2 工作目录",
    "text": "1.2 工作目录\n\nShow the codegetwd()\n#&gt; [1] \"D:/_DataManager/GitHub/R/R_notes_version_0\"\n\n\n# setwd(\"My\\\\Path\")\n# setwd(\"My/Path\") # Equivalent",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>介绍</span>"
    ]
  },
  {
    "objectID": "intro.html#文件系统",
    "href": "intro.html#文件系统",
    "title": "\n1  介绍\n",
    "section": "\n1.3 文件系统",
    "text": "1.3 文件系统\n\n1.3.1 文件夹\n\nShow the code# 新建\ndir.create(\"data/file_create_ccccccccccccccc\")\n\n\n# 删除\nunlink(\"data/file_create_ccccccccccccccc\", recursive = TRUE)\n\n\n\n# 列出文件夹里的文件\n\nlist.files(path = \"data/\",pattern = \"\\\\.xlsx$\", full.names = TRUE, recursive =T)\n#&gt; [1] \"data/deaths.xlsx\"                        \n#&gt; [2] \"data/deathsA5_F15.xlsx\"                  \n#&gt; [3] \"data/penguins.xlsx\"                      \n#&gt; [4] \"data/read_write/多个sheet-iris_data.xlsx\"\n#&gt; [5] \"data/students.xlsx\"\n\ndir(path = \"data/\",pattern = \"\\\\.xlsx$\", full.names = TRUE, recursive =T) # Equivalent\n#&gt; [1] \"data/deaths.xlsx\"                        \n#&gt; [2] \"data/deathsA5_F15.xlsx\"                  \n#&gt; [3] \"data/penguins.xlsx\"                      \n#&gt; [4] \"data/read_write/多个sheet-iris_data.xlsx\"\n#&gt; [5] \"data/students.xlsx\"\n\n\n\n1.3.2 文件\n\nShow the codefile.create(\"data/create.R\")\n#&gt; [1] TRUE\nfile.remove(\"data/create.R\")\n#&gt; [1] TRUE\nsystem.file(\"data\",package = \"MatrixEQTL\")\n#&gt; [1] \"\"\n\nfile.path(system.file(\"data\",package = \"MatrixEQTL\"),\"exprsData.txt\")\n#&gt; [1] \"/exprsData.txt\"\n\n\n# 复制\n# file.copy(\"my_file.R\", \"my_copied_file.R\")\n\n\n\n1.3.3 压缩文件\n\nShow the codeunzip(\"data/read_write/leadership.zip\", exdir = \"data/read_write/解压缩\")",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>介绍</span>"
    ]
  },
  {
    "objectID": "intro.html#r包管理",
    "href": "intro.html#r包管理",
    "title": "\n1  介绍\n",
    "section": "\n1.4 R包管理",
    "text": "1.4 R包管理\n\nShow the codechooseCRANmirror()\nchooseBioCmirror()\nsetRepositories()\n\n\n\n1.4.1 安装\n\nShow the code# CRAN \ninstall.packages(\"package_name\")  \n\n# R Forge\n\ninstall.packages(\"MPAgenomics\", repos = \"http://R-Forge.R-project.org\",\n                 dependencies = TRUE)\n\n# Bioconductor \ninstall.packages(\"BiocManager\") \nBiocManager::install()  \n\n# 本地 \ninstall.packages(\"./GenomeInfoDbData_1.2.12.tar.gz\", repos = NULL, type = \"source\")\ninstall.packages(\"./GenomeInfoDbData_1.2.12.zip\", repos = NULL, type = \"binary\")\n\n\n# Github \nremotes::install_github(\"tidyverse/ggplot2\")\n\n\n\n1.4.2 更新\n\nShow the code# 更新\nupdate.packages(ask = FALSE)  \nremotes::update_packages()\n\n\n\n1.4.3 检查\n\nShow the code# If FALSE, install the package\nif (require(\"MASS\")) install.packages(\"MASS\")\n\n\n\nShow the code\n(.packages())\n#&gt;  [1] \"stats\"      \"graphics\"   \"grDevices\"  \"utils\"      \"datasets\"  \n#&gt;  [6] \"writexl\"    \"readxl\"     \"patchwork\"  \"lubridate\"  \"forcats\"   \n#&gt; [11] \"stringr\"    \"dplyr\"      \"purrr\"      \"readr\"      \"tidyr\"     \n#&gt; [16] \"tibble\"     \"ggplot2\"    \"tidyverse\"  \"conflicted\" \"showtext\"  \n#&gt; [21] \"showtextdb\" \"sysfonts\"   \"methods\"    \"base\"\nsessionInfo()\n#&gt; R version 4.4.1 (2024-06-14 ucrt)\n#&gt; Platform: x86_64-w64-mingw32/x64\n#&gt; Running under: Windows 11 x64 (build 22631)\n#&gt; \n#&gt; Matrix products: default\n#&gt; \n#&gt; \n#&gt; locale:\n#&gt; [1] LC_COLLATE=Chinese (Simplified)_China.utf8 \n#&gt; [2] LC_CTYPE=Chinese (Simplified)_China.utf8   \n#&gt; [3] LC_MONETARY=Chinese (Simplified)_China.utf8\n#&gt; [4] LC_NUMERIC=C                               \n#&gt; [5] LC_TIME=Chinese (Simplified)_China.utf8    \n#&gt; \n#&gt; time zone: Asia/Shanghai\n#&gt; tzcode source: internal\n#&gt; \n#&gt; attached base packages:\n#&gt; [1] stats     graphics  grDevices utils     datasets  methods   base     \n#&gt; \n#&gt; other attached packages:\n#&gt;  [1] writexl_1.5.1    readxl_1.4.3     patchwork_1.3.0  lubridate_1.9.3 \n#&gt;  [5] forcats_1.0.0    stringr_1.5.1    dplyr_1.1.4      purrr_1.0.2     \n#&gt;  [9] readr_2.1.5      tidyr_1.3.1      tibble_3.2.1     ggplot2_3.5.1   \n#&gt; [13] tidyverse_2.0.0  conflicted_1.2.0 showtext_0.9-7   showtextdb_3.0  \n#&gt; [17] sysfonts_0.8.9  \n#&gt; \n#&gt; loaded via a namespace (and not attached):\n#&gt;  [1] utf8_1.2.4        generics_0.1.3    stringi_1.8.4     hms_1.1.3        \n#&gt;  [5] digest_0.6.37     magrittr_2.0.3    evaluate_1.0.1    grid_4.4.1       \n#&gt;  [9] timechange_0.3.0  fastmap_1.2.0     jsonlite_1.8.9    cellranger_1.1.0 \n#&gt; [13] fansi_1.0.6       scales_1.3.0      codetools_0.2-20  cli_3.6.3        \n#&gt; [17] rlang_1.1.4       munsell_0.5.1     withr_3.0.1       cachem_1.1.0     \n#&gt; [21] tools_4.4.1       tzdb_0.4.0        memoise_2.0.1     colorspace_2.1-1 \n#&gt; [25] vctrs_0.6.5       R6_2.5.1          lifecycle_1.0.4   htmlwidgets_1.6.4\n#&gt; [29] pkgconfig_2.0.3   pillar_1.9.0      gtable_0.3.5      glue_1.8.0       \n#&gt; [33] xfun_0.48         tidyselect_1.2.1  knitr_1.48        rstudioapi_0.17.0\n#&gt; [37] farver_2.1.2      htmltools_0.5.8.1 rmarkdown_2.28    compiler_4.4.1\n\n\n\n1.4.4 删除\n\nShow the coderemove.packages(\"airway\")",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>介绍</span>"
    ]
  },
  {
    "objectID": "intro.html#全局选项",
    "href": "intro.html#全局选项",
    "title": "\n1  介绍\n",
    "section": "\n1.5 全局选项",
    "text": "1.5 全局选项\n\nShow the codegetOption(\"timeout\")\n#&gt; [1] 60\ngetOption(\"digits\")\n#&gt; [1] 7\ngetOption(\"repos\")\n#&gt;                        CRAN \n#&gt; \"https://cran.rstudio.com/\"\ngetOption(\"BioC_mirror\")\n#&gt; [1] \"https://mirrors.tuna.tsinghua.edu.cn/bioconductor\"",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>介绍</span>"
    ]
  },
  {
    "objectID": "intro.html#语言设置",
    "href": "intro.html#语言设置",
    "title": "\n1  介绍\n",
    "section": "\n1.6 语言设置",
    "text": "1.6 语言设置\n\nShow the codeSys.setenv(LANGUAGE = \"en\")",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>介绍</span>"
    ]
  },
  {
    "objectID": "data_type.html",
    "href": "data_type.html",
    "title": "\n2  数据类型\n",
    "section": "",
    "text": "2.1 numeric\n数据类型是指数据的存储格式，定义了存储在变量中的数据的性质和类别，通常无法分解成更简单的类型。\n元素类型（element type）\nR 有 5种基础和 4 种特殊的 element types：",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>数据类型</span>"
    ]
  },
  {
    "objectID": "data_type.html#numeric",
    "href": "data_type.html#numeric",
    "title": "\n2  数据类型\n",
    "section": "",
    "text": "2.1.1 integer\n\nShow the codemode(2024L)\n#&gt; [1] \"numeric\"\ntypeof(2024L)\n#&gt; [1] \"integer\"\n\n\n\n2.1.2 double\n十进制decimal ()，科学计数法scientific () ，十六进制hexadecimal ()\n\nShow the codemode(1.1)\n#&gt; [1] \"numeric\"\ntypeof(1.1)\n#&gt; [1] \"double\"\n0.1234\n#&gt; [1] 0.1234\n1.23e4\n#&gt; [1] 12300\n0x111   # 16^2×1+ 16^1×1 + 16^0×1\n#&gt; [1] 273\n\n\n浮点标准定义的特殊值\nInf(正无穷)，-Inf（负无穷），NaN（非数）\n\n\nInfinity 无穷大\n\nShow the codemode(-Inf)\n#&gt; [1] \"numeric\"\nInf\n#&gt; [1] Inf\n\n\n\n\nNaN，Not a Number，非数字\n\nShow the codeNaN\n#&gt; [1] NaN\n0 / 0\n#&gt; [1] NaN\nis.nan(0 / 0)\n#&gt; [1] TRUE\nmode(0 / 0)\n#&gt; [1] \"numeric\"",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>数据类型</span>"
    ]
  },
  {
    "objectID": "data_type.html#logical",
    "href": "data_type.html#logical",
    "title": "\n2  数据类型\n",
    "section": "\n2.2 logical",
    "text": "2.2 logical\n比较运算符 ?Comparison\n逻辑运算符?Logic\n\nShow the codetypeof(TRUE)\n#&gt; [1] \"logical\"\nx &lt;- c(T,F,T)\ny &lt;- c(T,T,F)\n\n# 非\n!x\n#&gt; [1] FALSE  TRUE FALSE\n\n# 与\nx&y\n#&gt; [1]  TRUE FALSE FALSE\nT&&F\n#&gt; [1] FALSE\n# 或\nx|y\n#&gt; [1] TRUE TRUE TRUE\nT||F\n#&gt; [1] TRUE\n\n# 异或  不同为TRUE 或 1\nxor(x,y)\n#&gt; [1] FALSE  TRUE  TRUE",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>数据类型</span>"
    ]
  },
  {
    "objectID": "data_type.html#character",
    "href": "data_type.html#character",
    "title": "\n2  数据类型\n",
    "section": "\n2.3 character",
    "text": "2.3 character\n\nShow the codetypeof(\"R language\")\n#&gt; [1] \"character\"\nsprintf(\"%.30f\", 5.2)\n#&gt; [1] \"5.200000000000000177635683940025\"",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>数据类型</span>"
    ]
  },
  {
    "objectID": "data_type.html#强制类型转换",
    "href": "data_type.html#强制类型转换",
    "title": "\n2  数据类型\n",
    "section": "\n2.4 强制类型转换",
    "text": "2.4 强制类型转换\n逻辑 -&gt; 整数 -&gt; 浮点数 -&gt; 字符",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>数据类型</span>"
    ]
  },
  {
    "objectID": "data_type.html#complex",
    "href": "data_type.html#complex",
    "title": "\n2  数据类型\n",
    "section": "\n2.5 complex",
    "text": "2.5 complex\n\nShow the codez &lt;- 2+3i\ntypeof(z) \n#&gt; [1] \"complex\"\nis.complex(z)\n#&gt; [1] TRUE\n# 获取实部\nRe(z)\n#&gt; [1] 2\n\n# 获取虚部\nIm(z)\n#&gt; [1] 3\n\n# 模\nMod(z)\n#&gt; [1] 3.605551\n\n# 共轭\nConj(z)\n#&gt; [1] 2-3i",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>数据类型</span>"
    ]
  },
  {
    "objectID": "data_type.html#raw",
    "href": "data_type.html#raw",
    "title": "\n2  数据类型\n",
    "section": "\n2.6 raw",
    "text": "2.6 raw\n\nShow the codecharToRaw(\"abcde12345\") #每个字符的原始二进制表示（ASCII码）转换成16进制输出\n#&gt;  [1] 61 62 63 64 65 31 32 33 34 35\ntypeof(charToRaw(\"abcde12345\")) \n#&gt; [1] \"raw\"\n# ?raw",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>数据类型</span>"
    ]
  },
  {
    "objectID": "data_type.html#na",
    "href": "data_type.html#na",
    "title": "\n2  数据类型\n",
    "section": "\n2.7 NA",
    "text": "2.7 NA\nNA，Not Available，该值是其他内容的占位符，因此长度为 1\n实际上，每种原子类型有一个缺失值：NA_logical_、NA_integer_、NA_double_、NA_character_。\n\nShow the codelength(NA)\n#&gt; [1] 1",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>数据类型</span>"
    ]
  },
  {
    "objectID": "data_type.html#null",
    "href": "data_type.html#null",
    "title": "\n2  数据类型\n",
    "section": "\n2.8 NULL\n",
    "text": "2.8 NULL\n\n长度始终为零，并且没有属性。\n\nShow the codetypeof(NULL)\n#&gt; [1] \"NULL\"\nlength(NULL)\n#&gt; [1] 0\nis.null(NULL)\n#&gt; [1] TRUE\nc()\n#&gt; NULL",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>数据类型</span>"
    ]
  },
  {
    "objectID": "data_type.html#表达式",
    "href": "data_type.html#表达式",
    "title": "\n2  数据类型\n",
    "section": "\n2.9 表达式",
    "text": "2.9 表达式\nexpression是一种特殊的 element type，单独的一个expression存储的是一个没有执行的 R 代码\n\nShow the codeexpr &lt;- expression(1 + 3)\ntypeof(expr)\n#&gt; [1] \"expression\"\neval(expr)\n#&gt; [1] 4",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>数据类型</span>"
    ]
  },
  {
    "objectID": "data_structure.html",
    "href": "data_structure.html",
    "title": "\n3  数据结构\n",
    "section": "",
    "text": "3.1 属性\n数据结构是一种组织和存储数据的方式，它使得数据可以更高效地访问和操作。数据结构通常是由基本数据类型组合而成的。例如，数组、链表、栈、队列、树和图等都是数据结构。\nR中的数据结构包括 原子向量（atomic vector）和泛型向量（generic vector）。\n在R中任何一个对象都具有属性：\n在R中有多种方式查看对象的属性，\n大多数操作都会丢失大多数属性。\n只有两个属性是默认保留的：",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>数据结构</span>"
    ]
  },
  {
    "objectID": "data_structure.html#属性",
    "href": "data_structure.html#属性",
    "title": "\n3  数据结构\n",
    "section": "",
    "text": "names,dimnames\nlength\ndimensions（例如matrices，arrays）\nclass\n自定义属性\n\n\n\n\nclass()函数，从面向对象编程的角度，知道其class属性后就可以通过methods()函数查找相应的泛型函数（generic function）对其操作。\n\nShow the codem1 &lt;- matrix(1:6,nrow = 2)\nm1\n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]    1    3    5\n#&gt; [2,]    2    4    6\nclass(m1)\n#&gt; [1] \"matrix\" \"array\"\nmethods(class=\"matrix\")\n#&gt;  [1] anyDuplicated as.data.frame as.raster     as_tibble     boxplot      \n#&gt;  [6] coerce        determinant   duplicated    edit          head         \n#&gt; [11] initialize    isSymmetric   Math          Math2         Ops          \n#&gt; [16] relist        subset        summary       tail          unique       \n#&gt; see '?methods' for accessing help and source code\n\n\n\n\nattributes() 主要是用于列出对象所有已有的属性。\n\nShow the codeattributes(m1)\n#&gt; $dim\n#&gt; [1] 2 3\n\nattr(x = m1,which = \"dim\") &lt;- c(3,2)\nm1\n#&gt;      [,1] [,2]\n#&gt; [1,]    1    4\n#&gt; [2,]    2    5\n#&gt; [3,]    3    6\n\n# 或者\na &lt;- structure(\n  m1, \n  dim=c(1,6)\n)\nstr(attributes(a))\n#&gt; List of 1\n#&gt;  $ dim: int [1:2] 1 6\na\n#&gt;      [,1] [,2] [,3] [,4] [,5] [,6]\n#&gt; [1,]    1    2    3    4    5    6\n\n\n\n\n\n\n\n\n“names”，一个字符向量，为每个元素命名。\n\nShow the code# When creating it: \nx &lt;- c(a = 1, b = 2, c = 3)\nx\n#&gt; a b c \n#&gt; 1 2 3\nattributes(x)\n#&gt; $names\n#&gt; [1] \"a\" \"b\" \"c\"\nnames(x)\n#&gt; [1] \"a\" \"b\" \"c\"\n\n# By assigning a character vector to names()\nx &lt;- 1:3\nnames(x) &lt;- c(\"a\", \"b\", \"c\")\n\n# Inline, with setNames():\nx &lt;- setNames(1:3, c(\"a\", \"b\", \"c\"))\n\n\n\n\n“dim”，dimensions 的缩写，整数向量，用于将向量转换为矩阵或数组。\n对于原子向量，dimension 属性通常用于创建矩阵或数组。\n\nShow the codez &lt;- 1:6\ndim(z) &lt;- c(3, 2, 1)\nz\n#&gt; , , 1\n#&gt; \n#&gt;      [,1] [,2]\n#&gt; [1,]    1    4\n#&gt; [2,]    2    5\n#&gt; [3,]    3    6\nclass(z)\n#&gt; [1] \"array\"\nattributes(z)\n#&gt; $dim\n#&gt; [1] 3 2 1\ndim(z)\n#&gt; [1] 3 2 1\n\n\n对于列表，dimension 属性可用于创建列表矩阵或列表数组：\n\nShow the codel &lt;- list(1:5, \"a\", TRUE, 1.0)\ndim(l) &lt;- c(2, 2)\nl\n#&gt;      [,1]      [,2]\n#&gt; [1,] integer,5 TRUE\n#&gt; [2,] \"a\"       1\nclass(l)\n#&gt; [1] \"matrix\" \"array\"\nattributes(l)\n#&gt; $dim\n#&gt; [1] 2 2\nl[[1,1]]\n#&gt; [1] 1 2 3 4 5\n\n\n\n\n向量\n矩阵\n数组\n\n\n\nnames()\nrownames(),colnames()\ndimnames()\n\n\nlength()\nnrow(),ncol()\ndim()\n\n\nc()\nrbind(),cbind()\nabind::abind()\n\n\n—\nt()\naperm()\n\n\nis.null(dim(x))\nis.matrix()\nis.array()",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>数据结构</span>"
    ]
  },
  {
    "objectID": "data_structure.html#原子向量",
    "href": "data_structure.html#原子向量",
    "title": "\n3  数据结构\n",
    "section": "\n3.2 原子向量",
    "text": "3.2 原子向量\n\n\n\n\n\n3.2.1 vector\n向量是一组有序元素的集合。一个 vector 可以包含任意数量的元素。但是，向量的所有元素必须属于同一类型。\n\nShow the code# 单元素向量\n\"a\" == c(\"a\")\n#&gt; [1] TRUE\nis.vector(\"a\")\n#&gt; [1] TRUE\n\n# 函数c()  Combine Values into a Vector or List\n\nc(\"a\",\"b\",\"c\")\n#&gt; [1] \"a\" \"b\" \"c\"\nc(list(1),list(T)) |&gt; is.vector()\n#&gt; [1] TRUE\n\n\n\n3.2.2 matrices\n矩阵是一个具有维度属性（dim）的原子向量，所有元素必须是同一类型。\nmatrix(data= ,nrow=1  ,ncol=1  ,byrow=FALSE ,dimnames=list(rnames,cnames) ,...)\n\nShow the codenum&lt;-c(16,22,24,28)\nrnames&lt;-c(\"R1\",\"R2\")\ncnames&lt;-c(\"C1\",\"C2\")\nm&lt;-matrix(num,nrow=2,ncol=2,byrow=TRUE,dimnames=list(rnames,cnames))\nm\n#&gt;    C1 C2\n#&gt; R1 16 22\n#&gt; R2 24 28\nclass(m)\n#&gt; [1] \"matrix\" \"array\"\nattributes(m)\n#&gt; $dim\n#&gt; [1] 2 2\n#&gt; \n#&gt; $dimnames\n#&gt; $dimnames[[1]]\n#&gt; [1] \"R1\" \"R2\"\n#&gt; \n#&gt; $dimnames[[2]]\n#&gt; [1] \"C1\" \"C2\"\ndim(m)\n#&gt; [1] 2 2\nrownames(m)\n#&gt; [1] \"R1\" \"R2\"\ncolnames(m)\n#&gt; [1] \"C1\" \"C2\"\n\n\n\n3.2.2.1 稀疏矩阵\nSparse matrix\n稀疏矩阵的典型构造方式是通过三元组。\n\nShow the codelibrary(Matrix)\ni &lt;- c(1, 3:8) # 行指标\nj &lt;- c(2, 9, 6:10) # 列指标\nx &lt;- 7 * (1:7) # 数据\nsparseMatrix(i, j, x = x)\n#&gt; 8 x 10 sparse Matrix of class \"dgCMatrix\"\n#&gt;                              \n#&gt; [1,] . 7 . . .  .  .  .  .  .\n#&gt; [2,] . . . . .  .  .  .  .  .\n#&gt; [3,] . . . . .  .  .  . 14  .\n#&gt; [4,] . . . . . 21  .  .  .  .\n#&gt; [5,] . . . . .  . 28  .  .  .\n#&gt; [6,] . . . . .  .  . 35  .  .\n#&gt; [7,] . . . . .  .  .  . 42  .\n#&gt; [8,] . . . . .  .  .  .  . 49\n\n\n稀疏矩阵对象仅存储非零元素，更节省内存\n\nShow the code\nN = 100\n\nm = diag(1, N, N)\nsp = sparseMatrix(1:N, 1:N, x = 1)\n \nobject.size(m)\n#&gt; 80216 bytes\nobject.size(sp)\n#&gt; 3104 bytes\n\n\n\n3.2.3 array\n数组也是一个具有维度属性（dim）的原子向量，所有元素必须是同一类型。\narray(data,dim_numeric_vector=c(...),dimnames = list(dim1,dim2,...),...)\n\nShow the codev&lt;-1:24 \ndim1&lt;-c(\"A1\",\"A2\",\"A3\") \ndim2&lt;-c(\"B1\",\"B2\",\"B3\",\"B4\")\ndim3&lt;-c(\"C1\",\"C2\") \narray_3d&lt;-array(v,c(3,4,2),dimnames = list(dim1,dim2,dim3)) \narray_3d\n#&gt; , , C1\n#&gt; \n#&gt;    B1 B2 B3 B4\n#&gt; A1  1  4  7 10\n#&gt; A2  2  5  8 11\n#&gt; A3  3  6  9 12\n#&gt; \n#&gt; , , C2\n#&gt; \n#&gt;    B1 B2 B3 B4\n#&gt; A1 13 16 19 22\n#&gt; A2 14 17 20 23\n#&gt; A3 15 18 21 24\nclass(array_3d)\n#&gt; [1] \"array\"\nattributes(array_3d)\n#&gt; $dim\n#&gt; [1] 3 4 2\n#&gt; \n#&gt; $dimnames\n#&gt; $dimnames[[1]]\n#&gt; [1] \"A1\" \"A2\" \"A3\"\n#&gt; \n#&gt; $dimnames[[2]]\n#&gt; [1] \"B1\" \"B2\" \"B3\" \"B4\"\n#&gt; \n#&gt; $dimnames[[3]]\n#&gt; [1] \"C1\" \"C2\"\ndim(array_3d)\n#&gt; [1] 3 4 2\ndimnames(array_3d)\n#&gt; [[1]]\n#&gt; [1] \"A1\" \"A2\" \"A3\"\n#&gt; \n#&gt; [[2]]\n#&gt; [1] \"B1\" \"B2\" \"B3\" \"B4\"\n#&gt; \n#&gt; [[3]]\n#&gt; [1] \"C1\" \"C2\"",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>数据结构</span>"
    ]
  },
  {
    "objectID": "data_structure.html#s3类原子向量",
    "href": "data_structure.html#s3类原子向量",
    "title": "\n3  数据结构\n",
    "section": "\n3.3 S3类原子向量",
    "text": "3.3 S3类原子向量\n要保留其他属性，需要创建S3 类。\nbase R 中使用的四个重要的 S3类原子向量：\n\n分类数据，其中值来自factor向量中记录的一组固定水平。\n日期（具有日期分辨率），记录在Date向量中。\n日期时间（具有秒或亚秒分辨率），存储在 POSIXct 向量中。\n持续时间，存储在difftime向量中。\n\n\n\n\n\n\n3.3.1 factor\n因子，分类变量，建立在具有两个属性（class，levels）的 integer向量之上。\nfactor(vector,ordered=FALSE,levels=c(v1,v2,…),labels= ,...) ，在内存中以整数向量c(1,2,3,...,k)存储。\n\nShow the code# 存储形式\nx &lt;- factor(c(\"a\", \"b\", \"b\", \"a\"))\nx\n#&gt; [1] a b b a\n#&gt; Levels: a b\ntypeof(x)\n#&gt; [1] \"integer\"\nattributes(x)\n#&gt; $levels\n#&gt; [1] \"a\" \"b\"\n#&gt; \n#&gt; $class\n#&gt; [1] \"factor\"\nlevels(x)\n#&gt; [1] \"a\" \"b\"\nclass(x)\n#&gt; [1] \"factor\"\n\n\n# 名义变量 nominal variable\ndiabetes&lt;-c(\"t1\",\"t2\",\"t1\",\"t1\") \nattributes(diabetes)\n#&gt; NULL\ndiabetes&lt;-factor(diabetes)\nattributes(diabetes)\n#&gt; $levels\n#&gt; [1] \"t1\" \"t2\"\n#&gt; \n#&gt; $class\n#&gt; [1] \"factor\"\n\n\n# 顺序变量 ordinal variable     默认水平根据字母顺序而定\nstatus&lt;-c(\"poor\",\"better\",\"best\",\"poor\")\nstatus&lt;-factor(status,ordered = TRUE) \nstr(status) \n#&gt;  Ord.factor w/ 3 levels \"best\"&lt;\"better\"&lt;..: 3 2 1 3\nstatus&lt;-factor(status,ordered =TRUE,levels = c(\"poor\",\"better\",\"best\")) \nstr(status) \n#&gt;  Ord.factor w/ 3 levels \"poor\"&lt;\"better\"&lt;..: 1 2 3 1\n\n\n#改变外在标签\nsex&lt;-c(1,2,2,1)\nsex\n#&gt; [1] 1 2 2 1\nsex&lt;-factor(sex,levels=c(1,2),labels = c(\"男\",\"女\")) \nstr(sex) \n#&gt;  Factor w/ 2 levels \"男\",\"女\": 1 2 2 1\nsex\n#&gt; [1] 男 女 女 男\n#&gt; Levels: 男 女\n\n\nage &lt;- c(29, 44, 45, 68, 99)\n# 连续型变量→因子\ncut(\n    age,\n    breaks = c(0, 18, 45, 65, Inf),\n    labels = c(\"minor\", \"young\", \"middle_age\", \"elder\"),\n    include.lowest = TRUE,\n    right = TRUE\n)\n#&gt; [1] young young young elder elder\n#&gt; Levels: minor young middle_age elder\n\n\n\n3.3.2 Date\n日期向量建立在 double 向量之上，具有class \"Date\"属性。\n日期 默认格式：\"%Y-%m-%d\" xxxx-xx-xx,例如：2023-03-15\n\nShow the codetoday &lt;- Sys.Date()\ntoday\n#&gt; [1] \"2024-11-07\"\ntypeof(today)\n#&gt; [1] \"double\"\nattributes(today)\n#&gt; $class\n#&gt; [1] \"Date\"\nclass(today)\n#&gt; [1] \"Date\"\n\nas.Date(c(\"02 14-2002\",\"01 04-2013\"),\"%m %d-%Y\") #以\"%m %d-%Y\"格式读入\n#&gt; [1] \"2002-02-14\" \"2013-01-04\"\nformat(Sys.Date(),\"%Y/%m/%d\") #以\"%Y/%m/%d\"格式输出\n#&gt; [1] \"2024/11/07\"\n\n\n# 双精度值（通过剥离类来查看）表示自 1970 年 1 月 1 日以来的天数\ndate &lt;- as.Date(\"1970-02-01\")\nunclass(date)\n#&gt; [1] 31\n\n\n\n3.3.3 Datetime\nPOSIXct 和 POSIXlt\n“POSIX”是可移植操作系统接口（ Portable Operating System Interface）的缩写，这是一个跨平台标准系列。“ct”代表calendar time（C 中的类型），“lt”代表local time（C 中的类型）。\nPOSIXct 向量建立在 double向量之上，其中值表示自 1970-01-01 以来的秒数\n\nShow the codenow_ct &lt;- as.POSIXct(\"2024-04-20 15:45\", tz = \"Asia/Shanghai\")\nnow_ct\n#&gt; [1] \"2024-04-20 15:45:00 CST\"\ntypeof(now_ct)\n#&gt; [1] \"double\"\nattributes(now_ct)\n#&gt; $class\n#&gt; [1] \"POSIXct\" \"POSIXt\" \n#&gt; \n#&gt; $tzone\n#&gt; [1] \"Asia/Shanghai\"\nclass(now_ct)\n#&gt; [1] \"POSIXct\" \"POSIXt\"\n\n\n\n3.3.4 Durations\n持续时间（表示日期对或日期时间对之间的时间量）存储在difftimes中。Difftimes 建立在 double 之上，并且具有确定整数应如何解释的属性。\n\nShow the codeunits_1 &lt;- as.difftime(1, units = \"weeks\")  #units = c(\"auto\", \"secs\", \"mins\", \"hours\",\"days\", \"weeks\"))\n\nunits_1\n#&gt; Time difference of 1 weeks\ntypeof(units_1)\n#&gt; [1] \"double\"\nattributes(units_1)\n#&gt; $class\n#&gt; [1] \"difftime\"\n#&gt; \n#&gt; $units\n#&gt; [1] \"weeks\"\nclass(units_1)\n#&gt; [1] \"difftime\"\nunits(units_1)\n#&gt; [1] \"weeks\"\nunits(units_1) &lt;- \"days\"\n\nattributes(units_1)\n#&gt; $units\n#&gt; [1] \"days\"\n#&gt; \n#&gt; $class\n#&gt; [1] \"difftime\"",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>数据结构</span>"
    ]
  },
  {
    "objectID": "data_structure.html#泛型向量",
    "href": "data_structure.html#泛型向量",
    "title": "\n3  数据结构\n",
    "section": "\n3.4 泛型向量",
    "text": "3.4 泛型向量\n从技术上讲，列表的每个元素实际上是相同的类型，因为每个元素实际上是对另一个对象的引用 Figure 3.1 ，该对象可以是任何类型。\n\n3.4.1 list\n列表不存储值本身，而是存储对它们的引用：\n\nShow the codel1 &lt;- list(1,2,3)\ntypeof(l1)\n#&gt; [1] \"list\"\n\n\n\n\n\n\n\nFigure 3.1\n\n\n列表，list(name1=object1,name2=object2,...)\n\nShow the codelist1&lt;-list(title=\"My list\",\n             matr=matrix(c(\"a1\",\"b1\",\"a2\",\"b2\"),nrow=2,ncol=2,byrow=TRUE,\n                           dimnames = list(c(\"X1\",\"X2\"),c(\"Y1\",\"Y2\"))\n                         ),\n             df=data.frame(id=matrix(c(\"Lisa\",\"BOb\",\"John\",\"Jule\"),\n                                     nrow=4,ncol=1,byrow=TRUE\n                                     ),\n                           int=c(3,5,7,9),\n                           TF=c(T,T,T,F)\n                           ),\n             list=list(a=c(1,2,3),b=c(\"A\",\"B\"))\n             )\nlist1\n#&gt; $title\n#&gt; [1] \"My list\"\n#&gt; \n#&gt; $matr\n#&gt;    Y1   Y2  \n#&gt; X1 \"a1\" \"b1\"\n#&gt; X2 \"a2\" \"b2\"\n#&gt; \n#&gt; $df\n#&gt;     id int    TF\n#&gt; 1 Lisa   3  TRUE\n#&gt; 2  BOb   5  TRUE\n#&gt; 3 John   7  TRUE\n#&gt; 4 Jule   9 FALSE\n#&gt; \n#&gt; $list\n#&gt; $list$a\n#&gt; [1] 1 2 3\n#&gt; \n#&gt; $list$b\n#&gt; [1] \"A\" \"B\"\ntypeof(list1)\n#&gt; [1] \"list\"\nattributes(list1)\n#&gt; $names\n#&gt; [1] \"title\" \"matr\"  \"df\"    \"list\"\nclass(list1)\n#&gt; [1] \"list\"\nnames(list1)\n#&gt; [1] \"title\" \"matr\"  \"df\"    \"list\"\n\n\n\n3.4.2 data frame/tibble\n建立在\"list\"之上的两个最重要的 S3 类是data.frame 和 tibble\n\n\n\n\n数据框是列向量具有 names，row.names ，class = \"data.frame\" 属性的命名列表，是一种特殊的列表，每个原子向量的长度必须相同。\n\nShow the codeid&lt;-c(001231,001241,001413,001244) \nage&lt;-c(21,14,52,15) \ndiabetes&lt;-c(\"t1\",\"t2\",\"t1\",\"t1\") \nstatus&lt;-c(\"poor\",\"better\",\"best\",\"poor\") \ndf1&lt;-data.frame(patientID=id,age,diabetes,status,row.names = c(1,2,3,4),\n                stringsAsFactors = FALSE) # 4个列向量组成数据框 \ndf1\n\n\n\n\npatientID\nage\ndiabetes\nstatus\n\n\n\n1231\n21\nt1\npoor\n\n\n1241\n14\nt2\nbetter\n\n\n1413\n52\nt1\nbest\n\n\n1244\n15\nt1\npoor\n\n\n\n\n\nShow the codetypeof(df1)\n#&gt; [1] \"list\"\nattributes(df1)\n#&gt; $names\n#&gt; [1] \"patientID\" \"age\"       \"diabetes\"  \"status\"   \n#&gt; \n#&gt; $class\n#&gt; [1] \"data.frame\"\n#&gt; \n#&gt; $row.names\n#&gt; [1] \"1\" \"2\" \"3\" \"4\"\nclass(df1)\n#&gt; [1] \"data.frame\"\nnames(df1)\n#&gt; [1] \"patientID\" \"age\"       \"diabetes\"  \"status\"\ncolnames(df1)\n#&gt; [1] \"patientID\" \"age\"       \"diabetes\"  \"status\"\nrow.names(df1)\n#&gt; [1] \"1\" \"2\" \"3\" \"4\"\nrownames(df1)\n#&gt; [1] \"1\" \"2\" \"3\" \"4\"\n\nlibrary(tibble)\ntibble(\n  x = c(1, 2, 5), \n  y = c(\"h\", \"m\", \"g\"),\n  z = c(0.08, 0.83, 0.60)\n)\n\n\n\n\nx\ny\nz\n\n\n\n1\nh\n0.08\n\n\n2\nm\n0.83\n\n\n5\ng\n0.60\n\n\n\n\n\nShow the code\ntribble(\n  ~x, ~y, ~z,\n  1, \"h\", 0.08,\n  2, \"m\", 0.83,\n  5, \"g\", 0.60\n)\n\n\n\n\nx\ny\nz\n\n\n\n1\nh\n0.08\n\n\n2\nm\n0.83\n\n\n5\ng\n0.60\n\n\n\n\n\n\ntibblle与data frame共享相同的结构。区别是class属性更多,不会自动进行强制类型转换，不会自动转换非法名称（自动反引号非法名称）， tibbles 只能循环较短的长度为 1 的向量，允许引用在构造过程中创建的变量。\n\nShow the codedf2 &lt;- tibble(x = 1:3, y = letters[1:3])\ntypeof(df2)\n#&gt; [1] \"list\"\nattributes(df2)\n#&gt; $class\n#&gt; [1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n#&gt; \n#&gt; $row.names\n#&gt; [1] 1 2 3\n#&gt; \n#&gt; $names\n#&gt; [1] \"x\" \"y\"\n\n\nnames(tibble(`1` = 1))\n#&gt; [1] \"1\"\n\ntibble(x = 1:4, y = 1)\n\n\n\n\nx\ny\n\n\n\n1\n1\n\n\n2\n1\n\n\n3\n1\n\n\n4\n1\n\n\n\n\n\nShow the codetibble(x = 1:4, y = 1:2)\n#&gt; Error in `tibble()`:\n#&gt; ! Tibble columns must have compatible sizes.\n#&gt; • Size 4: Existing data.\n#&gt; • Size 2: Column `y`.\n#&gt; ℹ Only values of size one are recycled.\n\ntibble(\n  x = 1:3,\n  y = x * 2\n)\n\n\n\n\nx\ny\n\n\n\n1\n2\n\n\n2\n4\n\n\n3\n6\n\n\n\n\n\n\n\n3.4.2.1 行名→列\n\nShow the codedf3 &lt;- data.frame(\n  age = c(35, 27, 18),\n  hair = c(\"blond\", \"brown\", \"black\"),\n  row.names = c(\"Bob\", \"Susan\", \"Sam\")\n)\ndf3 |&gt; rownames_to_column(var = \"name\")\n\n\n\n\nname\nage\nhair\n\n\n\nBob\n35\nblond\n\n\nSusan\n27\nbrown\n\n\nSam\n18\nblack\n\n\n\n\n\nShow the codeas_tibble(df3, rownames = \"name\")\n\n\n\n\nname\nage\nhair\n\n\n\nBob\n35\nblond\n\n\nSusan\n27\nbrown\n\n\nSam\n18\nblack\n\n\n\n\n\nShow the code\n\nis_tibble(df2)\n#&gt; [1] TRUE\nis_tibble(df3)\n#&gt; [1] FALSE\nas_tibble(df3)\n\n\n\n\nage\nhair\n\n\n\n35\nblond\n\n\n27\nbrown\n\n\n18\nblack\n\n\n\n\n\n\n\n3.4.2.2 列表列\n\nShow the codedf &lt;- data.frame(x = 1:3)\ndf$y &lt;- list(1:2, 1:3, 1:4)\ndf\n\n\n\n\nx\ny\n\n\n\n1\n1, 2\n\n\n2\n1, 2, 3\n\n\n3\n1, 2, 3, 4\n\n\n\n\n\nShow the code\ndata.frame(\n  x = 1:3, \n  y = I(list(1:2, 1:3, 1:4))\n)\n\n\n\n\nx\ny\n\n\n\n1\n1, 2\n\n\n2\n1, 2, 3\n\n\n3\n1, 2, 3, 4\n\n\n\n\n\nShow the code\ntibble(\n  x = 1:3, \n  y = list(1:2, 1:3, 1:4)\n)\n\n\n\n\nx\ny\n\n\n\n1\n1, 2\n\n\n2\n1, 2, 3\n\n\n3\n1, 2, 3, 4\n\n\n\n\n\n\n\n3.4.2.3 矩阵和数据框列\n行数必须相等\n\nShow the codedfm &lt;- data.frame(\n  x = 1:3 * 10\n)\ndfm$y &lt;- matrix(1:9, nrow = 3)\ndfm$z &lt;- data.frame(a = 3:1, b = letters[1:3], stringsAsFactors = FALSE)\n\ndfm\n\n\n\n\nx\ny\nz\n\n\n\n10\n1\n3\n\n\n20\n2\n2\n\n\n30\n3\n1",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>数据结构</span>"
    ]
  },
  {
    "objectID": "numeric.html",
    "href": "numeric.html",
    "title": "\n4  数值型数据的操纵\n",
    "section": "",
    "text": "4.1 算术运算符\nShow the code#-----------------\n# Basic operations\n#-----------------\n\n3 + 5   # 8\n#&gt; [1] 8\n8 - 3   # 5\n#&gt; [1] 5\n7 * 5   # 35\n#&gt; [1] 35\n1/2     # 0.5\n#&gt; [1] 0.5\n4 ^ 4   # 256\n#&gt; [1] 256\n4 ** 4  # 256\n#&gt; [1] 256\n5 %% 3  # 2\n#&gt; [1] 2\n5 %/% 3 # 1\n#&gt; [1] 1\nShow the code#---------\n# Matrix\n#---------\n\nw &lt;- matrix(8:13, nrow = 2, ncol = 3)\nz &lt;- matrix(1:6, nrow = 3, ncol = 2)\n\nw %*% z\n#&gt;      [,1] [,2]\n#&gt; [1,]   64  154\n#&gt; [2,]   70  169\n\n# Outer multiplication\nw %o% z # (Output omitted)\n#&gt; , , 1, 1\n#&gt; \n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]    8   10   12\n#&gt; [2,]    9   11   13\n#&gt; \n#&gt; , , 2, 1\n#&gt; \n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]   16   20   24\n#&gt; [2,]   18   22   26\n#&gt; \n#&gt; , , 3, 1\n#&gt; \n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]   24   30   36\n#&gt; [2,]   27   33   39\n#&gt; \n#&gt; , , 1, 2\n#&gt; \n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]   32   40   48\n#&gt; [2,]   36   44   52\n#&gt; \n#&gt; , , 2, 2\n#&gt; \n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]   40   50   60\n#&gt; [2,]   45   55   65\n#&gt; \n#&gt; , , 3, 2\n#&gt; \n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]   48   60   72\n#&gt; [2,]   54   66   78\n\n# Kronecker product\nw %x% z\n#&gt;      [,1] [,2] [,3] [,4] [,5] [,6]\n#&gt; [1,]    8   32   10   40   12   48\n#&gt; [2,]   16   40   20   50   24   60\n#&gt; [3,]   24   48   30   60   36   72\n#&gt; [4,]    9   36   11   44   13   52\n#&gt; [5,]   18   45   22   55   26   65\n#&gt; [6,]   27   54   33   66   39   78",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>数值型数据的操纵</span>"
    ]
  },
  {
    "objectID": "numeric.html#算术运算符",
    "href": "numeric.html#算术运算符",
    "title": "\n4  数值型数据的操纵\n",
    "section": "",
    "text": "Arithmetic operator in R\nDescription\n\n\n\n+\nPlus\n\n\n–\nMinus\n\n\n*\nMultiplication\n\n\n/\nDivision\n\n\n^\nExponential\n\n\n**\nExponential\n\n\n%%\nModulus\n\n\n%/%\nInteger divide\n\n\n%*%\nMatrix multiplication\n\n\n%o%\nOuter product\n\n\n%x%\nKronecker product",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>数值型数据的操纵</span>"
    ]
  },
  {
    "objectID": "numeric.html#parse_number",
    "href": "numeric.html#parse_number",
    "title": "\n4  数值型数据的操纵\n",
    "section": "\n4.2 parse_number()\n",
    "text": "4.2 parse_number()\n\n\nShow the codex &lt;- c(\"1.2\", \"5.6\", \"1e3\")\nparse_double(x)\n#&gt; [1]    1.2    5.6 1000.0\nparse_number(x)\n#&gt; [1]    1.2    5.6 1000.0",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>数值型数据的操纵</span>"
    ]
  },
  {
    "objectID": "numeric.html#count",
    "href": "numeric.html#count",
    "title": "\n4  数值型数据的操纵\n",
    "section": "\n4.3 count()\n",
    "text": "4.3 count()\n\n\nShow the code\n# 计数\n\nmpg |&gt; \n    count(manufacturer,sort = T)\n\n\n\n\nmanufacturer\nn\n\n\n\ndodge\n37\n\n\ntoyota\n34\n\n\nvolkswagen\n27\n\n\nford\n25\n\n\nchevrolet\n19\n\n\naudi\n18\n\n\nhyundai\n14\n\n\nsubaru\n14\n\n\nnissan\n13\n\n\nhonda\n9\n\n\njeep\n8\n\n\npontiac\n5\n\n\nland rover\n4\n\n\nmercury\n4\n\n\nlincoln\n3\n\n\n\n\n\nShow the code\n\nmpg |&gt; \n    group_by(manufacturer) |&gt; \n    summarise(\n        n=n()\n    ) |&gt; \n    arrange(desc(n))\n\n\n\n\nmanufacturer\nn\n\n\n\ndodge\n37\n\n\ntoyota\n34\n\n\nvolkswagen\n27\n\n\nford\n25\n\n\nchevrolet\n19\n\n\naudi\n18\n\n\nhyundai\n14\n\n\nsubaru\n14\n\n\nnissan\n13\n\n\nhonda\n9\n\n\njeep\n8\n\n\npontiac\n5\n\n\nland rover\n4\n\n\nmercury\n4\n\n\nlincoln\n3\n\n\n\n\n\nShow the code\n\nmpg |&gt; \n    group_by(manufacturer) |&gt; \n    summarise(\n        n=n_distinct(class)\n    ) |&gt; \n    arrange(desc(n))\n\n\n\n\nmanufacturer\nn\n\n\n\ntoyota\n4\n\n\nchevrolet\n3\n\n\ndodge\n3\n\n\nford\n3\n\n\nnissan\n3\n\n\nsubaru\n3\n\n\nvolkswagen\n3\n\n\naudi\n2\n\n\nhyundai\n2\n\n\nhonda\n1\n\n\njeep\n1\n\n\nland rover\n1\n\n\nlincoln\n1\n\n\nmercury\n1\n\n\npontiac\n1\n\n\n\n\n\nShow the code\n\n# 加权求和\n\n\nmpg |&gt; \n    count(manufacturer,wt = hwy,sort = T)\n\n\n\n\nmanufacturer\nn\n\n\n\ntoyota\n847\n\n\nvolkswagen\n789\n\n\ndodge\n664\n\n\nford\n484\n\n\naudi\n476\n\n\nchevrolet\n416\n\n\nhyundai\n376\n\n\nsubaru\n358\n\n\nnissan\n320\n\n\nhonda\n293\n\n\njeep\n141\n\n\npontiac\n132\n\n\nmercury\n72\n\n\nland rover\n66\n\n\nlincoln\n51\n\n\n\n\n\nShow the code\nmpg |&gt; \n    group_by(manufacturer) |&gt; \n    summarise(\n        hwy_sum=sum(hwy)\n    ) |&gt; \n    arrange(desc(hwy_sum))\n\n\n\n\nmanufacturer\nhwy_sum\n\n\n\ntoyota\n847\n\n\nvolkswagen\n789\n\n\ndodge\n664\n\n\nford\n484\n\n\naudi\n476\n\n\nchevrolet\n416\n\n\nhyundai\n376\n\n\nsubaru\n358\n\n\nnissan\n320\n\n\nhonda\n293\n\n\njeep\n141\n\n\npontiac\n132\n\n\nmercury\n72\n\n\nland rover\n66\n\n\nlincoln\n51",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>数值型数据的操纵</span>"
    ]
  },
  {
    "objectID": "numeric.html#pmax-pmin",
    "href": "numeric.html#pmax-pmin",
    "title": "\n4  数值型数据的操纵\n",
    "section": "\n4.4 pmax() pmin()\n",
    "text": "4.4 pmax() pmin()\n\n\nShow the codedf &lt;- tribble(\n  ~x, ~y,\n  1,  3,\n  5,  2,\n  7, NA,\n)\n# 行最大值，行最小值\ndf |&gt; \n  mutate(\n    min = pmin(x, y, na.rm = TRUE),\n    max = pmax(x, y, na.rm = TRUE)\n  )\n\n\n\n\nx\ny\nmin\nmax\n\n\n\n1\n3\n1\n3\n\n\n5\n2\n2\n5\n\n\n7\nNA\n7\n7",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>数值型数据的操纵</span>"
    ]
  },
  {
    "objectID": "numeric.html#模运算",
    "href": "numeric.html#模运算",
    "title": "\n4  数值型数据的操纵\n",
    "section": "\n4.5 模运算",
    "text": "4.5 模运算\n\nShow the code# 整除\n1:10 %/% 3\n#&gt;  [1] 0 0 1 1 1 2 2 2 3 3\n\n# 余数\n1:10 %% 3\n#&gt;  [1] 1 2 0 1 2 0 1 2 0 1",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>数值型数据的操纵</span>"
    ]
  },
  {
    "objectID": "numeric.html#四舍五入",
    "href": "numeric.html#四舍五入",
    "title": "\n4  数值型数据的操纵\n",
    "section": "\n4.6 四舍五入",
    "text": "4.6 四舍五入\n\nShow the codex &lt;- 123.456\nround(x, 2)  # two digits\n#&gt; [1] 123.46\n\nround(x, 1)  # one digit\n#&gt; [1] 123.5\n\nround(x, -1) # round to nearest ten\n#&gt; [1] 120\n\nround(x, -2) # round to nearest hundred\n#&gt; [1] 100\n\n# Round to nearest multiple of 4\nround(x / 4) * 4\n#&gt; [1] 124\n\n\n\nShow the code# 一半到舍入最近的偶数\nround(c(1.5, 2.5,3.5,4.5))\n#&gt; [1] 2 2 4 4\n\n\n\nShow the codefloor(x)\n#&gt; [1] 123\nceiling(x)\n#&gt; [1] 124\n\n# Round up to nearest two digits\nceiling(x / 0.01) * 0.01\n#&gt; [1] 123.46",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>数值型数据的操纵</span>"
    ]
  },
  {
    "objectID": "numeric.html#cut",
    "href": "numeric.html#cut",
    "title": "\n4  数值型数据的操纵\n",
    "section": "\n4.7 cut()\n",
    "text": "4.7 cut()\n\n\nShow the codex &lt;- c(1, 2, 5, 10, 15, 20)\n\n\ncut( x = x, breaks =3)                \n#&gt; [1] (0.981,7.33] (0.981,7.33] (0.981,7.33] (7.33,13.7]  (13.7,20]   \n#&gt; [6] (13.7,20]   \n#&gt; Levels: (0.981,7.33] (7.33,13.7] (13.7,20]\n\ncut(x, breaks = c(0, 5, 10, 15, 20))\n#&gt; [1] (0,5]   (0,5]   (0,5]   (5,10]  (10,15] (15,20]\n#&gt; Levels: (0,5] (5,10] (10,15] (15,20]\ncut(x, \n  breaks = c(0, 5, 10, 15, 20), \n  labels = c(\"sm\", \"md\", \"lg\", \"xl\")  # 注意要少1个\n)\n#&gt; [1] sm sm sm md lg xl\n#&gt; Levels: sm md lg xl\n\n\ncut( x = x, breaks = c(0, 5, 10, 15, 20),include.lowest = TRUE) \n#&gt; [1] [0,5]   [0,5]   [0,5]   (5,10]  (10,15] (15,20]\n#&gt; Levels: [0,5] (5,10] (10,15] (15,20]",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>数值型数据的操纵</span>"
    ]
  },
  {
    "objectID": "numeric.html#累计",
    "href": "numeric.html#累计",
    "title": "\n4  数值型数据的操纵\n",
    "section": "\n4.8 累计",
    "text": "4.8 累计\n\nShow the codex &lt;- 1:10\ncumsum(x)\n#&gt;  [1]  1  3  6 10 15 21 28 36 45 55\ncumprod(x)\n#&gt;  [1]       1       2       6      24     120     720    5040   40320  362880\n#&gt; [10] 3628800\ncummin(x)\n#&gt;  [1] 1 1 1 1 1 1 1 1 1 1\ncummax(x)\n#&gt;  [1]  1  2  3  4  5  6  7  8  9 10\ncummean(x)\n#&gt;  [1] 1.0 1.5 2.0 2.5 3.0 3.5 4.0 4.5 5.0 5.5",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>数值型数据的操纵</span>"
    ]
  },
  {
    "objectID": "numeric.html#连续标识符",
    "href": "numeric.html#连续标识符",
    "title": "\n4  数值型数据的操纵\n",
    "section": "\n4.9 连续标识符",
    "text": "4.9 连续标识符\n\nShow the code# 变量变化时加1\nconsecutive_id(c(TRUE, TRUE, FALSE, FALSE, TRUE, FALSE, NA, NA))\n#&gt; [1] 1 1 2 2 3 4 5 5\nconsecutive_id(c(1, 1, 1, 2, 1, 1, 2, 2))\n#&gt; [1] 1 1 1 2 3 3 4 4\n\n\n\nShow the codedf &lt;- data.frame(x = c(0, 0, 1, 0), y = c(2, 2, 2, 2))\ndf %&gt;% group_by(x, y) %&gt;% summarise(n = n())\n\n\n\n\nx\ny\nn\n\n\n\n0\n2\n3\n\n\n1\n2\n1\n\n\n\n\n\nShow the code\ndf %&gt;% group_by(id = consecutive_id(x, y), x, y) %&gt;% summarise(n = n())\n\n\n\n\nid\nx\ny\nn\n\n\n\n1\n0\n2\n2\n\n\n2\n1\n2\n1\n\n\n3\n0\n2\n1",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>数值型数据的操纵</span>"
    ]
  },
  {
    "objectID": "numeric.html#偏移量-offsets",
    "href": "numeric.html#偏移量-offsets",
    "title": "\n4  数值型数据的操纵\n",
    "section": "\n4.10 偏移量 Offsets",
    "text": "4.10 偏移量 Offsets\n\nShow the codex &lt;- c(2, 5, 11, 11, 19, 35)\ndplyr::lag(x,n=1)\n#&gt; [1] NA  2  5 11 11 19\ndplyr::lead(x,n=2)\n#&gt; [1] 11 11 19 35 NA NA",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>数值型数据的操纵</span>"
    ]
  },
  {
    "objectID": "numeric.html#位置",
    "href": "numeric.html#位置",
    "title": "\n4  数值型数据的操纵\n",
    "section": "\n4.11 位置",
    "text": "4.11 位置\n\nShow the code\nmpg |&gt; \n    group_by(manufacturer,model) |&gt; \n    mutate(\n        first_hwy = first(hwy,na_rm = T),\n        \n        n_hwy = nth(hwy,n=5,na_rm = T),\n        \n        last_hwy = last(hwy,na_rm = T)\n    )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nfirst_hwy\nn_hwy\nlast_hwy\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n29\n26\n27\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n29\n26\n27\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n29\n26\n27\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n29\n26\n27\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n29\n26\n27\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n29\n26\n27\n\n\naudi\na4\n3.1\n2008\n6\nauto(av)\nf\n18\n27\np\ncompact\n29\n26\n27\n\n\naudi\na4 quattro\n1.8\n1999\n4\nmanual(m5)\n4\n18\n26\np\ncompact\n26\n25\n25\n\n\naudi\na4 quattro\n1.8\n1999\n4\nauto(l5)\n4\n16\n25\np\ncompact\n26\n25\n25\n\n\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact\n26\n25\n25\n\n\naudi\na4 quattro\n2.0\n2008\n4\nauto(s6)\n4\n19\n27\np\ncompact\n26\n25\n25\n\n\naudi\na4 quattro\n2.8\n1999\n6\nauto(l5)\n4\n15\n25\np\ncompact\n26\n25\n25\n\n\naudi\na4 quattro\n2.8\n1999\n6\nmanual(m5)\n4\n17\n25\np\ncompact\n26\n25\n25\n\n\naudi\na4 quattro\n3.1\n2008\n6\nauto(s6)\n4\n17\n25\np\ncompact\n26\n25\n25\n\n\naudi\na4 quattro\n3.1\n2008\n6\nmanual(m6)\n4\n15\n25\np\ncompact\n26\n25\n25\n\n\naudi\na6 quattro\n2.8\n1999\n6\nauto(l5)\n4\n15\n24\np\nmidsize\n24\nNA\n23\n\n\naudi\na6 quattro\n3.1\n2008\n6\nauto(s6)\n4\n17\n25\np\nmidsize\n24\nNA\n23\n\n\naudi\na6 quattro\n4.2\n2008\n8\nauto(s6)\n4\n16\n23\np\nmidsize\n24\nNA\n23\n\n\nchevrolet\nc1500 suburban 2wd\n5.3\n2008\n8\nauto(l4)\nr\n14\n20\nr\nsuv\n20\n17\n17\n\n\nchevrolet\nc1500 suburban 2wd\n5.3\n2008\n8\nauto(l4)\nr\n11\n15\ne\nsuv\n20\n17\n17\n\n\nchevrolet\nc1500 suburban 2wd\n5.3\n2008\n8\nauto(l4)\nr\n14\n20\nr\nsuv\n20\n17\n17\n\n\nchevrolet\nc1500 suburban 2wd\n5.7\n1999\n8\nauto(l4)\nr\n13\n17\nr\nsuv\n20\n17\n17\n\n\nchevrolet\nc1500 suburban 2wd\n6.0\n2008\n8\nauto(l4)\nr\n12\n17\nr\nsuv\n20\n17\n17\n\n\nchevrolet\ncorvette\n5.7\n1999\n8\nmanual(m6)\nr\n16\n26\np\n2seater\n26\n24\n24\n\n\nchevrolet\ncorvette\n5.7\n1999\n8\nauto(l4)\nr\n15\n23\np\n2seater\n26\n24\n24\n\n\nchevrolet\ncorvette\n6.2\n2008\n8\nmanual(m6)\nr\n16\n26\np\n2seater\n26\n24\n24\n\n\nchevrolet\ncorvette\n6.2\n2008\n8\nauto(s6)\nr\n15\n25\np\n2seater\n26\n24\n24\n\n\nchevrolet\ncorvette\n7.0\n2008\n8\nmanual(m6)\nr\n15\n24\np\n2seater\n26\n24\n24\n\n\nchevrolet\nk1500 tahoe 4wd\n5.3\n2008\n8\nauto(l4)\n4\n14\n19\nr\nsuv\n19\nNA\n17\n\n\nchevrolet\nk1500 tahoe 4wd\n5.3\n2008\n8\nauto(l4)\n4\n11\n14\ne\nsuv\n19\nNA\n17\n\n\nchevrolet\nk1500 tahoe 4wd\n5.7\n1999\n8\nauto(l4)\n4\n11\n15\nr\nsuv\n19\nNA\n17\n\n\nchevrolet\nk1500 tahoe 4wd\n6.5\n1999\n8\nauto(l4)\n4\n14\n17\nd\nsuv\n19\nNA\n17\n\n\nchevrolet\nmalibu\n2.4\n1999\n4\nauto(l4)\nf\n19\n27\nr\nmidsize\n27\n26\n26\n\n\nchevrolet\nmalibu\n2.4\n2008\n4\nauto(l4)\nf\n22\n30\nr\nmidsize\n27\n26\n26\n\n\nchevrolet\nmalibu\n3.1\n1999\n6\nauto(l4)\nf\n18\n26\nr\nmidsize\n27\n26\n26\n\n\nchevrolet\nmalibu\n3.5\n2008\n6\nauto(l4)\nf\n18\n29\nr\nmidsize\n27\n26\n26\n\n\nchevrolet\nmalibu\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\nr\nmidsize\n27\n26\n26\n\n\ndodge\ncaravan 2wd\n2.4\n1999\n4\nauto(l3)\nf\n18\n24\nr\nminivan\n24\n24\n23\n\n\ndodge\ncaravan 2wd\n3.0\n1999\n6\nauto(l4)\nf\n17\n24\nr\nminivan\n24\n24\n23\n\n\ndodge\ncaravan 2wd\n3.3\n1999\n6\nauto(l4)\nf\n16\n22\nr\nminivan\n24\n24\n23\n\n\ndodge\ncaravan 2wd\n3.3\n1999\n6\nauto(l4)\nf\n16\n22\nr\nminivan\n24\n24\n23\n\n\ndodge\ncaravan 2wd\n3.3\n2008\n6\nauto(l4)\nf\n17\n24\nr\nminivan\n24\n24\n23\n\n\ndodge\ncaravan 2wd\n3.3\n2008\n6\nauto(l4)\nf\n17\n24\nr\nminivan\n24\n24\n23\n\n\ndodge\ncaravan 2wd\n3.3\n2008\n6\nauto(l4)\nf\n11\n17\ne\nminivan\n24\n24\n23\n\n\ndodge\ncaravan 2wd\n3.8\n1999\n6\nauto(l4)\nf\n15\n22\nr\nminivan\n24\n24\n23\n\n\ndodge\ncaravan 2wd\n3.8\n1999\n6\nauto(l4)\nf\n15\n21\nr\nminivan\n24\n24\n23\n\n\ndodge\ncaravan 2wd\n3.8\n2008\n6\nauto(l6)\nf\n16\n23\nr\nminivan\n24\n24\n23\n\n\ndodge\ncaravan 2wd\n4.0\n2008\n6\nauto(l6)\nf\n16\n23\nr\nminivan\n24\n24\n23\n\n\ndodge\ndakota pickup 4wd\n3.7\n2008\n6\nmanual(m6)\n4\n15\n19\nr\npickup\n19\n19\n15\n\n\ndodge\ndakota pickup 4wd\n3.7\n2008\n6\nauto(l4)\n4\n14\n18\nr\npickup\n19\n19\n15\n\n\ndodge\ndakota pickup 4wd\n3.9\n1999\n6\nauto(l4)\n4\n13\n17\nr\npickup\n19\n19\n15\n\n\ndodge\ndakota pickup 4wd\n3.9\n1999\n6\nmanual(m5)\n4\n14\n17\nr\npickup\n19\n19\n15\n\n\ndodge\ndakota pickup 4wd\n4.7\n2008\n8\nauto(l5)\n4\n14\n19\nr\npickup\n19\n19\n15\n\n\ndodge\ndakota pickup 4wd\n4.7\n2008\n8\nauto(l5)\n4\n14\n19\nr\npickup\n19\n19\n15\n\n\ndodge\ndakota pickup 4wd\n4.7\n2008\n8\nauto(l5)\n4\n9\n12\ne\npickup\n19\n19\n15\n\n\ndodge\ndakota pickup 4wd\n5.2\n1999\n8\nmanual(m5)\n4\n11\n17\nr\npickup\n19\n19\n15\n\n\ndodge\ndakota pickup 4wd\n5.2\n1999\n8\nauto(l4)\n4\n11\n15\nr\npickup\n19\n19\n15\n\n\ndodge\ndurango 4wd\n3.9\n1999\n6\nauto(l4)\n4\n13\n17\nr\nsuv\n17\n16\n15\n\n\ndodge\ndurango 4wd\n4.7\n2008\n8\nauto(l5)\n4\n13\n17\nr\nsuv\n17\n16\n15\n\n\ndodge\ndurango 4wd\n4.7\n2008\n8\nauto(l5)\n4\n9\n12\ne\nsuv\n17\n16\n15\n\n\ndodge\ndurango 4wd\n4.7\n2008\n8\nauto(l5)\n4\n13\n17\nr\nsuv\n17\n16\n15\n\n\ndodge\ndurango 4wd\n5.2\n1999\n8\nauto(l4)\n4\n11\n16\nr\nsuv\n17\n16\n15\n\n\ndodge\ndurango 4wd\n5.7\n2008\n8\nauto(l5)\n4\n13\n18\nr\nsuv\n17\n16\n15\n\n\ndodge\ndurango 4wd\n5.9\n1999\n8\nauto(l4)\n4\n11\n15\nr\nsuv\n17\n16\n15\n\n\ndodge\nram 1500 pickup 4wd\n4.7\n2008\n8\nmanual(m6)\n4\n12\n16\nr\npickup\n16\n16\n15\n\n\ndodge\nram 1500 pickup 4wd\n4.7\n2008\n8\nauto(l5)\n4\n9\n12\ne\npickup\n16\n16\n15\n\n\ndodge\nram 1500 pickup 4wd\n4.7\n2008\n8\nauto(l5)\n4\n13\n17\nr\npickup\n16\n16\n15\n\n\ndodge\nram 1500 pickup 4wd\n4.7\n2008\n8\nauto(l5)\n4\n13\n17\nr\npickup\n16\n16\n15\n\n\ndodge\nram 1500 pickup 4wd\n4.7\n2008\n8\nmanual(m6)\n4\n12\n16\nr\npickup\n16\n16\n15\n\n\ndodge\nram 1500 pickup 4wd\n4.7\n2008\n8\nmanual(m6)\n4\n9\n12\ne\npickup\n16\n16\n15\n\n\ndodge\nram 1500 pickup 4wd\n5.2\n1999\n8\nauto(l4)\n4\n11\n15\nr\npickup\n16\n16\n15\n\n\ndodge\nram 1500 pickup 4wd\n5.2\n1999\n8\nmanual(m5)\n4\n11\n16\nr\npickup\n16\n16\n15\n\n\ndodge\nram 1500 pickup 4wd\n5.7\n2008\n8\nauto(l5)\n4\n13\n17\nr\npickup\n16\n16\n15\n\n\ndodge\nram 1500 pickup 4wd\n5.9\n1999\n8\nauto(l4)\n4\n11\n15\nr\npickup\n16\n16\n15\n\n\nford\nexpedition 2wd\n4.6\n1999\n8\nauto(l4)\nr\n11\n17\nr\nsuv\n17\nNA\n18\n\n\nford\nexpedition 2wd\n5.4\n1999\n8\nauto(l4)\nr\n11\n17\nr\nsuv\n17\nNA\n18\n\n\nford\nexpedition 2wd\n5.4\n2008\n8\nauto(l6)\nr\n12\n18\nr\nsuv\n17\nNA\n18\n\n\nford\nexplorer 4wd\n4.0\n1999\n6\nauto(l5)\n4\n14\n17\nr\nsuv\n17\n19\n17\n\n\nford\nexplorer 4wd\n4.0\n1999\n6\nmanual(m5)\n4\n15\n19\nr\nsuv\n17\n19\n17\n\n\nford\nexplorer 4wd\n4.0\n1999\n6\nauto(l5)\n4\n14\n17\nr\nsuv\n17\n19\n17\n\n\nford\nexplorer 4wd\n4.0\n2008\n6\nauto(l5)\n4\n13\n19\nr\nsuv\n17\n19\n17\n\n\nford\nexplorer 4wd\n4.6\n2008\n8\nauto(l6)\n4\n13\n19\nr\nsuv\n17\n19\n17\n\n\nford\nexplorer 4wd\n5.0\n1999\n8\nauto(l4)\n4\n13\n17\nr\nsuv\n17\n19\n17\n\n\nford\nf150 pickup 4wd\n4.2\n1999\n6\nauto(l4)\n4\n14\n17\nr\npickup\n17\n17\n17\n\n\nford\nf150 pickup 4wd\n4.2\n1999\n6\nmanual(m5)\n4\n14\n17\nr\npickup\n17\n17\n17\n\n\nford\nf150 pickup 4wd\n4.6\n1999\n8\nmanual(m5)\n4\n13\n16\nr\npickup\n17\n17\n17\n\n\nford\nf150 pickup 4wd\n4.6\n1999\n8\nauto(l4)\n4\n13\n16\nr\npickup\n17\n17\n17\n\n\nford\nf150 pickup 4wd\n4.6\n2008\n8\nauto(l4)\n4\n13\n17\nr\npickup\n17\n17\n17\n\n\nford\nf150 pickup 4wd\n5.4\n1999\n8\nauto(l4)\n4\n11\n15\nr\npickup\n17\n17\n17\n\n\nford\nf150 pickup 4wd\n5.4\n2008\n8\nauto(l4)\n4\n13\n17\nr\npickup\n17\n17\n17\n\n\nford\nmustang\n3.8\n1999\n6\nmanual(m5)\nr\n18\n26\nr\nsubcompact\n26\n21\n20\n\n\nford\nmustang\n3.8\n1999\n6\nauto(l4)\nr\n18\n25\nr\nsubcompact\n26\n21\n20\n\n\nford\nmustang\n4.0\n2008\n6\nmanual(m5)\nr\n17\n26\nr\nsubcompact\n26\n21\n20\n\n\nford\nmustang\n4.0\n2008\n6\nauto(l5)\nr\n16\n24\nr\nsubcompact\n26\n21\n20\n\n\nford\nmustang\n4.6\n1999\n8\nauto(l4)\nr\n15\n21\nr\nsubcompact\n26\n21\n20\n\n\nford\nmustang\n4.6\n1999\n8\nmanual(m5)\nr\n15\n22\nr\nsubcompact\n26\n21\n20\n\n\nford\nmustang\n4.6\n2008\n8\nmanual(m5)\nr\n15\n23\nr\nsubcompact\n26\n21\n20\n\n\nford\nmustang\n4.6\n2008\n8\nauto(l5)\nr\n15\n22\nr\nsubcompact\n26\n21\n20\n\n\nford\nmustang\n5.4\n2008\n8\nmanual(m6)\nr\n14\n20\np\nsubcompact\n26\n21\n20\n\n\nhonda\ncivic\n1.6\n1999\n4\nmanual(m5)\nf\n28\n33\nr\nsubcompact\n33\n32\n29\n\n\nhonda\ncivic\n1.6\n1999\n4\nauto(l4)\nf\n24\n32\nr\nsubcompact\n33\n32\n29\n\n\nhonda\ncivic\n1.6\n1999\n4\nmanual(m5)\nf\n25\n32\nr\nsubcompact\n33\n32\n29\n\n\nhonda\ncivic\n1.6\n1999\n4\nmanual(m5)\nf\n23\n29\np\nsubcompact\n33\n32\n29\n\n\nhonda\ncivic\n1.6\n1999\n4\nauto(l4)\nf\n24\n32\nr\nsubcompact\n33\n32\n29\n\n\nhonda\ncivic\n1.8\n2008\n4\nmanual(m5)\nf\n26\n34\nr\nsubcompact\n33\n32\n29\n\n\nhonda\ncivic\n1.8\n2008\n4\nauto(l5)\nf\n25\n36\nr\nsubcompact\n33\n32\n29\n\n\nhonda\ncivic\n1.8\n2008\n4\nauto(l5)\nf\n24\n36\nc\nsubcompact\n33\n32\n29\n\n\nhonda\ncivic\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nsubcompact\n33\n32\n29\n\n\nhyundai\nsonata\n2.4\n1999\n4\nauto(l4)\nf\n18\n26\nr\nmidsize\n26\n26\n28\n\n\nhyundai\nsonata\n2.4\n1999\n4\nmanual(m5)\nf\n18\n27\nr\nmidsize\n26\n26\n28\n\n\nhyundai\nsonata\n2.4\n2008\n4\nauto(l4)\nf\n21\n30\nr\nmidsize\n26\n26\n28\n\n\nhyundai\nsonata\n2.4\n2008\n4\nmanual(m5)\nf\n21\n31\nr\nmidsize\n26\n26\n28\n\n\nhyundai\nsonata\n2.5\n1999\n6\nauto(l4)\nf\n18\n26\nr\nmidsize\n26\n26\n28\n\n\nhyundai\nsonata\n2.5\n1999\n6\nmanual(m5)\nf\n18\n26\nr\nmidsize\n26\n26\n28\n\n\nhyundai\nsonata\n3.3\n2008\n6\nauto(l5)\nf\n19\n28\nr\nmidsize\n26\n26\n28\n\n\nhyundai\ntiburon\n2.0\n1999\n4\nauto(l4)\nf\n19\n26\nr\nsubcompact\n26\n24\n24\n\n\nhyundai\ntiburon\n2.0\n1999\n4\nmanual(m5)\nf\n19\n29\nr\nsubcompact\n26\n24\n24\n\n\nhyundai\ntiburon\n2.0\n2008\n4\nmanual(m5)\nf\n20\n28\nr\nsubcompact\n26\n24\n24\n\n\nhyundai\ntiburon\n2.0\n2008\n4\nauto(l4)\nf\n20\n27\nr\nsubcompact\n26\n24\n24\n\n\nhyundai\ntiburon\n2.7\n2008\n6\nauto(l4)\nf\n17\n24\nr\nsubcompact\n26\n24\n24\n\n\nhyundai\ntiburon\n2.7\n2008\n6\nmanual(m6)\nf\n16\n24\nr\nsubcompact\n26\n24\n24\n\n\nhyundai\ntiburon\n2.7\n2008\n6\nmanual(m5)\nf\n17\n24\nr\nsubcompact\n26\n24\n24\n\n\njeep\ngrand cherokee 4wd\n3.0\n2008\n6\nauto(l5)\n4\n17\n22\nd\nsuv\n22\n12\n14\n\n\njeep\ngrand cherokee 4wd\n3.7\n2008\n6\nauto(l5)\n4\n15\n19\nr\nsuv\n22\n12\n14\n\n\njeep\ngrand cherokee 4wd\n4.0\n1999\n6\nauto(l4)\n4\n15\n20\nr\nsuv\n22\n12\n14\n\n\njeep\ngrand cherokee 4wd\n4.7\n1999\n8\nauto(l4)\n4\n14\n17\nr\nsuv\n22\n12\n14\n\n\njeep\ngrand cherokee 4wd\n4.7\n2008\n8\nauto(l5)\n4\n9\n12\ne\nsuv\n22\n12\n14\n\n\njeep\ngrand cherokee 4wd\n4.7\n2008\n8\nauto(l5)\n4\n14\n19\nr\nsuv\n22\n12\n14\n\n\njeep\ngrand cherokee 4wd\n5.7\n2008\n8\nauto(l5)\n4\n13\n18\nr\nsuv\n22\n12\n14\n\n\njeep\ngrand cherokee 4wd\n6.1\n2008\n8\nauto(l5)\n4\n11\n14\np\nsuv\n22\n12\n14\n\n\nland rover\nrange rover\n4.0\n1999\n8\nauto(l4)\n4\n11\n15\np\nsuv\n15\nNA\n15\n\n\nland rover\nrange rover\n4.2\n2008\n8\nauto(s6)\n4\n12\n18\nr\nsuv\n15\nNA\n15\n\n\nland rover\nrange rover\n4.4\n2008\n8\nauto(s6)\n4\n12\n18\nr\nsuv\n15\nNA\n15\n\n\nland rover\nrange rover\n4.6\n1999\n8\nauto(l4)\n4\n11\n15\np\nsuv\n15\nNA\n15\n\n\nlincoln\nnavigator 2wd\n5.4\n1999\n8\nauto(l4)\nr\n11\n17\nr\nsuv\n17\nNA\n18\n\n\nlincoln\nnavigator 2wd\n5.4\n1999\n8\nauto(l4)\nr\n11\n16\np\nsuv\n17\nNA\n18\n\n\nlincoln\nnavigator 2wd\n5.4\n2008\n8\nauto(l6)\nr\n12\n18\nr\nsuv\n17\nNA\n18\n\n\nmercury\nmountaineer 4wd\n4.0\n1999\n6\nauto(l5)\n4\n14\n17\nr\nsuv\n17\nNA\n17\n\n\nmercury\nmountaineer 4wd\n4.0\n2008\n6\nauto(l5)\n4\n13\n19\nr\nsuv\n17\nNA\n17\n\n\nmercury\nmountaineer 4wd\n4.6\n2008\n8\nauto(l6)\n4\n13\n19\nr\nsuv\n17\nNA\n17\n\n\nmercury\nmountaineer 4wd\n5.0\n1999\n8\nauto(l4)\n4\n13\n17\nr\nsuv\n17\nNA\n17\n\n\nnissan\naltima\n2.4\n1999\n4\nmanual(m5)\nf\n21\n29\nr\ncompact\n29\n27\n26\n\n\nnissan\naltima\n2.4\n1999\n4\nauto(l4)\nf\n19\n27\nr\ncompact\n29\n27\n26\n\n\nnissan\naltima\n2.5\n2008\n4\nauto(av)\nf\n23\n31\nr\nmidsize\n29\n27\n26\n\n\nnissan\naltima\n2.5\n2008\n4\nmanual(m6)\nf\n23\n32\nr\nmidsize\n29\n27\n26\n\n\nnissan\naltima\n3.5\n2008\n6\nmanual(m6)\nf\n19\n27\np\nmidsize\n29\n27\n26\n\n\nnissan\naltima\n3.5\n2008\n6\nauto(av)\nf\n19\n26\np\nmidsize\n29\n27\n26\n\n\nnissan\nmaxima\n3.0\n1999\n6\nauto(l4)\nf\n18\n26\nr\nmidsize\n26\nNA\n25\n\n\nnissan\nmaxima\n3.0\n1999\n6\nmanual(m5)\nf\n19\n25\nr\nmidsize\n26\nNA\n25\n\n\nnissan\nmaxima\n3.5\n2008\n6\nauto(av)\nf\n19\n25\np\nmidsize\n26\nNA\n25\n\n\nnissan\npathfinder 4wd\n3.3\n1999\n6\nauto(l4)\n4\n14\n17\nr\nsuv\n17\nNA\n18\n\n\nnissan\npathfinder 4wd\n3.3\n1999\n6\nmanual(m5)\n4\n15\n17\nr\nsuv\n17\nNA\n18\n\n\nnissan\npathfinder 4wd\n4.0\n2008\n6\nauto(l5)\n4\n14\n20\np\nsuv\n17\nNA\n18\n\n\nnissan\npathfinder 4wd\n5.6\n2008\n8\nauto(s5)\n4\n12\n18\np\nsuv\n17\nNA\n18\n\n\npontiac\ngrand prix\n3.1\n1999\n6\nauto(l4)\nf\n18\n26\nr\nmidsize\n26\n25\n25\n\n\npontiac\ngrand prix\n3.8\n1999\n6\nauto(l4)\nf\n16\n26\np\nmidsize\n26\n25\n25\n\n\npontiac\ngrand prix\n3.8\n1999\n6\nauto(l4)\nf\n17\n27\nr\nmidsize\n26\n25\n25\n\n\npontiac\ngrand prix\n3.8\n2008\n6\nauto(l4)\nf\n18\n28\nr\nmidsize\n26\n25\n25\n\n\npontiac\ngrand prix\n5.3\n2008\n8\nauto(s4)\nf\n16\n25\np\nmidsize\n26\n25\n25\n\n\nsubaru\nforester awd\n2.5\n1999\n4\nmanual(m5)\n4\n18\n25\nr\nsuv\n25\n26\n23\n\n\nsubaru\nforester awd\n2.5\n1999\n4\nauto(l4)\n4\n18\n24\nr\nsuv\n25\n26\n23\n\n\nsubaru\nforester awd\n2.5\n2008\n4\nmanual(m5)\n4\n20\n27\nr\nsuv\n25\n26\n23\n\n\nsubaru\nforester awd\n2.5\n2008\n4\nmanual(m5)\n4\n19\n25\np\nsuv\n25\n26\n23\n\n\nsubaru\nforester awd\n2.5\n2008\n4\nauto(l4)\n4\n20\n26\nr\nsuv\n25\n26\n23\n\n\nsubaru\nforester awd\n2.5\n2008\n4\nauto(l4)\n4\n18\n23\np\nsuv\n25\n26\n23\n\n\nsubaru\nimpreza awd\n2.2\n1999\n4\nauto(l4)\n4\n21\n26\nr\nsubcompact\n26\n25\n27\n\n\nsubaru\nimpreza awd\n2.2\n1999\n4\nmanual(m5)\n4\n19\n26\nr\nsubcompact\n26\n25\n27\n\n\nsubaru\nimpreza awd\n2.5\n1999\n4\nmanual(m5)\n4\n19\n26\nr\nsubcompact\n26\n25\n27\n\n\nsubaru\nimpreza awd\n2.5\n1999\n4\nauto(l4)\n4\n19\n26\nr\nsubcompact\n26\n25\n27\n\n\nsubaru\nimpreza awd\n2.5\n2008\n4\nauto(s4)\n4\n20\n25\np\ncompact\n26\n25\n27\n\n\nsubaru\nimpreza awd\n2.5\n2008\n4\nauto(s4)\n4\n20\n27\nr\ncompact\n26\n25\n27\n\n\nsubaru\nimpreza awd\n2.5\n2008\n4\nmanual(m5)\n4\n19\n25\np\ncompact\n26\n25\n27\n\n\nsubaru\nimpreza awd\n2.5\n2008\n4\nmanual(m5)\n4\n20\n27\nr\ncompact\n26\n25\n27\n\n\ntoyota\n4runner 4wd\n2.7\n1999\n4\nmanual(m5)\n4\n15\n20\nr\nsuv\n20\n20\n17\n\n\ntoyota\n4runner 4wd\n2.7\n1999\n4\nauto(l4)\n4\n16\n20\nr\nsuv\n20\n20\n17\n\n\ntoyota\n4runner 4wd\n3.4\n1999\n6\nauto(l4)\n4\n15\n19\nr\nsuv\n20\n20\n17\n\n\ntoyota\n4runner 4wd\n3.4\n1999\n6\nmanual(m5)\n4\n15\n17\nr\nsuv\n20\n20\n17\n\n\ntoyota\n4runner 4wd\n4.0\n2008\n6\nauto(l5)\n4\n16\n20\nr\nsuv\n20\n20\n17\n\n\ntoyota\n4runner 4wd\n4.7\n2008\n8\nauto(l5)\n4\n14\n17\nr\nsuv\n20\n20\n17\n\n\ntoyota\ncamry\n2.2\n1999\n4\nmanual(m5)\nf\n21\n29\nr\nmidsize\n29\n26\n28\n\n\ntoyota\ncamry\n2.2\n1999\n4\nauto(l4)\nf\n21\n27\nr\nmidsize\n29\n26\n28\n\n\ntoyota\ncamry\n2.4\n2008\n4\nmanual(m5)\nf\n21\n31\nr\nmidsize\n29\n26\n28\n\n\ntoyota\ncamry\n2.4\n2008\n4\nauto(l5)\nf\n21\n31\nr\nmidsize\n29\n26\n28\n\n\ntoyota\ncamry\n3.0\n1999\n6\nauto(l4)\nf\n18\n26\nr\nmidsize\n29\n26\n28\n\n\ntoyota\ncamry\n3.0\n1999\n6\nmanual(m5)\nf\n18\n26\nr\nmidsize\n29\n26\n28\n\n\ntoyota\ncamry\n3.5\n2008\n6\nauto(s6)\nf\n19\n28\nr\nmidsize\n29\n26\n28\n\n\ntoyota\ncamry solara\n2.2\n1999\n4\nauto(l4)\nf\n21\n27\nr\ncompact\n27\n26\n27\n\n\ntoyota\ncamry solara\n2.2\n1999\n4\nmanual(m5)\nf\n21\n29\nr\ncompact\n27\n26\n27\n\n\ntoyota\ncamry solara\n2.4\n2008\n4\nmanual(m5)\nf\n21\n31\nr\ncompact\n27\n26\n27\n\n\ntoyota\ncamry solara\n2.4\n2008\n4\nauto(s5)\nf\n22\n31\nr\ncompact\n27\n26\n27\n\n\ntoyota\ncamry solara\n3.0\n1999\n6\nauto(l4)\nf\n18\n26\nr\ncompact\n27\n26\n27\n\n\ntoyota\ncamry solara\n3.0\n1999\n6\nmanual(m5)\nf\n18\n26\nr\ncompact\n27\n26\n27\n\n\ntoyota\ncamry solara\n3.3\n2008\n6\nauto(s5)\nf\n18\n27\nr\ncompact\n27\n26\n27\n\n\ntoyota\ncorolla\n1.8\n1999\n4\nauto(l3)\nf\n24\n30\nr\ncompact\n30\n35\n35\n\n\ntoyota\ncorolla\n1.8\n1999\n4\nauto(l4)\nf\n24\n33\nr\ncompact\n30\n35\n35\n\n\ntoyota\ncorolla\n1.8\n1999\n4\nmanual(m5)\nf\n26\n35\nr\ncompact\n30\n35\n35\n\n\ntoyota\ncorolla\n1.8\n2008\n4\nmanual(m5)\nf\n28\n37\nr\ncompact\n30\n35\n35\n\n\ntoyota\ncorolla\n1.8\n2008\n4\nauto(l4)\nf\n26\n35\nr\ncompact\n30\n35\n35\n\n\ntoyota\nland cruiser wagon 4wd\n4.7\n1999\n8\nauto(l4)\n4\n11\n15\nr\nsuv\n15\nNA\n18\n\n\ntoyota\nland cruiser wagon 4wd\n5.7\n2008\n8\nauto(s6)\n4\n13\n18\nr\nsuv\n15\nNA\n18\n\n\ntoyota\ntoyota tacoma 4wd\n2.7\n1999\n4\nmanual(m5)\n4\n15\n20\nr\npickup\n20\n19\n20\n\n\ntoyota\ntoyota tacoma 4wd\n2.7\n1999\n4\nauto(l4)\n4\n16\n20\nr\npickup\n20\n19\n20\n\n\ntoyota\ntoyota tacoma 4wd\n2.7\n2008\n4\nmanual(m5)\n4\n17\n22\nr\npickup\n20\n19\n20\n\n\ntoyota\ntoyota tacoma 4wd\n3.4\n1999\n6\nmanual(m5)\n4\n15\n17\nr\npickup\n20\n19\n20\n\n\ntoyota\ntoyota tacoma 4wd\n3.4\n1999\n6\nauto(l4)\n4\n15\n19\nr\npickup\n20\n19\n20\n\n\ntoyota\ntoyota tacoma 4wd\n4.0\n2008\n6\nmanual(m6)\n4\n15\n18\nr\npickup\n20\n19\n20\n\n\ntoyota\ntoyota tacoma 4wd\n4.0\n2008\n6\nauto(l5)\n4\n16\n20\nr\npickup\n20\n19\n20\n\n\nvolkswagen\ngti\n2.0\n1999\n4\nmanual(m5)\nf\n21\n29\nr\ncompact\n29\n24\n24\n\n\nvolkswagen\ngti\n2.0\n1999\n4\nauto(l4)\nf\n19\n26\nr\ncompact\n29\n24\n24\n\n\nvolkswagen\ngti\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\ncompact\n29\n24\n24\n\n\nvolkswagen\ngti\n2.0\n2008\n4\nauto(s6)\nf\n22\n29\np\ncompact\n29\n24\n24\n\n\nvolkswagen\ngti\n2.8\n1999\n6\nmanual(m5)\nf\n17\n24\nr\ncompact\n29\n24\n24\n\n\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n44\n29\n24\n\n\nvolkswagen\njetta\n2.0\n1999\n4\nmanual(m5)\nf\n21\n29\nr\ncompact\n44\n29\n24\n\n\nvolkswagen\njetta\n2.0\n1999\n4\nauto(l4)\nf\n19\n26\nr\ncompact\n44\n29\n24\n\n\nvolkswagen\njetta\n2.0\n2008\n4\nauto(s6)\nf\n22\n29\np\ncompact\n44\n29\n24\n\n\nvolkswagen\njetta\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\ncompact\n44\n29\n24\n\n\nvolkswagen\njetta\n2.5\n2008\n5\nauto(s6)\nf\n21\n29\nr\ncompact\n44\n29\n24\n\n\nvolkswagen\njetta\n2.5\n2008\n5\nmanual(m5)\nf\n21\n29\nr\ncompact\n44\n29\n24\n\n\nvolkswagen\njetta\n2.8\n1999\n6\nauto(l4)\nf\n16\n23\nr\ncompact\n44\n29\n24\n\n\nvolkswagen\njetta\n2.8\n1999\n6\nmanual(m5)\nf\n17\n24\nr\ncompact\n44\n29\n24\n\n\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n44\n28\n29\n\n\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n44\n28\n29\n\n\nvolkswagen\nnew beetle\n2.0\n1999\n4\nmanual(m5)\nf\n21\n29\nr\nsubcompact\n44\n28\n29\n\n\nvolkswagen\nnew beetle\n2.0\n1999\n4\nauto(l4)\nf\n19\n26\nr\nsubcompact\n44\n28\n29\n\n\nvolkswagen\nnew beetle\n2.5\n2008\n5\nmanual(m5)\nf\n20\n28\nr\nsubcompact\n44\n28\n29\n\n\nvolkswagen\nnew beetle\n2.5\n2008\n5\nauto(s6)\nf\n20\n29\nr\nsubcompact\n44\n28\n29\n\n\nvolkswagen\npassat\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\nmidsize\n29\n26\n26\n\n\nvolkswagen\npassat\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\nmidsize\n29\n26\n26\n\n\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n29\n26\n26\n\n\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n29\n26\n26\n\n\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n29\n26\n26\n\n\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n29\n26\n26\n\n\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n29\n26\n26",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>数值型数据的操纵</span>"
    ]
  },
  {
    "objectID": "logical_operation.html",
    "href": "logical_operation.html",
    "title": "\n5  逻辑运算的操纵\n",
    "section": "",
    "text": "5.1 逻辑/布尔运算符\nShow the code40 & 5 &gt; 30 # FALSE\n#&gt; [1] FALSE\n40 | 5 &gt; 30 # TRUE\n#&gt; [1] TRUE\n!TRUE  # FALSE\n#&gt; [1] FALSE\n!FALSE # TRUE\n#&gt; [1] TRUE\n\n#---------\n# Vectors\n#---------\n\nx &lt;- c(3, 4, 5)\ny &lt;- c(3, 5, 1)\n\n\nx & y   # TRUE TRUE TRUE\n#&gt; [1] TRUE TRUE TRUE\n#x && y  # TRUE  error\n\nx | y   # TRUE TRUE TRUE\n#&gt; [1] TRUE TRUE TRUE\n#x || y  # TRUE  error\n\n!x # FALSE FALSE FALSE\n#&gt; [1] FALSE FALSE FALSE\n\nxor(x, y) # FALSE FALSE FALSE\n#&gt; [1] FALSE FALSE FALSE\nShow the code(x1 &lt;- 1:10 %% 2 == 0)\n#&gt;  [1] FALSE  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE\n(y1 &lt;- 1:10 %% 5 == 0)\n#&gt;  [1] FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE\n\n(x2 &lt;- which(x1))\n#&gt; [1]  2  4  6  8 10\n(y2 &lt;- which(y1))\n#&gt; [1]  5 10\n# 交集\nx1 & y1\n#&gt;  [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE\nbase::intersect(x2, y2)\n#&gt; [1] 10\n\n# 并集\nx1 | y1\n#&gt;  [1] FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE\nbase::union(x2,y2)\n#&gt; [1]  2  4  6  8 10  5\n\n# 差集\nx1 & !y1\n#&gt;  [1] FALSE  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE FALSE FALSE\nbase::setdiff(x2, y2)\n#&gt; [1] 2 4 6 8\n\n# 只有一个为真\nxor(x1, y1)\n#&gt;  [1] FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE\nbase::setdiff(base::union(x2, y2), base::intersect(x2, y2))\n#&gt; [1] 2 4 6 8 5",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>逻辑运算的操纵</span>"
    ]
  },
  {
    "objectID": "logical_operation.html#逻辑布尔运算符",
    "href": "logical_operation.html#逻辑布尔运算符",
    "title": "\n5  逻辑运算的操纵\n",
    "section": "",
    "text": "Logical operator in R\nDescription\n\n\n\n&\nElementwise logical ‘AND’\n\n\n&&\nVector logical ‘AND’\n\n\n|\nElementwise logical ‘OR’\n\n\n||\nVector logical ‘OR’\n\n\n!\nLogical negation ‘NOT’\n\n\nxor()\nElementwise exclusive ‘OR’ equivalent to !( x | y)\n\n\n\n\n\n\n\n\n\n\n5.1.1 缺失值\n\nShow the codedf &lt;- tibble(x = c(TRUE, FALSE, NA))\n\ndf |&gt; \n  mutate(\n    and = x & NA,  #  A & B   A为TRUE，返回B ；A为FALSE,返回A\n    or = x | NA    #  A | B   A为TRUE，返回A ；A为FALSE,返回B\n  )\n\n\n\n\nx\nand\nor\n\n\n\nTRUE\nNA\nTRUE\n\n\nFALSE\nFALSE\nNA\n\n\nNA\nNA\nNA",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>逻辑运算的操纵</span>"
    ]
  },
  {
    "objectID": "logical_operation.html#关系运算符",
    "href": "logical_operation.html#关系运算符",
    "title": "\n5  逻辑运算的操纵\n",
    "section": "\n5.2 关系运算符",
    "text": "5.2 关系运算符\n\n\nRelational operator in R\nDescription\n\n\n\n&gt;\nGreater than\n\n\n&lt;\nLower than\n\n\n&gt;=\nGreater or equal than\n\n\n&lt;=\nLower or equal than\n\n\n==\nEqual to\n\n\n!=\nNot equal to",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>逻辑运算的操纵</span>"
    ]
  },
  {
    "objectID": "logical_operation.html#逻辑比较",
    "href": "logical_operation.html#逻辑比较",
    "title": "\n5  逻辑运算的操纵\n",
    "section": "\n5.3 逻辑比较",
    "text": "5.3 逻辑比较\n\n5.3.1 浮点比较\n\nShow the codex &lt;- c(1 / 49 * 49, sqrt(2) ^ 2)\nx\n#&gt; [1] 1 2\nx == c(1, 2)\n#&gt; [1] FALSE FALSE\nprint(x, digits = 16)\n#&gt; [1] 0.9999999999999999 2.0000000000000004\nnear(x, c(1, 2))\n#&gt; [1] TRUE TRUE\n\n\n\n5.3.2 缺失值\n\nShow the code# “contagious”\nNA == NA\n#&gt; [1] NA\nis.na(c(TRUE, NA, FALSE))\n#&gt; [1] FALSE  TRUE FALSE",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>逻辑运算的操纵</span>"
    ]
  },
  {
    "objectID": "logical_operation.html#in",
    "href": "logical_operation.html#in",
    "title": "\n5  逻辑运算的操纵\n",
    "section": "\n5.4 %in%\n",
    "text": "5.4 %in%\n\n\nShow the code1:12 %in% c(1, 5, 11)\n#&gt;  [1]  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE\n\nc(1, 2, NA) %in% NA\n#&gt; [1] FALSE FALSE  TRUE",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>逻辑运算的操纵</span>"
    ]
  },
  {
    "objectID": "logical_operation.html#条件转换",
    "href": "logical_operation.html#条件转换",
    "title": "\n5  逻辑运算的操纵\n",
    "section": "\n5.5 条件转换",
    "text": "5.5 条件转换\n\n5.5.1 if_else()\n\n\nShow the codex &lt;- c(-3:3, NA)\n\nif_else(x &gt; 0, \"+ve\", \"-ve\", missing = \"???\")\n#&gt; [1] \"-ve\" \"-ve\" \"-ve\" \"-ve\" \"+ve\" \"+ve\" \"+ve\" \"???\"\nif_else(x == 0,\n        \"0\", \n        if_else(x &lt; 0, \"-ve\", \"+ve\"), \"???\")\n#&gt; [1] \"-ve\" \"-ve\" \"-ve\" \"0\"   \"+ve\" \"+ve\" \"+ve\" \"???\"\n\n\n\nShow the codex1 &lt;- c(NA, 1, 2, NA)\ny1 &lt;- c(3, NA, 4, 6)\nif_else(is.na(x1), y1, x1)\n#&gt; [1] 3 1 2 6\n\n\n\n5.5.2 case_when()\n\n\nShow the codex &lt;- c(-3:3, NA)\ncase_when(\n  x == 0   ~ \"0\",\n  x &lt; 0    ~ \"-ve\", \n  x &gt; 0    ~ \"+ve\",\n  is.na(x) ~ \"???\"\n)\n#&gt; [1] \"-ve\" \"-ve\" \"-ve\" \"0\"   \"+ve\" \"+ve\" \"+ve\" \"???\"",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>逻辑运算的操纵</span>"
    ]
  },
  {
    "objectID": "logical_operation.html#逻辑汇总",
    "href": "logical_operation.html#逻辑汇总",
    "title": "\n5  逻辑运算的操纵\n",
    "section": "\n5.6 逻辑汇总",
    "text": "5.6 逻辑汇总\n\nShow the codex&lt;-c(2,3,5,1,4)\nx&gt;2\n#&gt; [1] FALSE  TRUE  TRUE FALSE  TRUE\n\n# 所有\nall(x&gt;2)   \n#&gt; [1] FALSE\n\n# 存在\nany(x&gt;2)\n#&gt; [1] TRUE",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>逻辑运算的操纵</span>"
    ]
  },
  {
    "objectID": "string_text.html",
    "href": "string_text.html",
    "title": "\n6  字符文本的操纵\n",
    "section": "",
    "text": "6.1 stringr\nstringi+ stringr + glue + stringx\nShow the codex &lt;- c(\"apple\", \"banana\", \"pear\",\"why\")\n\n# 连接\nstr_c(x, collapse = \"; \")\n#&gt; [1] \"apple; banana; pear; why\"\npaste0(\"Hello \", c(\"John\", \"Susan\"))\n#&gt; [1] \"Hello John\"  \"Hello Susan\"\npaste(\"x\",c(\"a\",\"b\"),sep=\"\",collapse = \"?\")  \n#&gt; [1] \"xa?xb\"\npaste0(\"x\",c(\"A\",\"B\"),collapse=\"?\")\n#&gt; [1] \"xA?xB\"\ncat(\"hello\",\"BOb\",\"\\b\\n\",\"\\bIsn\\' R\",\"\\t\",\"GREAT?\\n\",sep = \" \" )\n#&gt; hello BOb \n#&gt;  Isn' R      GREAT?\n\n# \nstr_length(x) \n#&gt; [1] 5 6 4 3\nstr_sub(x,start =  1,end =  2)\n#&gt; [1] \"ap\" \"ba\" \"pe\" \"wh\"\nstr_dup(x, times = 2)\n#&gt; [1] \"appleapple\"   \"bananabanana\" \"pearpear\"     \"whywhy\"\n\n\n# 空格\nstr_pad(x, 10, \"both\")\n#&gt; [1] \"  apple   \" \"  banana  \" \"   pear   \" \"   why    \"\nx &lt;- c(\"  a   \", \"b   \",  \"   c\")\nstr_trim(x,side = \"left\")\n#&gt; [1] \"a   \" \"b   \" \"c\"\n\njabberwocky &lt;- str_c(\n  \"`Twas brillig, and the slithy toves \",\n  \"did gyre and gimble in the wabe: \",\n  \"All mimsy were the borogoves, \",\n  \"and the mome raths outgrabe. \"\n)\nstr_wrap(jabberwocky, width = 40)\n#&gt; [1] \"`Twas brillig, and the slithy toves did\\ngyre and gimble in the wabe: All mimsy\\nwere the borogoves, and the mome raths\\noutgrabe.\"\ncat(str_wrap(jabberwocky, width = 40))\n#&gt; `Twas brillig, and the slithy toves did\n#&gt; gyre and gimble in the wabe: All mimsy\n#&gt; were the borogoves, and the mome raths\n#&gt; outgrabe.\n\n# 截断\nx &lt;- \"This string is moderately long\"\nrbind(\n  str_trunc(x, 20, \"right\"),\n  str_trunc(x, 20, \"left\"),\n  str_trunc(x, 20, \"center\")\n)\n#&gt;      [,1]                  \n#&gt; [1,] \"This string is mo...\"\n#&gt; [2,] \"...s moderately long\"\n#&gt; [3,] \"This stri...ely long\"\n\n# Locale sensitive \nx &lt;- \"I like horses.\"\nstr_to_upper(x)\n#&gt; [1] \"I LIKE HORSES.\"\nstr_to_title(x)\n#&gt; [1] \"I Like Horses.\"\nstr_to_lower(x)\n#&gt; [1] \"i like horses.\"\nstr_to_lower(x,locale =  \"tr\")\n#&gt; [1] \"ı like horses.\"\n\n# 排序\nx &lt;- c(\"y\", \"i\", \"k\")\nstr_order(x)\n#&gt; [1] 2 3 1\n\nstr_sort(x,locale = \"en\")\n#&gt; [1] \"i\" \"k\" \"y\"",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>字符文本的操纵</span>"
    ]
  },
  {
    "objectID": "string_text.html#匹配正则表达式",
    "href": "string_text.html#匹配正则表达式",
    "title": "\n6  字符文本的操纵\n",
    "section": "\n6.2 匹配正则表达式",
    "text": "6.2 匹配正则表达式\n\nShow the codestrings &lt;- c(\n  \"apple\", \n  \"219 733 8965\", \n  \"329-293-8753\", \n  \"Work: 579-499-7527; Home: 543.355.3679\"\n)\nphone &lt;- \"([2-9][0-9]{2})[- .]([0-9]{3})[- .]([0-9]{4})\"\n# 检测\nstr_detect(strings, phone)\n#&gt; [1] FALSE  TRUE  TRUE  TRUE\ngrepl(pattern = phone, x = strings)\n#&gt; [1] FALSE  TRUE  TRUE  TRUE\n\n# 查找\nstr_subset(strings, phone)\n#&gt; [1] \"219 733 8965\"                          \n#&gt; [2] \"329-293-8753\"                          \n#&gt; [3] \"Work: 579-499-7527; Home: 543.355.3679\"\ngrep(pattern = phone, x = strings,value = T)\n#&gt; [1] \"219 733 8965\"                          \n#&gt; [2] \"329-293-8753\"                          \n#&gt; [3] \"Work: 579-499-7527; Home: 543.355.3679\"\n\nstr_which(strings, phone)\n#&gt; [1] 2 3 4\ngrep(pattern = phone, x = strings)\n#&gt; [1] 2 3 4\n\n\n# 计数\nstr_count(strings, phone)\n#&gt; [1] 0 1 1 2\n\n# 定位\nstr_locate(strings, phone)\n#&gt;      start end\n#&gt; [1,]    NA  NA\n#&gt; [2,]     1  12\n#&gt; [3,]     1  12\n#&gt; [4,]     7  18\nstr_locate_all(strings, phone)\n#&gt; [[1]]\n#&gt;      start end\n#&gt; \n#&gt; [[2]]\n#&gt;      start end\n#&gt; [1,]     1  12\n#&gt; \n#&gt; [[3]]\n#&gt;      start end\n#&gt; [1,]     1  12\n#&gt; \n#&gt; [[4]]\n#&gt;      start end\n#&gt; [1,]     7  18\n#&gt; [2,]    27  38\n\n# 提取\nstr_extract(strings, phone)\n#&gt; [1] NA             \"219 733 8965\" \"329-293-8753\" \"579-499-7527\"\nstr_extract_all(strings, phone)\n#&gt; [[1]]\n#&gt; character(0)\n#&gt; \n#&gt; [[2]]\n#&gt; [1] \"219 733 8965\"\n#&gt; \n#&gt; [[3]]\n#&gt; [1] \"329-293-8753\"\n#&gt; \n#&gt; [[4]]\n#&gt; [1] \"579-499-7527\" \"543.355.3679\"\nstr_extract_all(strings, phone, simplify = TRUE)\n#&gt;      [,1]           [,2]          \n#&gt; [1,] \"\"             \"\"            \n#&gt; [2,] \"219 733 8965\" \"\"            \n#&gt; [3,] \"329-293-8753\" \"\"            \n#&gt; [4,] \"579-499-7527\" \"543.355.3679\"\n\n# 提取匹配的捕获组 （）\nstr_match(strings, phone)\n#&gt;      [,1]           [,2]  [,3]  [,4]  \n#&gt; [1,] NA             NA    NA    NA    \n#&gt; [2,] \"219 733 8965\" \"219\" \"733\" \"8965\"\n#&gt; [3,] \"329-293-8753\" \"329\" \"293\" \"8753\"\n#&gt; [4,] \"579-499-7527\" \"579\" \"499\" \"7527\"\nstr_match_all(strings, phone)\n#&gt; [[1]]\n#&gt;      [,1] [,2] [,3] [,4]\n#&gt; \n#&gt; [[2]]\n#&gt;      [,1]           [,2]  [,3]  [,4]  \n#&gt; [1,] \"219 733 8965\" \"219\" \"733\" \"8965\"\n#&gt; \n#&gt; [[3]]\n#&gt;      [,1]           [,2]  [,3]  [,4]  \n#&gt; [1,] \"329-293-8753\" \"329\" \"293\" \"8753\"\n#&gt; \n#&gt; [[4]]\n#&gt;      [,1]           [,2]  [,3]  [,4]  \n#&gt; [1,] \"579-499-7527\" \"579\" \"499\" \"7527\"\n#&gt; [2,] \"543.355.3679\" \"543\" \"355\" \"3679\"\n\n# 替换\nstr_replace(strings, phone, replacement = \"XXX-XXX-XXXX\")\n#&gt; [1] \"apple\"                                 \n#&gt; [2] \"XXX-XXX-XXXX\"                          \n#&gt; [3] \"XXX-XXX-XXXX\"                          \n#&gt; [4] \"Work: XXX-XXX-XXXX; Home: 543.355.3679\"\n\nstr_replace_all(strings, phone, replacement = \"XXX-XXX-XXXX\")\n#&gt; [1] \"apple\"                                 \n#&gt; [2] \"XXX-XXX-XXXX\"                          \n#&gt; [3] \"XXX-XXX-XXXX\"                          \n#&gt; [4] \"Work: XXX-XXX-XXXX; Home: XXX-XXX-XXXX\"\n\nx &lt;- c(\"apple\", \"pear\", \"banana\")\nstr_remove(x, \"[aeiou]\")      #删除        相当于替换符为空字符\"\"\n#&gt; [1] \"pple\"  \"par\"   \"bnana\"\nstr_remove_all(x, \"[aeiou]\")   #str_replace(x, pattern, \"\")\n#&gt; [1] \"ppl\" \"pr\"  \"bnn\"\n\n# 拆分\nstr_split(\"a-b-c\", pattern = \"-\")\n#&gt; [[1]]\n#&gt; [1] \"a\" \"b\" \"c\"\nstr_split_fixed(\"a-b-c\", \"-\", n = 2)\n#&gt;      [,1] [,2] \n#&gt; [1,] \"a\"  \"b-c\"",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>字符文本的操纵</span>"
    ]
  },
  {
    "objectID": "string_text.html#匹配固定项",
    "href": "string_text.html#匹配固定项",
    "title": "\n6  字符文本的操纵\n",
    "section": "\n6.3 匹配固定项",
    "text": "6.3 匹配固定项\n\nShow the codea1 &lt;- \"\\u00e1\"\na2 &lt;- \"a\\u0301\"\nc(a1, a2)\n#&gt; [1] \"á\" \"á\"\nstr_detect(a1, fixed(a2))\n#&gt; [1] FALSE\nstr_detect(a1, coll(a2))\n#&gt; [1] TRUE\n\nx &lt;- \"This is a sentence.\"\nstr_split(x, boundary(\"word\"))\n#&gt; [[1]]\n#&gt; [1] \"This\"     \"is\"       \"a\"        \"sentence\"\nstr_count(x, boundary(\"word\"))\n#&gt; [1] 4\nstr_extract_all(x, boundary(\"word\"))\n#&gt; [[1]]\n#&gt; [1] \"This\"     \"is\"       \"a\"        \"sentence\"\nstr_split(x, \"\")\n#&gt; [[1]]\n#&gt;  [1] \"T\" \"h\" \"i\" \"s\" \" \" \"i\" \"s\" \" \" \"a\" \" \" \"s\" \"e\" \"n\" \"t\" \"e\" \"n\" \"c\" \"e\" \".\"\n\nstr_view(c(\"\", \"a\", \".\"), stringr::fixed(\"a\"))\n#&gt; [2] │ &lt;a&gt;\nstr_view(\"x X\", stringr::fixed(\"X\", ignore_case = TRUE))\n#&gt; [1] │ &lt;x&gt; &lt;X&gt;",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>字符文本的操纵</span>"
    ]
  },
  {
    "objectID": "string_text.html#str_flatten",
    "href": "string_text.html#str_flatten",
    "title": "\n6  字符文本的操纵\n",
    "section": "\n6.4 str_flatten\n",
    "text": "6.4 str_flatten\n\n\nShow the codedf &lt;- tribble(\n  ~ name, ~ fruit,\n  \"Carmen\", \"banana\",\n  \"Carmen\", \"apple\",\n  \"Marvin\", \"nectarine\",\n  \"Terence\", \"cantaloupe\",\n  \"Terence\", \"papaya\",\n  \"Terence\", \"mandarin\"\n)\ndf |&gt;\n  group_by(name) |&gt; \n  summarize(fruits = str_flatten(fruit, \", \",last = \", and \"))\n\n\n\n\nname\nfruits\n\n\n\nCarmen\nbanana, and apple\n\n\nMarvin\nnectarine\n\n\nTerence\ncantaloupe, papaya, and mandarin",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>字符文本的操纵</span>"
    ]
  },
  {
    "objectID": "string_text.html#str_glue",
    "href": "string_text.html#str_glue",
    "title": "\n6  字符文本的操纵\n",
    "section": "\n6.5 str_glue()\n",
    "text": "6.5 str_glue()\n\n\nShow the codename &lt;- \"Fred\"\nage &lt;- 50\nanniversary &lt;- as.Date(\"1991-10-12\")\n\nstr_glue(\n  \"My name is {name}, \",\n  \"my age next year is {age + 1}, \",\n  \"and my anniversary is {format(anniversary, '%A, %B %d, %Y')}.\"\n)\n#&gt; My name is Fred, my age next year is 51, and my anniversary is 星期六, 十月 12, 1991.\n\nstr_glue(\"My name is {name}, not {{name}}.\")\n#&gt; My name is Fred, not {name}.",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>字符文本的操纵</span>"
    ]
  },
  {
    "objectID": "string_text.html#转义escape",
    "href": "string_text.html#转义escape",
    "title": "\n6  字符文本的操纵\n",
    "section": "\n6.6 转义escape",
    "text": "6.6 转义escape\n\nShow the code# 转义字符串\nsingle_quote &lt;- \"\\'\"\ndouble_quote &lt;- '\\\"'\nbackslash &lt;- \"\\\\\"\nx &lt;- c(single_quote, double_quote, backslash)\nx\n#&gt; [1] \"'\"  \"\\\"\" \"\\\\\"\n\nstr_view(x)\n#&gt; [1] │ '\n#&gt; [2] │ \"\n#&gt; [3] │ \\\n\n\n\nShow the codex &lt;- c(\"one\\ntwo\", \"one\\ttwo\", \"\\u00b5\", \"\\U0001f604\")\nx\n#&gt; [1] \"one\\ntwo\" \"one\\ttwo\" \"µ\"        \"😄\"\nstr_view(x)\n#&gt; [1] │ one\n#&gt;     │ two\n#&gt; [2] │ one{\\t}two\n#&gt; [3] │ µ\n#&gt; [4] │ 😄\n\n\n\nShow the codedot &lt;- \"\\\\.\"\nstr_view(dot)\n#&gt; [1] │ \\.\nstr_view(c(\"abc\", \"a.c\", \"bef\"), \"a\\\\.c\")  \n#&gt; [2] │ &lt;a.c&gt;",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>字符文本的操纵</span>"
    ]
  },
  {
    "objectID": "string_text.html#raw",
    "href": "string_text.html#raw",
    "title": "\n6  字符文本的操纵\n",
    "section": "\n6.7 raw",
    "text": "6.7 raw\n\nShow the codesingle_quote &lt;- r\"(')\"        # []    ---()---  -()-\ndouble_quote &lt;- r\"[\"]\"\nbackslash &lt;- r\"--(\\)--\"\n\nx &lt;- c(single_quote, double_quote, backslash)\nx\n#&gt; [1] \"'\"  \"\\\"\" \"\\\\\"\nstr_view(x)\n#&gt; [1] │ '\n#&gt; [2] │ \"\n#&gt; [3] │ \\",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>字符文本的操纵</span>"
    ]
  },
  {
    "objectID": "string_text.html#正则表达式",
    "href": "string_text.html#正则表达式",
    "title": "\n6  字符文本的操纵\n",
    "section": "\n6.8 正则表达式",
    "text": "6.8 正则表达式\n\n6.8.1 直接匹配\n\nShow the codestr_view(fruit, \"berry\")  \n#&gt;  [6] │ bil&lt;berry&gt;\n#&gt;  [7] │ black&lt;berry&gt;\n#&gt; [10] │ blue&lt;berry&gt;\n#&gt; [11] │ boysen&lt;berry&gt;\n#&gt; [19] │ cloud&lt;berry&gt;\n#&gt; [21] │ cran&lt;berry&gt;\n#&gt; [29] │ elder&lt;berry&gt;\n#&gt; [32] │ goji &lt;berry&gt;\n#&gt; [33] │ goose&lt;berry&gt;\n#&gt; [38] │ huckle&lt;berry&gt;\n#&gt; [50] │ mul&lt;berry&gt;\n#&gt; [70] │ rasp&lt;berry&gt;\n#&gt; [73] │ salal &lt;berry&gt;\n#&gt; [76] │ straw&lt;berry&gt;\n\n\n\n6.8.2 字符类 character classes\n\nShow the code#   [...]    匹配方括号内任意一个字符\n#   [^...]   匹配除方括号内的任意字符\nstr_view(words, \"[aeiou]x[aeiou]\")  #匹配 中间x两边元音\n#&gt; [284] │ &lt;exa&gt;ct\n#&gt; [285] │ &lt;exa&gt;mple\n#&gt; [288] │ &lt;exe&gt;rcise\n#&gt; [289] │ &lt;exi&gt;st\n\nstr_view(words, \"[^aeiou]y[^aeiou]\") #匹配 中间y两边辅音\n#&gt; [836] │ &lt;sys&gt;tem\n#&gt; [901] │ &lt;typ&gt;e\n\n#  -   定义一个范围，匹配任何小写字母并匹配任何数字。[a-z][0-9]\n#  \\   对特殊字符进行转义，[\\\\^\\\\-\\\\]]  匹配 ^、-和 ]\nx &lt;- \"abcd ABCD  12345 -![@#%^.\"\nstr_view(x, \"[abc\\\\^\\\\[]\")\n#&gt; [1] │ &lt;a&gt;&lt;b&gt;&lt;c&gt;d ABCD  12345 -!&lt;[&gt;@#%&lt;^&gt;.\nstr_view(x, \"[a-zA-Z]\")\n#&gt; [1] │ &lt;a&gt;&lt;b&gt;&lt;c&gt;&lt;d&gt; &lt;A&gt;&lt;B&gt;&lt;C&gt;&lt;D&gt;  12345 -![@#%^.\nstr_view(x, \"[^a-z0-9]\")\n#&gt; [1] │ abcd&lt; &gt;&lt;A&gt;&lt;B&gt;&lt;C&gt;&lt;D&gt;&lt; &gt;&lt; &gt;12345&lt; &gt;&lt;-&gt;&lt;!&gt;&lt;[&gt;&lt;@&gt;&lt;#&gt;&lt;%&gt;&lt;^&gt;&lt;.&gt;\n\n\n\n6.8.3 量词 Quantifier\n\nShow the code# {n}正好匹配 n 次。\n# {n,}至少匹配 n 次。\n# {n,m}N 次和 M 次之间的匹配。\nx &lt;- c(\"1234_abcd  123 a33a bbbc  22_23\" , \"abb\",\"aab\",'a_bbbbb')\n\nstr_view(x, \"b{2,5}\")\n#&gt; [1] │ 1234_abcd  123 a33a &lt;bbb&gt;c  22_23\n#&gt; [2] │ a&lt;bb&gt;\n#&gt; [4] │ a_&lt;bbbbb&gt;\nstr_view(x, \"\\\\d{2}\")\n#&gt; [1] │ &lt;12&gt;&lt;34&gt;_abcd  &lt;12&gt;3 a&lt;33&gt;a bbbc  &lt;22&gt;_&lt;23&gt;\nstr_view(x, \"\\\\d{2,}\")\n#&gt; [1] │ &lt;1234&gt;_abcd  &lt;123&gt; a&lt;33&gt;a bbbc  &lt;22&gt;_&lt;23&gt;\nstr_view(x, \"\\\\d{2,3}\")\n#&gt; [1] │ &lt;123&gt;4_abcd  &lt;123&gt; a&lt;33&gt;a bbbc  &lt;22&gt;_&lt;23&gt;\n\n\n\n#    ?  匹配 0 或 1 次   {0,1}\n#    +  至少匹配一次    {1,}\n#    *  匹配任意次数    {0,}\n\nstr_view(x, \"ab?\")  \n#&gt; [1] │ 1234_&lt;ab&gt;cd  123 &lt;a&gt;33&lt;a&gt; bbbc  22_23\n#&gt; [2] │ &lt;ab&gt;b\n#&gt; [3] │ &lt;a&gt;&lt;ab&gt;\n#&gt; [4] │ &lt;a&gt;_bbbbb\nstr_view(x, \"ab+\")  \n#&gt; [1] │ 1234_&lt;ab&gt;cd  123 a33a bbbc  22_23\n#&gt; [2] │ &lt;abb&gt;\n#&gt; [3] │ a&lt;ab&gt;\nstr_view(x, \"ab*\")  \n#&gt; [1] │ 1234_&lt;ab&gt;cd  123 &lt;a&gt;33&lt;a&gt; bbbc  22_23\n#&gt; [2] │ &lt;abb&gt;\n#&gt; [3] │ &lt;a&gt;&lt;ab&gt;\n#&gt; [4] │ &lt;a&gt;_bbbbb\n  \n# 贪婪量词 尽可能匹配  上述都是\n\n# 懒惰量词 原有量词后加一个 ? ，仅保持最小匹配\nstr_view(x, \"\\\\d{2,3}?\")\n#&gt; [1] │ &lt;12&gt;&lt;34&gt;_abcd  &lt;12&gt;3 a&lt;33&gt;a bbbc  &lt;22&gt;_&lt;23&gt;\n\nstr_view(x, \"ab??\")  # 匹配a\n#&gt; [1] │ 1234_&lt;a&gt;bcd  123 &lt;a&gt;33&lt;a&gt; bbbc  22_23\n#&gt; [2] │ &lt;a&gt;bb\n#&gt; [3] │ &lt;a&gt;&lt;a&gt;b\n#&gt; [4] │ &lt;a&gt;_bbbbb\nstr_view(x, \"ab+?\")  # 匹配ab\n#&gt; [1] │ 1234_&lt;ab&gt;cd  123 a33a bbbc  22_23\n#&gt; [2] │ &lt;ab&gt;b\n#&gt; [3] │ a&lt;ab&gt;\nstr_view(x, \"ab*?\")  # 匹配a\n#&gt; [1] │ 1234_&lt;a&gt;bcd  123 &lt;a&gt;33&lt;a&gt; bbbc  22_23\n#&gt; [2] │ &lt;a&gt;bb\n#&gt; [3] │ &lt;a&gt;&lt;a&gt;b\n#&gt; [4] │ &lt;a&gt;_bbbbb\n\n\n\n6.8.4 元字符（meta-characters）\n\nShow the code#\\d匹配任何数字;匹配任何非数字的内容\\D\nstr_view(x, \"\\\\d+\")\n#&gt; [1] │ &lt;1234&gt;_abcd  &lt;123&gt; a&lt;33&gt;a bbbc  &lt;22&gt;_&lt;23&gt;\nstr_view(x, \"\\\\D+\")\n#&gt; [1] │ 1234&lt;_abcd  &gt;123&lt; a&gt;33&lt;a bbbc  &gt;22&lt;_&gt;23\n#&gt; [2] │ &lt;abb&gt;\n#&gt; [3] │ &lt;aab&gt;\n#&gt; [4] │ &lt;a_bbbbb&gt;\n\n#\\s匹配任何空格（例如，空格、制表符、换行符）;匹配任何非空格的内容。\\S\nstr_view(x, \"\\\\s+\")\n#&gt; [1] │ 1234_abcd&lt;  &gt;123&lt; &gt;a33a&lt; &gt;bbbc&lt;  &gt;22_23\nstr_view(x, \"\\\\S+\")\n#&gt; [1] │ &lt;1234_abcd&gt;  &lt;123&gt; &lt;a33a&gt; &lt;bbbc&gt;  &lt;22_23&gt;\n#&gt; [2] │ &lt;abb&gt;\n#&gt; [3] │ &lt;aab&gt;\n#&gt; [4] │ &lt;a_bbbbb&gt;\n\n#\\w匹配任何“单词”字符，即字母、数字和下划线;匹配任何“非单词”字符。\\W\nstr_view(x, \"\\\\w+\")\n#&gt; [1] │ &lt;1234_abcd&gt;  &lt;123&gt; &lt;a33a&gt; &lt;bbbc&gt;  &lt;22_23&gt;\n#&gt; [2] │ &lt;abb&gt;\n#&gt; [3] │ &lt;aab&gt;\n#&gt; [4] │ &lt;a_bbbbb&gt;\nstr_view(x, \"\\\\W+\")\n#&gt; [1] │ 1234_abcd&lt;  &gt;123&lt; &gt;a33a&lt; &gt;bbbc&lt;  &gt;22_23\n\n\n#   .        匹配除 \\n 以外的任意字符\nstr_view(fruit, \"a...e\")\n#&gt;  [1] │ &lt;apple&gt;\n#&gt;  [7] │ bl&lt;ackbe&gt;rry\n#&gt; [48] │ mand&lt;arine&gt;\n#&gt; [51] │ nect&lt;arine&gt;\n#&gt; [62] │ pine&lt;apple&gt;\n#&gt; [64] │ pomegr&lt;anate&gt;\n#&gt; [70] │ r&lt;aspbe&gt;rry\n#&gt; [73] │ sal&lt;al be&gt;rry\n\n\n锚点Anchors\n\nShow the code# 匹配开头或结尾：^  $\nstr_view(fruit, \"^a\")\n#&gt; [1] │ &lt;a&gt;pple\n#&gt; [2] │ &lt;a&gt;pricot\n#&gt; [3] │ &lt;a&gt;vocado\nstr_view(fruit, \"a$\")\n#&gt;  [4] │ banan&lt;a&gt;\n#&gt; [15] │ cherimoy&lt;a&gt;\n#&gt; [30] │ feijo&lt;a&gt;\n#&gt; [36] │ guav&lt;a&gt;\n#&gt; [56] │ papay&lt;a&gt;\n#&gt; [74] │ satsum&lt;a&gt;\n\nstr_view(fruit, \"apple\")\n#&gt;  [1] │ &lt;apple&gt;\n#&gt; [62] │ pine&lt;apple&gt;\nstr_view(fruit, \"^apple$\") #仅匹配完整字符串\n#&gt; [1] │ &lt;apple&gt;\n\n\n#  \\b  单词的开头或结尾,字符的边界\nx &lt;- c(\"summary(x)\", \"summarize(df)\", \"rowsum(x)\", \"sum(x)\")\nstr_view(x, \"sum\")\n#&gt; [1] │ &lt;sum&gt;mary(x)\n#&gt; [2] │ &lt;sum&gt;marize(df)\n#&gt; [3] │ row&lt;sum&gt;(x)\n#&gt; [4] │ &lt;sum&gt;(x)\nstr_view(x, \"^sum$\")\nstr_view(x, \"\\\\bsum\\\\b\") \n#&gt; [4] │ &lt;sum&gt;(x)\n\n\n\n6.8.5 零宽匹配\nzero-width match\n\nShow the codestr_view(\"abc\", c(\"$\", \"^\", \"\\\\b\"))\n#&gt; [1] │ abc&lt;&gt;\n#&gt; [2] │ &lt;&gt;abc\n#&gt; [3] │ &lt;&gt;abc&lt;&gt;\nstr_replace_all(\"abc\", c(\"$\", \"^\", \"\\\\b\"), \"++\")\n#&gt; [1] \"abc++\"   \"++abc\"   \"++abc++\"\n\n\n\n6.8.6 或运算符\n\nShow the code#alternation\nstr_view(fruit, \"apple|melon|nut\")\n#&gt;  [1] │ &lt;apple&gt;\n#&gt; [13] │ canary &lt;melon&gt;\n#&gt; [20] │ coco&lt;nut&gt;\n#&gt; [52] │ &lt;nut&gt;\n#&gt; [62] │ pine&lt;apple&gt;\n#&gt; [72] │ rock &lt;melon&gt;\n#&gt; [80] │ water&lt;melon&gt;\nstr_view(fruit, \"aa|ee|ii|oo|uu\")\n#&gt;  [9] │ bl&lt;oo&gt;d orange\n#&gt; [33] │ g&lt;oo&gt;seberry\n#&gt; [47] │ lych&lt;ee&gt;\n#&gt; [66] │ purple mangost&lt;ee&gt;n",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>字符文本的操纵</span>"
    ]
  },
  {
    "objectID": "base_function.html",
    "href": "base_function.html",
    "title": "\n7  base 函数\n",
    "section": "",
    "text": "7.1 赋值运算符",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>base 函数</span>"
    ]
  },
  {
    "objectID": "base_function.html#赋值运算符",
    "href": "base_function.html#赋值运算符",
    "title": "\n7  base 函数\n",
    "section": "",
    "text": "Assignment operator in R\nDescription\n\n\n\n&lt;-\nLeft assignment\n\n\n=\nLeft assignment (not recommended) and argument assignment\n\n\n-&gt;\nRight assignment\n\n\n&lt;&lt;-\nLeft lexicographic assignment (for advanced users)\n\n\n-&gt;&gt;\nRight lexicographic assignment (for advanced users)",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>base 函数</span>"
    ]
  },
  {
    "objectID": "base_function.html#其他运算符",
    "href": "base_function.html#其他运算符",
    "title": "\n7  base 函数\n",
    "section": "\n7.2 其他运算符",
    "text": "7.2 其他运算符\n\n\nMiscellaneous operator in R\nDescription\n\n\n\n$\nNamed list or dataframe column subset\n\n\n:\nSequence generator\n\n\n::\nAccessing functions of packages It is not usually needed\n\n\n:::\nAccessing internal functions of packages\n\n\n~\nModel formulae\n\n\n@\nAccessing slots in S4 classes (Advanced)",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>base 函数</span>"
    ]
  },
  {
    "objectID": "base_function.html#逻辑索引",
    "href": "base_function.html#逻辑索引",
    "title": "\n7  base 函数\n",
    "section": "\n7.3 逻辑索引",
    "text": "7.3 逻辑索引\n\nShow the code1:length(mtcars$mpg)\n#&gt;  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n#&gt; [26] 26 27 28 29 30 31 32\nseq_along(mtcars$mpg)\n#&gt;  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n#&gt; [26] 26 27 28 29 30 31 32\n\nx &lt;- c(1,3,6,4,0,7)\n# 返回值为TRUE的索引\nwhich(x&gt;2)\n#&gt; [1] 2 3 4 6\nwhich.max(x)\n#&gt; [1] 6\nwhich.min(x)\n#&gt; [1] 5\n\n# 返回值\nx[x&gt;2]\n#&gt; [1] 3 6 4 7\nx[which(x&gt;2)]\n#&gt; [1] 3 6 4 7\n\n# 包含\n# match(x, table, nomatch = NA_integer_, incomparables = NULL)\n# x %in% table\n1:10 %in% c(1,3,5,9)\n#&gt;  [1]  TRUE FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE FALSE\n\nmatch(1:10, c(1,3,5,9))\n#&gt;  [1]  1 NA  2 NA  3 NA NA NA  4 NA\n\nall(colnames(mpg)==colnames(mpg))\n#&gt; [1] TRUE\nany(colnames(mpg)==colnames(mtcars))\n#&gt; [1] FALSE\n\n\nx &lt;- c(9:20, 1:5, 3:7, 0:8)\nduplicated(x)\n#&gt;  [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n#&gt; [13] FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE\n#&gt; [25]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE\n\nxu &lt;- x[!duplicated(x)]\nxu\n#&gt;  [1]  9 10 11 12 13 14 15 16 17 18 19 20  1  2  3  4  5  6  7  0  8",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>base 函数</span>"
    ]
  },
  {
    "objectID": "base_function.html#子集运算",
    "href": "base_function.html#子集运算",
    "title": "\n7  base 函数\n",
    "section": "\n7.4 子集运算",
    "text": "7.4 子集运算\n[，$，[[\nS4 对象： @ slot\n\n7.4.1 [ ]\n\n\nShow the codex &lt;- c(2.1, 4.2, 3.3, 5.4)\n\nx[c(3, 1)]\n#&gt; [1] 3.3 2.1\n\nx[-c(3, 1)]\n#&gt; [1] 4.2 5.4\n\nx[c(TRUE, TRUE, FALSE, FALSE)]\n#&gt; [1] 2.1 4.2\nx[x &gt; 3]\n#&gt; [1] 4.2 3.3 5.4\n\nx[c(TRUE, FALSE)] # recycling rules 循环\n#&gt; [1] 2.1 3.3\n\nx[]\n#&gt; [1] 2.1 4.2 3.3 5.4\n\nx[0]\n#&gt; numeric(0)\n\n\n\n7.4.2 $, [[ ]]\n\n$是一个简写运算符, x$y大致相当于 x[[\"y\"]] ,从左到右部分赋值\n\nShow the codex &lt;- list(abc = 1)\nx$a\n#&gt; [1] 1\n\nx[[\"a\"]]\n#&gt; NULL\n\noptions(warnPartialMatchDollar = TRUE)\nx$a\n#&gt; [1] 1",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>base 函数</span>"
    ]
  },
  {
    "objectID": "base_function.html#生成数值序列",
    "href": "base_function.html#生成数值序列",
    "title": "\n7  base 函数\n",
    "section": "\n7.5 生成数值序列",
    "text": "7.5 生成数值序列\n\nShow the codeseq(from=1,to=30,by=3)  # 生成一个序列\n#&gt;  [1]  1  4  7 10 13 16 19 22 25 28\nseq(from=1,to=30,length=10) \n#&gt;  [1]  1.000000  4.222222  7.444444 10.666667 13.888889 17.111111 20.333333\n#&gt;  [8] 23.555556 26.777778 30.000000\n\nsequence(30,by=3)\n#&gt;  [1]  1  4  7 10 13 16 19 22 25 28 31 34 37 40 43 46 49 52 55 58 61 64 67 70 73\n#&gt; [26] 76 79 82 85 88\n\n\nrep(x = c(\"A\",1,\"B\",2),times = 3)           #重复序列\n#&gt;  [1] \"A\" \"1\" \"B\" \"2\" \"A\" \"1\" \"B\" \"2\" \"A\" \"1\" \"B\" \"2\"\nrep(x = c(\"A\",1,\"B\",2),times = c(1,2,3,4))\n#&gt;  [1] \"A\" \"1\" \"1\" \"B\" \"B\" \"B\" \"2\" \"2\" \"2\" \"2\"\nrep(x = c(\"A\",1,\"B\",2),each = 3,times = 2)\n#&gt;  [1] \"A\" \"A\" \"A\" \"1\" \"1\" \"1\" \"B\" \"B\" \"B\" \"2\" \"2\" \"2\" \"A\" \"A\" \"A\" \"1\" \"1\" \"1\" \"B\"\n#&gt; [20] \"B\" \"B\" \"2\" \"2\" \"2\"",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>base 函数</span>"
    ]
  },
  {
    "objectID": "base_function.html#排序",
    "href": "base_function.html#排序",
    "title": "\n7  base 函数\n",
    "section": "\n7.6 排序",
    "text": "7.6 排序\n\nShow the codex &lt;- c(\"b\", \"c\", \"a\")\norder(x)\n#&gt; [1] 3 1 2\nx[order(x)]\n#&gt; [1] \"a\" \"b\" \"c\"\n\n\n\nShow the codesort()\ndplyr::arrange()\n\n# 分配秩次\nrank()",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>base 函数</span>"
    ]
  },
  {
    "objectID": "base_function.html#拆分",
    "href": "base_function.html#拆分",
    "title": "\n7  base 函数\n",
    "section": "\n7.7 拆分",
    "text": "7.7 拆分\n\nShow the codeset.seed(3)\n\ndf &lt;- CO2[sample(1:nrow(CO2), 10), ]\nhead(df)\n\n\n\n\n\nPlant\nType\nTreatment\nconc\nuptake\n\n\n\n5\nQn1\nQuebec\nnonchilled\n500\n35.3\n\n\n58\nMn3\nMississippi\nnonchilled\n175\n19.4\n\n\n12\nQn2\nQuebec\nnonchilled\n500\n40.6\n\n\n36\nQc3\nQuebec\nchilled\n95\n15.1\n\n\n83\nMc3\nMississippi\nchilled\n675\n18.9\n\n\n8\nQn2\nQuebec\nnonchilled\n95\n13.6\n\n\n\n\n\nShow the codedfs &lt;- split(df, f = list(df$Type, df$Treatment))\ndfs\n#&gt; $Quebec.nonchilled\n#&gt;    Plant   Type  Treatment conc uptake\n#&gt; 5    Qn1 Quebec nonchilled  500   35.3\n#&gt; 12   Qn2 Quebec nonchilled  500   40.6\n#&gt; 8    Qn2 Quebec nonchilled   95   13.6\n#&gt; 20   Qn3 Quebec nonchilled  675   43.9\n#&gt; \n#&gt; $Mississippi.nonchilled\n#&gt;    Plant        Type  Treatment conc uptake\n#&gt; 58   Mn3 Mississippi nonchilled  175   19.4\n#&gt; 55   Mn2 Mississippi nonchilled  675   31.1\n#&gt; \n#&gt; $Quebec.chilled\n#&gt;    Plant   Type Treatment conc uptake\n#&gt; 36   Qc3 Quebec   chilled   95   15.1\n#&gt; 40   Qc3 Quebec   chilled  500   38.9\n#&gt; \n#&gt; $Mississippi.chilled\n#&gt;    Plant        Type Treatment conc uptake\n#&gt; 83   Mc3 Mississippi   chilled  675   18.9\n#&gt; 74   Mc2 Mississippi   chilled  350   13.0",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>base 函数</span>"
    ]
  },
  {
    "objectID": "base_function.html#合并",
    "href": "base_function.html#合并",
    "title": "\n7  base 函数\n",
    "section": "\n7.8 合并",
    "text": "7.8 合并\n\nShow the codeset.seed(61)\n\nemployee_id &lt;- 1:10\nemployee_name &lt;- c(\"Andrew\", \"Susan\", \"John\", \"Joe\", \"Jack\",\n                   \"Jacob\", \"Mary\", \"Kate\", \"Jacqueline\", \"Ivy\")\nemployee_salary &lt;- round(rnorm(10, mean = 1500, sd = 200))\nemployee_age &lt;- round(rnorm(10, mean = 50, sd = 8))\nemployee_position &lt;- c(\"CTO\", \"CFO\", \"Administrative\", rep(\"Technician\", 7))\n\n\ndf_1 &lt;- data.frame(id = employee_id[1:8], name = employee_name[1:8],\n                   month_salary = employee_salary[1:8])\ndf_2 &lt;- data.frame(id = employee_id[-5], name = employee_name[-5],\n                   age = employee_age[-5], position = employee_position[-5])\n\ndf_1\n\n\n\n\nid\nname\nmonth_salary\n\n\n\n1\nAndrew\n1424\n\n\n2\nSusan\n1425\n\n\n3\nJohn\n1156\n\n\n4\nJoe\n1570\n\n\n5\nJack\n1223\n\n\n6\nJacob\n1462\n\n\n7\nMary\n1641\n\n\n8\nKate\n1603\n\n\n\n\n\nShow the codedf_2\n\n\n\n\nid\nname\nage\nposition\n\n\n\n1\nAndrew\n40\nCTO\n\n\n2\nSusan\n38\nCFO\n\n\n3\nJohn\n54\nAdministrative\n\n\n4\nJoe\n66\nTechnician\n\n\n6\nJacob\n38\nTechnician\n\n\n7\nMary\n53\nTechnician\n\n\n8\nKate\n56\nTechnician\n\n\n9\nJacqueline\n55\nTechnician\n\n\n10\nIvy\n43\nTechnician\n\n\n\n\n\n\n\n7.8.1 连接\n\nShow the code# 内连接\nmerge(x = df_1, y = df_2, by = c(\"id\", \"name\")) \n\n\n\n\nid\nname\nmonth_salary\nage\nposition\n\n\n\n1\nAndrew\n1424\n40\nCTO\n\n\n2\nSusan\n1425\n38\nCFO\n\n\n3\nJohn\n1156\n54\nAdministrative\n\n\n4\nJoe\n1570\n66\nTechnician\n\n\n6\nJacob\n1462\n38\nTechnician\n\n\n7\nMary\n1641\n53\nTechnician\n\n\n8\nKate\n1603\n56\nTechnician\n\n\n\n\n\nShow the code\n# 全连接\nmerge(x = df_1, y = df_2, all = TRUE)\n\n\n\n\nid\nname\nmonth_salary\nage\nposition\n\n\n\n1\nAndrew\n1424\n40\nCTO\n\n\n2\nSusan\n1425\n38\nCFO\n\n\n3\nJohn\n1156\n54\nAdministrative\n\n\n4\nJoe\n1570\n66\nTechnician\n\n\n5\nJack\n1223\nNA\nNA\n\n\n6\nJacob\n1462\n38\nTechnician\n\n\n7\nMary\n1641\n53\nTechnician\n\n\n8\nKate\n1603\n56\nTechnician\n\n\n9\nJacqueline\nNA\n55\nTechnician\n\n\n10\nIvy\nNA\n43\nTechnician\n\n\n\n\n\nShow the code\n# 左连接\nmerge(x = df_1, y = df_2, all.x = TRUE)\n\n\n\n\nid\nname\nmonth_salary\nage\nposition\n\n\n\n1\nAndrew\n1424\n40\nCTO\n\n\n2\nSusan\n1425\n38\nCFO\n\n\n3\nJohn\n1156\n54\nAdministrative\n\n\n4\nJoe\n1570\n66\nTechnician\n\n\n5\nJack\n1223\nNA\nNA\n\n\n6\nJacob\n1462\n38\nTechnician\n\n\n7\nMary\n1641\n53\nTechnician\n\n\n8\nKate\n1603\n56\nTechnician\n\n\n\n\n\nShow the code\n# 右连接\nmerge(x = df_1, y = df_2, all.y = TRUE)\n\n\n\n\nid\nname\nmonth_salary\nage\nposition\n\n\n\n1\nAndrew\n1424\n40\nCTO\n\n\n2\nSusan\n1425\n38\nCFO\n\n\n3\nJohn\n1156\n54\nAdministrative\n\n\n4\nJoe\n1570\n66\nTechnician\n\n\n6\nJacob\n1462\n38\nTechnician\n\n\n7\nMary\n1641\n53\nTechnician\n\n\n8\nKate\n1603\n56\nTechnician\n\n\n9\nJacqueline\nNA\n55\nTechnician\n\n\n10\nIvy\nNA\n43\nTechnician\n\n\n\n\n\nShow the code\n# 交叉连接\nMerged &lt;- merge(x = df_1, y = df_2, by = NULL)\nhead(Merged)\n\n\n\n\nid.x\nname.x\nmonth_salary\nid.y\nname.y\nage\nposition\n\n\n\n1\nAndrew\n1424\n1\nAndrew\n40\nCTO\n\n\n2\nSusan\n1425\n1\nAndrew\n40\nCTO\n\n\n3\nJohn\n1156\n1\nAndrew\n40\nCTO\n\n\n4\nJoe\n1570\n1\nAndrew\n40\nCTO\n\n\n5\nJack\n1223\n1\nAndrew\n40\nCTO\n\n\n6\nJacob\n1462\n1\nAndrew\n40\nCTO\n\n\n\n\n\n\n\n7.8.2 按行名合并\n\nShow the codedf1 &lt;- data.frame(var = c(\"one\", \"two\", \"three\", \"four\", \"five\"),\n                  data = c(1, 5, 1, 6, 8))\nrownames(df1) &lt;- c(\"A\", \"B\", \"C\", \"D\", \"E\")\ndf1\n\n\n\n\n\nvar\ndata\n\n\n\nA\none\n1\n\n\nB\ntwo\n5\n\n\nC\nthree\n1\n\n\nD\nfour\n6\n\n\nE\nfive\n8\n\n\n\n\n\nShow the code\ndf2 &lt;- data.frame(var = c(\"three\", \"one\", \"eight\", \"two\", \"nine\"),\n                  data = c(1, 5, 1, 6, 8))\nrownames(df2) &lt;- c(\"E\", \"A\", \"B\", \"D\", \"C\")\ndf2\n\n\n\n\n\nvar\ndata\n\n\n\nE\nthree\n1\n\n\nA\none\n5\n\n\nB\neight\n1\n\n\nD\ntwo\n6\n\n\nC\nnine\n8\n\n\n\n\n\n\n\nShow the codemerge(df1, df2, by = 0, all = TRUE) \n\n\n\n\nRow.names\nvar.x\ndata.x\nvar.y\ndata.y\n\n\n\nA\none\n1\none\n5\n\n\nB\ntwo\n5\neight\n1\n\n\nC\nthree\n1\nnine\n8\n\n\nD\nfour\n6\ntwo\n6\n\n\nE\nfive\n8\nthree\n1\n\n\n\n\n\nShow the codemerge(df1, df2, by = \"row.names\", all = TRUE) # Equivalent\n\n\n\n\nRow.names\nvar.x\ndata.x\nvar.y\ndata.y\n\n\n\nA\none\n1\none\n5\n\n\nB\ntwo\n5\neight\n1\n\n\nC\nthree\n1\nnine\n8\n\n\nD\nfour\n6\ntwo\n6\n\n\nE\nfive\n8\nthree\n1",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>base 函数</span>"
    ]
  },
  {
    "objectID": "base_function.html#asis-i",
    "href": "base_function.html#asis-i",
    "title": "\n7  base 函数\n",
    "section": "\n7.9 AsIs I()\n",
    "text": "7.9 AsIs I()\n\nI()函数来自于stats包，它是as.is函数的别名。I()函数用于改变对象的类别，指示R在进行操作时应该将该对象视为其原始形式，不对它进行任何转换。\n\nShow the code\nsummary(mtcars$mpg) |&gt; as_tibble()\n#&gt; Error in dimnames(x) &lt;- dnx: 'dimnames' applied to non-array\n\nlapply(summary(mtcars$mpg), I) \n#&gt; $Min.\n#&gt; [1] 10.4\n#&gt; \n#&gt; $`1st Qu.`\n#&gt; [1] 15.425\n#&gt; \n#&gt; $Median\n#&gt; [1] 19.2\n#&gt; \n#&gt; $Mean\n#&gt; [1] 20.09062\n#&gt; \n#&gt; $`3rd Qu.`\n#&gt; [1] 22.8\n#&gt; \n#&gt; $Max.\n#&gt; [1] 33.9\nlapply(summary(mtcars$mpg), I) |&gt; as_tibble()\n\n\n\n\nMin.\n1st Qu.\nMedian\nMean\n3rd Qu.\nMax.\n\n\n10.4\n15.425\n19.2\n20.090625\n22.8\n33.9\n\n\n\n\nShow the code\nsapply(summary(mtcars$mpg), I, simplify = F) \n#&gt; $Min.\n#&gt; [1] 10.4\n#&gt; \n#&gt; $`1st Qu.`\n#&gt; [1] 15.425\n#&gt; \n#&gt; $Median\n#&gt; [1] 19.2\n#&gt; \n#&gt; $Mean\n#&gt; [1] 20.09062\n#&gt; \n#&gt; $`3rd Qu.`\n#&gt; [1] 22.8\n#&gt; \n#&gt; $Max.\n#&gt; [1] 33.9\nsapply(summary(mtcars$mpg), I, simplify = F) |&gt; as_tibble()\n\n\n\n\nMin.\n1st Qu.\nMedian\nMean\n3rd Qu.\nMax.\n\n\n10.4\n15.425\n19.2\n20.090625\n22.8\n33.9",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>base 函数</span>"
    ]
  },
  {
    "objectID": "base_function.html#数学函数",
    "href": "base_function.html#数学函数",
    "title": "\n7  base 函数\n",
    "section": "\n7.10 数学函数",
    "text": "7.10 数学函数\n\nShow the codex&lt;-c(25,-4,3.66,3.42,-5.99)\nabs(x)                       #绝对值\n#&gt; [1] 25.00  4.00  3.66  3.42  5.99\nsqrt(x)                      #平方根\n#&gt; [1] 5.000000      NaN 1.913113 1.849324      NaN\nceiling(x)                   #向上取整\n#&gt; [1] 25 -4  4  4 -5\nfloor(x)                     #向下取整\n#&gt; [1] 25 -4  3  3 -6\ntrunc(x)                     #整数部分\n#&gt; [1] 25 -4  3  3 -5\nround(x,digits = 2)          #四舍五入，保留2位小数\n#&gt; [1] 25.00 -4.00  3.66  3.42 -5.99\nsignif(x,digits = 2)         #四舍五入，保留2有效数字\n#&gt; [1] 25.0 -4.0  3.7  3.4 -6.0\nlog(x,base=4)                #对x取以base为底的对数\n#&gt; [1] 2.3219281       NaN 0.9359218 0.8869982       NaN\nlog(x)                          #自然对数\n#&gt; [1] 3.218876      NaN 1.297463 1.229641      NaN\nlog10(x)                        #常用对数\n#&gt; [1] 1.3979400       NaN 0.5634811 0.5340261       NaN\nexp(x)                       #e指数函数\n#&gt; [1] 7.200490e+10 1.831564e-02 3.886134e+01 3.056942e+01 2.503664e-03",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>base 函数</span>"
    ]
  },
  {
    "objectID": "base_function.html#统计函数",
    "href": "base_function.html#统计函数",
    "title": "\n7  base 函数\n",
    "section": "\n7.11 统计函数",
    "text": "7.11 统计函数\n\nShow the codemean(x,trim = 0.05,na.rm = TRUE)     #算术平均值\n#&gt; [1] 4.418\nmedian(x)                            #中位数\n#&gt; [1] 3.42\nsd(x)                                #标准差\n#&gt; [1] 12.29206\nvar(x)                               #方差\n#&gt; [1] 151.0946\nmad(x)                               #绝对中位差\n#&gt; [1] 11.00089\nquantile(x,probs = c(0,0.25,0.5,0.75,1))     #分位数\n#&gt;    0%   25%   50%   75%  100% \n#&gt; -5.99 -4.00  3.42  3.66 25.00\nrange(x)                             # 值域\n#&gt; [1] -5.99 25.00\nscale(x,center = TRUE,scale = TRUE)  #标准化（均值为0、标准差为1）\n#&gt;             [,1]\n#&gt; [1,]  1.67441487\n#&gt; [2,] -0.68483259\n#&gt; [3,] -0.06166585\n#&gt; [4,] -0.08119065\n#&gt; [5,] -0.84672578\n#&gt; attr(,\"scaled:center\")\n#&gt; [1] 4.418\n#&gt; attr(,\"scaled:scale\")\n#&gt; [1] 12.29206\nscale(x,center = TRUE,scale =FALSE)  #中心化：减去均值\n#&gt;         [,1]\n#&gt; [1,]  20.582\n#&gt; [2,]  -8.418\n#&gt; [3,]  -0.758\n#&gt; [4,]  -0.998\n#&gt; [5,] -10.408\n#&gt; attr(,\"scaled:center\")\n#&gt; [1] 4.418\n\n\nx &lt;- c(1,3,5,7,9,11,13)\n# Find the \"previous\" (lag()) or \"next\" (lead()) values in a vector\ndplyr::lag(x,n=2)                      # n阶滞后\n#&gt; [1] NA NA  1  3  5  7  9\ndplyr::lead(x,n=2)                     # n阶前移\n#&gt; [1]  5  7  9 11 13 NA NA\n\n# 滞后差分  lag阶滞后  difference阶差分\ndiff(x,lag = 1,difference=1)     # 隔0个值后位减前位，进行1次\n#&gt; [1] 2 2 2 2 2 2\ndiff(x,lag = 1,difference=2)     ## 隔0个值后位减前位，进行2次\n#&gt; [1] 0 0 0 0 0\ndiff(x,lag = 1,difference=3)     # 隔0个值后位减前位，进行3次\n#&gt; [1] 0 0 0 0\n\ndiff(x,lag = 2,difference=1)  # 隔1个值后位减前位，进行1次\n#&gt; [1] 4 4 4 4 4\ndiff(x,lag = 2,difference=2) ## 隔1个值后位减前位，进行2次\n#&gt; [1] 0 0 0",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>base 函数</span>"
    ]
  },
  {
    "objectID": "base_function.html#字符串函数",
    "href": "base_function.html#字符串函数",
    "title": "\n7  base 函数\n",
    "section": "\n7.12 字符串函数",
    "text": "7.12 字符串函数\n\nShow the code\n# 匹配\ndata &lt;- data.frame(\n  name = c(\"Alice\", \"Bob\", \"Carol\", \"Dave\", \"Eve\"),\n  description = c(\"Software developer\", \"Data analyst\", \"UX designer\", \"Project manager\", \"Data scientist\")\n)\ndata\n\n\n\n\nname\ndescription\n\n\n\nAlice\nSoftware developer\n\n\nBob\nData analyst\n\n\nCarol\nUX designer\n\n\nDave\nProject manager\n\n\nEve\nData scientist\n\n\n\n\n\nShow the code\ndata$has_data_analyst &lt;- str_detect(data$description, \"Data analyst\")\nprint(data)\n#&gt;    name        description has_data_analyst\n#&gt; 1 Alice Software developer            FALSE\n#&gt; 2   Bob       Data analyst             TRUE\n#&gt; 3 Carol        UX designer            FALSE\n#&gt; 4  Dave    Project manager            FALSE\n#&gt; 5   Eve     Data scientist            FALSE\n\ndata$has_data_grepl &lt;- grepl(\"Data\", data$description)\nprint(data)\n#&gt;    name        description has_data_analyst has_data_grepl\n#&gt; 1 Alice Software developer            FALSE          FALSE\n#&gt; 2   Bob       Data analyst             TRUE           TRUE\n#&gt; 3 Carol        UX designer            FALSE          FALSE\n#&gt; 4  Dave    Project manager            FALSE          FALSE\n#&gt; 5   Eve     Data scientist            FALSE           TRUE\n\n\n\nShow the code#子串\nsubstr(x=\"qwertyyuio\",start = 2,stop=4)   \n#&gt; [1] \"wer\"\nstr_sub(string = \"qwertyyuio\",start = 2,end = 4)\n#&gt; [1] \"wer\"\n#查找替换\nsub(pattern = \" \",replacement = \".\",\n    x=\"hello world hello !\",ignore.case = FALSE,fixed = FALSE)  \n#&gt; [1] \"hello.world hello !\"\n\nstr_replace_all(\"hello world hello !\",\" \",replacement = \".\")\n#&gt; [1] \"hello.world.hello.!\"\n# 查找,返回下标\ngrep(pattern = \"v\",x=c(\"a\",\"v\",\"D\",\"A\",\"f\",\"J\"),ignore.case = FALSE,fixed = FALSE)   \n#&gt; [1] 2\n\n # 分隔，\\\\转义字符\nstrsplit(x=\"a.fa.fag\",split = \"\\\\.\",fixed = FALSE) \n#&gt; [[1]]\n#&gt; [1] \"a\"   \"fa\"  \"fag\"\n\n\n#连接\npaste(\"x\",c(\"a\",\"b\"),sep=\"\",collapse = \"?\")  \n#&gt; [1] \"xa?xb\"\npaste0(\"x\",c(\"A\",\"B\"),collapse=\"?\")\n#&gt; [1] \"xA?xB\"\n\ncat(\"hello\",\"BOb\",\"\\b\\n\",\"\\bIsn\\' R\",\"\\t\",\"GREAT?\\n\",sep = \" \" )\n#&gt; hello BOb \n#&gt;  Isn' R      GREAT?\n\n#\ntoupper(\"abc\")              #大写转换\n#&gt; [1] \"ABC\"\ntolower(\"aaAGEErg\")         #小写转换\n#&gt; [1] \"aaageerg\"",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>base 函数</span>"
    ]
  },
  {
    "objectID": "base_function.html#打印函数-sprintf",
    "href": "base_function.html#打印函数-sprintf",
    "title": "\n7  base 函数\n",
    "section": "\n7.13 打印函数 sprintf()\n",
    "text": "7.13 打印函数 sprintf()\n\n\nShow the codea &lt;- \"string\"\nsprintf(\"This is where a %s goes.\", a)\n#&gt; [1] \"This is where a string goes.\"\n\nx &lt;- 8\nsprintf(\"Regular:%04d\", x)\n#&gt; [1] \"Regular:0008\"\n\nsprintf(\"%f\", pi)         # \"3.141593\"\n#&gt; [1] \"3.141593\"\nsprintf(\"%.3f\", pi)       # \"3.142\"\n#&gt; [1] \"3.142\"\nsprintf(\"%1.0f\", pi)      # \"3\"\n#&gt; [1] \"3\"\nsprintf(\"%5.1f\", pi)      # \"  3.1\"\n#&gt; [1] \"  3.1\"\nsprintf(\"%05.1f\", pi)     # \"003.1\"\n#&gt; [1] \"003.1\"\nsprintf(\"%+f\", pi)        # \"+3.141593\"\n#&gt; [1] \"+3.141593\"\nsprintf(\"% f\", pi)        # \" 3.141593\"\n#&gt; [1] \" 3.141593\"\nsprintf(\"%-10f\", pi)      # \"3.141593  \"   (left justified)\n#&gt; [1] \"3.141593  \"\nsprintf(\"%e\", pi)         #\"3.141593e+00\"\n#&gt; [1] \"3.141593e+00\"\nsprintf(\"%E\", pi)         # \"3.141593E+00\"\n#&gt; [1] \"3.141593E+00\"\nsprintf(\"%g\", pi)         # \"3.14159\"\n#&gt; [1] \"3.14159\"\nsprintf(\"%g\",   1e6 * pi) # \"3.14159e+06\"  (exponential)\n#&gt; [1] \"3.14159e+06\"\nsprintf(\"%.9g\", 1e6 * pi) # \"3141592.65\"   (\"fixed\")\n#&gt; [1] \"3141592.65\"\nsprintf(\"%G\", 1e-6 * pi)  # \"3.14159E-06\"\n#&gt; [1] \"3.14159E-06\"\n\n\nx &lt;- \"string\"\nsprintf(\"Substitute in multiple strings: %s %s\", x, \"string2\")\n#&gt; [1] \"Substitute in multiple strings: string string2\"\n\nsprintf(\"A single percent sign here： %%\")\n#&gt; [1] \"A single percent sign here： %\"",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>base 函数</span>"
    ]
  },
  {
    "objectID": "base_function.html#apply函数簇",
    "href": "base_function.html#apply函数簇",
    "title": "\n7  base 函数\n",
    "section": "\n7.14 apply函数簇",
    "text": "7.14 apply函数簇\n\n7.14.1 apply()\n\n\nShow the codeapply(X = mtcars, MARGIN = 2, FUN = mean)\n#&gt;        mpg        cyl       disp         hp       drat         wt       qsec \n#&gt;  20.090625   6.187500 230.721875 146.687500   3.596563   3.217250  17.848750 \n#&gt;         vs         am       gear       carb \n#&gt;   0.437500   0.406250   3.687500   2.812500\n\n\n\n7.14.2 aggregate()\n\n\nShow the codeaggregate(x = mtcars,\n          by = list(am=mtcars$am,cyl=mtcars$cyl),\n          FUN = mean)  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nam\ncyl\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n0\n4\n22.90000\n4\n135.8667\n84.66667\n3.770000\n2.935000\n20.97000\n1.000\n0\n3.666667\n1.666667\n\n\n1\n4\n28.07500\n4\n93.6125\n81.87500\n4.183750\n2.042250\n18.45000\n0.875\n1\n4.250000\n1.500000\n\n\n0\n6\n19.12500\n6\n204.5500\n115.25000\n3.420000\n3.388750\n19.21500\n1.000\n0\n3.500000\n2.500000\n\n\n1\n6\n20.56667\n6\n155.0000\n131.66667\n3.806667\n2.755000\n16.32667\n0.000\n1\n4.333333\n4.666667\n\n\n0\n8\n15.05000\n8\n357.6167\n194.16667\n3.120833\n4.104083\n17.14250\n0.000\n0\n3.000000\n3.083333\n\n\n1\n8\n15.40000\n8\n326.0000\n299.50000\n3.880000\n3.370000\n14.55000\n0.000\n1\n5.000000\n6.000000\n\n\n\n\n\nShow the codeaggregate(.~am+cyl,\n          data = mtcars,\n          FUN = mean)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nam\ncyl\nmpg\ndisp\nhp\ndrat\nwt\nqsec\nvs\ngear\ncarb\n\n\n\n0\n4\n22.90000\n135.8667\n84.66667\n3.770000\n2.935000\n20.97000\n1.000\n3.666667\n1.666667\n\n\n1\n4\n28.07500\n93.6125\n81.87500\n4.183750\n2.042250\n18.45000\n0.875\n4.250000\n1.500000\n\n\n0\n6\n19.12500\n204.5500\n115.25000\n3.420000\n3.388750\n19.21500\n1.000\n3.500000\n2.500000\n\n\n1\n6\n20.56667\n155.0000\n131.66667\n3.806667\n2.755000\n16.32667\n0.000\n4.333333\n4.666667\n\n\n0\n8\n15.05000\n357.6167\n194.16667\n3.120833\n4.104083\n17.14250\n0.000\n3.000000\n3.083333\n\n\n1\n8\n15.40000\n326.0000\n299.50000\n3.880000\n3.370000\n14.55000\n0.000\n5.000000\n6.000000\n\n\n\n\n\nShow the codeaggregate(mpg~am+cyl,\n          data = mtcars,\n          FUN = summary)\n\n\n\n\nam\ncyl\nmpg\n\n\n\n0\n4\n21.50000\n\n\n1\n4\n21.40000\n\n\n0\n6\n17.80000\n\n\n1\n6\n19.70000\n\n\n0\n8\n10.40000\n\n\n1\n8\n15.00000\n\n\n\n\n\n\n\n7.14.3 by(), tapply()\n\nby()是应用于数据框的tapply的面向对象包装器。\n\nShow the codeby(data = mtcars[,1:3],\n   INDICES = list(cyl=mtcars$cyl),\n   FUN = summary)\n#&gt; cyl: 4\n#&gt;       mpg             cyl         disp       \n#&gt;  Min.   :21.40   Min.   :4   Min.   : 71.10  \n#&gt;  1st Qu.:22.80   1st Qu.:4   1st Qu.: 78.85  \n#&gt;  Median :26.00   Median :4   Median :108.00  \n#&gt;  Mean   :26.66   Mean   :4   Mean   :105.14  \n#&gt;  3rd Qu.:30.40   3rd Qu.:4   3rd Qu.:120.65  \n#&gt;  Max.   :33.90   Max.   :4   Max.   :146.70  \n#&gt; ------------------------------------------------------------ \n#&gt; cyl: 6\n#&gt;       mpg             cyl         disp      \n#&gt;  Min.   :17.80   Min.   :6   Min.   :145.0  \n#&gt;  1st Qu.:18.65   1st Qu.:6   1st Qu.:160.0  \n#&gt;  Median :19.70   Median :6   Median :167.6  \n#&gt;  Mean   :19.74   Mean   :6   Mean   :183.3  \n#&gt;  3rd Qu.:21.00   3rd Qu.:6   3rd Qu.:196.3  \n#&gt;  Max.   :21.40   Max.   :6   Max.   :258.0  \n#&gt; ------------------------------------------------------------ \n#&gt; cyl: 8\n#&gt;       mpg             cyl         disp      \n#&gt;  Min.   :10.40   Min.   :8   Min.   :275.8  \n#&gt;  1st Qu.:14.40   1st Qu.:8   1st Qu.:301.8  \n#&gt;  Median :15.20   Median :8   Median :350.5  \n#&gt;  Mean   :15.10   Mean   :8   Mean   :353.1  \n#&gt;  3rd Qu.:16.25   3rd Qu.:8   3rd Qu.:390.0  \n#&gt;  Max.   :19.20   Max.   :8   Max.   :472.0\n\nby(data = mtcars[,1:3],\n   INDICES = factor(mtcars$cyl),\n   FUN = function(x) lm( disp ~ mpg, data = x))\n#&gt; factor(mtcars$cyl): 4\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = disp ~ mpg, data = x)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)          mpg  \n#&gt;     233.067       -4.798  \n#&gt; \n#&gt; ------------------------------------------------------------ \n#&gt; factor(mtcars$cyl): 6\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = disp ~ mpg, data = x)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)          mpg  \n#&gt;     125.122        2.947  \n#&gt; \n#&gt; ------------------------------------------------------------ \n#&gt; factor(mtcars$cyl): 8\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = disp ~ mpg, data = x)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)          mpg  \n#&gt;      560.87       -13.76\n\ntapply(X = mtcars[,1:3],\n       INDEX = list(cyl=mtcars$cyl),\n       FUN = summary)\n#&gt; $`4`\n#&gt;       mpg             cyl         disp       \n#&gt;  Min.   :21.40   Min.   :4   Min.   : 71.10  \n#&gt;  1st Qu.:22.80   1st Qu.:4   1st Qu.: 78.85  \n#&gt;  Median :26.00   Median :4   Median :108.00  \n#&gt;  Mean   :26.66   Mean   :4   Mean   :105.14  \n#&gt;  3rd Qu.:30.40   3rd Qu.:4   3rd Qu.:120.65  \n#&gt;  Max.   :33.90   Max.   :4   Max.   :146.70  \n#&gt; \n#&gt; $`6`\n#&gt;       mpg             cyl         disp      \n#&gt;  Min.   :17.80   Min.   :6   Min.   :145.0  \n#&gt;  1st Qu.:18.65   1st Qu.:6   1st Qu.:160.0  \n#&gt;  Median :19.70   Median :6   Median :167.6  \n#&gt;  Mean   :19.74   Mean   :6   Mean   :183.3  \n#&gt;  3rd Qu.:21.00   3rd Qu.:6   3rd Qu.:196.3  \n#&gt;  Max.   :21.40   Max.   :6   Max.   :258.0  \n#&gt; \n#&gt; $`8`\n#&gt;       mpg             cyl         disp      \n#&gt;  Min.   :10.40   Min.   :8   Min.   :275.8  \n#&gt;  1st Qu.:14.40   1st Qu.:8   1st Qu.:301.8  \n#&gt;  Median :15.20   Median :8   Median :350.5  \n#&gt;  Mean   :15.10   Mean   :8   Mean   :353.1  \n#&gt;  3rd Qu.:16.25   3rd Qu.:8   3rd Qu.:390.0  \n#&gt;  Max.   :19.20   Max.   :8   Max.   :472.0\n\n\n\n7.14.4 lapply(), sapply()\n\nlapply() returns a list of the same length as X,\nsapply() is a user-friendly version and wrapper of lapply() by default returning a vector or matrix\n\nShow the codex &lt;- list(a = 1:10, beta = exp(-3:3), logic = c(TRUE,FALSE,FALSE,TRUE))\nlapply(X = x,FUN = quantile)\n#&gt; $a\n#&gt;    0%   25%   50%   75%  100% \n#&gt;  1.00  3.25  5.50  7.75 10.00 \n#&gt; \n#&gt; $beta\n#&gt;          0%         25%         50%         75%        100% \n#&gt;  0.04978707  0.25160736  1.00000000  5.05366896 20.08553692 \n#&gt; \n#&gt; $logic\n#&gt;   0%  25%  50%  75% 100% \n#&gt;  0.0  0.0  0.5  1.0  1.0\n\nsapply(x, quantile)\n#&gt;          a        beta logic\n#&gt; 0%    1.00  0.04978707   0.0\n#&gt; 25%   3.25  0.25160736   0.0\n#&gt; 50%   5.50  1.00000000   0.5\n#&gt; 75%   7.75  5.05366896   1.0\n#&gt; 100% 10.00 20.08553692   1.0\n\n\n\n7.14.5 vapply\n\n\nShow the codeby_cyl &lt;- split(mtcars, mtcars$cyl)\nmodels &lt;- lapply(by_cyl, function(data) lm(mpg ~ wt, data = data))\nmodels\n#&gt; $`4`\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = mpg ~ wt, data = data)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)           wt  \n#&gt;      39.571       -5.647  \n#&gt; \n#&gt; \n#&gt; $`6`\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = mpg ~ wt, data = data)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)           wt  \n#&gt;       28.41        -2.78  \n#&gt; \n#&gt; \n#&gt; $`8`\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = mpg ~ wt, data = data)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)           wt  \n#&gt;      23.868       -2.192\nvapply(models, function(x) coef(x)[[2]], double(1))\n#&gt;         4         6         8 \n#&gt; -5.647025 -2.780106 -2.192438",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>base 函数</span>"
    ]
  },
  {
    "objectID": "base_function.html#矩阵运算",
    "href": "base_function.html#矩阵运算",
    "title": "\n7  base 函数\n",
    "section": "\n7.15 矩阵运算",
    "text": "7.15 矩阵运算\n\nShow the codeX &lt;- matrix(data = 1:9,ncol = 3,nrow = 3)\nX\n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]    1    4    7\n#&gt; [2,]    2    5    8\n#&gt; [3,]    3    6    9\n\ndiag(X)\n#&gt; [1] 1 5 9\ndet(X)\n#&gt; [1] 0\neigen(X)\n#&gt; eigen() decomposition\n#&gt; $values\n#&gt; [1]  1.611684e+01 -1.116844e+00 -5.700691e-16\n#&gt; \n#&gt; $vectors\n#&gt;            [,1]       [,2]       [,3]\n#&gt; [1,] -0.4645473 -0.8829060  0.4082483\n#&gt; [2,] -0.5707955 -0.2395204 -0.8164966\n#&gt; [3,] -0.6770438  0.4038651  0.4082483\n\nX\n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]    1    4    7\n#&gt; [2,]    2    5    8\n#&gt; [3,]    3    6    9\n# 协方差矩阵\ncov(X)\n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]    1    1    1\n#&gt; [2,]    1    1    1\n#&gt; [3,]    1    1    1\n\n# 相关系数矩阵\ncor(X)\n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]    1    1    1\n#&gt; [2,]    1    1    1\n#&gt; [3,]    1    1    1",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>base 函数</span>"
    ]
  },
  {
    "objectID": "base_function.html#统计分布函数",
    "href": "base_function.html#统计分布函数",
    "title": "\n7  base 函数\n",
    "section": "\n7.16 统计分布函数",
    "text": "7.16 统计分布函数\n形如[dpqr]distribution_abbreviation，其中密度函数d，分布函数p，分位数函数q，随机数生成函数r\n\nShow the code### 正态分布\ndnorm(3,0,2)  #N(0,4)在 3 处的密度值\n#&gt; [1] 0.0647588\npnorm(1:3,0,2)#N(0,4)在1，2，3处的分布概率值\n#&gt; [1] 0.6914625 0.8413447 0.9331928\nqnorm(1-0.025,0,1)# N(0,1)的上0.025分位数\n#&gt; [1] 1.959964\nrnorm(5,3,3)  # 生成5个服从N(3,9)的随机数\n#&gt; [1] 3.401818 2.115231 1.348325 5.882787 3.584287\n\n\n### 二项分布\n1-sum(dbinom(0:1,400,0.02))# 命中率为0.02，独立射击400次，至少击中2次的概率\n#&gt; [1] 0.9971655\nggplot()\n\n\n\n\n\n\nShow the code\n\n\n### 多元正态分布\nmean&lt;-c(230.7,146.7,3.6)\nsigma&lt;-matrix(c(15360.8,6721.2,-47.1,\n                6721.2,4700.9,-16.5,\n                -47.1,16.5,0.3),nrow = 3,ncol = 3)\nlibrary(MASS)\nmulti &lt;- mvrnorm(500,mean,sigma)\nhead(multi)\n#&gt;          [,1]     [,2]     [,3]\n#&gt; [1,] 365.6210 131.9249 3.193131\n#&gt; [2,] 277.0565 215.3377 3.732176\n#&gt; [3,] 188.6413  64.2639 4.161602\n#&gt; [4,] 180.2383 113.7082 3.760537\n#&gt; [5,] 327.8288 211.1226 3.160674\n#&gt; [6,] 383.8595 220.1269 2.838524",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>base 函数</span>"
    ]
  },
  {
    "objectID": "read_write.html",
    "href": "read_write.html",
    "title": "\n8  读写\n",
    "section": "",
    "text": "8.1 Read",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>读写</span>"
    ]
  },
  {
    "objectID": "read_write.html#read",
    "href": "read_write.html#read",
    "title": "\n8  读写\n",
    "section": "",
    "text": "8.1.1 文本文件\n常用的分隔符如逗号, ，制表符\\t，分号;，空格space，…… 等。\n\n8.1.1.1 utils::\n\nutilities,a piece of computer software that performs a particular task\nread.table() read.csv() read.csv2\n\nShow the code# 列名(第1行),行标识符 (第1列)\nread.table(\"data/read_write/leadership.txt\",header = TRUE,sep=\",\",row.names = 1)\n\n\n\n\n\ndate\ncountry\ngender\nage\nq1\nq2\nq3\nq4\nq5\n\n\n\nBob\n10/24/14\nUS\nM\n29\n5\n4\n5\n5\n5\n\n\nMary\n10/28/14\nUS\nF\n44\n3\n5\n2\n5\n5\n\n\nLily\n10/01/14\nUK\nF\n45\n3\n5\n5\n5\n2\n\n\nJuly\n10/12/14\nUK\nM\n68\n3\n3\n4\nNA\nNA\n\n\nFrank\n05/01/14\nUK\nF\n99\n2\n2\n1\n2\n1\n\n\n\n\n\n\n\n8.1.1.2 readr::\n\nread_csv() read_tsv() read_delim()\n\nShow the codereadr::read_csv(\"data/read_write/leadership.txt\",\n                col_names = TRUE,\n                id = \"file_path\") |&gt;\n    column_to_rownames(var = \"id\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfile_path\ndate\ncountry\ngender\nage\nq1\nq2\nq3\nq4\nq5\n\n\n\nBob\ndata/read_write/leadership.txt\n10/24/14\nUS\nM\n29\n5\n4\n5\n5\n5\n\n\nMary\ndata/read_write/leadership.txt\n10/28/14\nUS\nF\n44\n3\n5\n2\n5\n5\n\n\nLily\ndata/read_write/leadership.txt\n10/01/14\nUK\nF\n45\n3\n5\n5\n5\n2\n\n\nJuly\ndata/read_write/leadership.txt\n10/12/14\nUK\nM\n68\n3\n3\n4\nNA\nNA\n\n\nFrank\ndata/read_write/leadership.txt\n05/01/14\nUK\nF\n99\n2\n2\n1\n2\n1\n\n\n\n\n\n\n\n8.1.1.3 批量读取csv - 相同格式\n\nShow the codesales_files &lt;- c(\"data/read_write//01-sales.csv\",\n                     \"data/read_write//02-sales.csv\",\n                 \"data/read_write//03-sales.csv\")\nread_csv(sales_files, id = \"file_path\")\n\n\n\n\nfile_path\nmonth\nyear\nbrand\nitem\nn\n\n\n\ndata/read_write//01-sales.csv\nJanuary\n2019\n1\n1234\n3\n\n\ndata/read_write//01-sales.csv\nJanuary\n2019\n1\n8721\n9\n\n\ndata/read_write//01-sales.csv\nJanuary\n2019\n1\n1822\n2\n\n\ndata/read_write//01-sales.csv\nJanuary\n2019\n2\n3333\n1\n\n\ndata/read_write//01-sales.csv\nJanuary\n2019\n2\n2156\n9\n\n\ndata/read_write//01-sales.csv\nJanuary\n2019\n2\n3987\n6\n\n\ndata/read_write//01-sales.csv\nJanuary\n2019\n2\n3827\n6\n\n\ndata/read_write//02-sales.csv\nFebruary\n2019\n1\n1234\n8\n\n\ndata/read_write//02-sales.csv\nFebruary\n2019\n1\n8721\n2\n\n\ndata/read_write//02-sales.csv\nFebruary\n2019\n1\n1822\n3\n\n\ndata/read_write//02-sales.csv\nFebruary\n2019\n2\n3333\n1\n\n\ndata/read_write//02-sales.csv\nFebruary\n2019\n2\n2156\n3\n\n\ndata/read_write//02-sales.csv\nFebruary\n2019\n2\n3987\n6\n\n\ndata/read_write//03-sales.csv\nMarch\n2019\n1\n1234\n3\n\n\ndata/read_write//03-sales.csv\nMarch\n2019\n1\n3627\n1\n\n\ndata/read_write//03-sales.csv\nMarch\n2019\n1\n8820\n3\n\n\ndata/read_write//03-sales.csv\nMarch\n2019\n2\n7253\n1\n\n\ndata/read_write//03-sales.csv\nMarch\n2019\n2\n8766\n3\n\n\ndata/read_write//03-sales.csv\nMarch\n2019\n2\n8288\n6\n\n\n\n\n\n\n\n8.1.2 Excel\n\n8.1.2.1 批量读取 sheet\n\nShow the codelibrary(readxl)\nfilename &lt;- \"data/read_write/multi-sheet-iris_data.xlsx\"\n\nexcel_sheets(filename)\n#&gt; [1] \"iris\"       \"setosa\"     \"versicolor\" \"virginica\"\n\nexcel_sheets(filename) %&gt;% \n    map(~read_excel(filename, sheet = .x)) %&gt;% \n    set_names(excel_sheets(filename)) %&gt;% map(head)\n#&gt; $iris\n#&gt; # A tibble: 6 × 6\n#&gt;   id    Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n#&gt;   &lt;chr&gt;        &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt;  \n#&gt; 1 1              5.1         3.5          1.4         0.2 setosa \n#&gt; 2 2              4.9         3            1.4         0.2 setosa \n#&gt; 3 3              4.7         3.2          1.3         0.2 setosa \n#&gt; 4 4              4.6         3.1          1.5         0.2 setosa \n#&gt; 5 5              5           3.6          1.4         0.2 setosa \n#&gt; 6 6              5.4         3.9          1.7         0.4 setosa \n#&gt; \n#&gt; $setosa\n#&gt; # A tibble: 6 × 6\n#&gt;   id    Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n#&gt;   &lt;chr&gt;        &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt;  \n#&gt; 1 1              5.1         3.5          1.4         0.2 setosa \n#&gt; 2 2              4.9         3            1.4         0.2 setosa \n#&gt; 3 3              4.7         3.2          1.3         0.2 setosa \n#&gt; 4 4              4.6         3.1          1.5         0.2 setosa \n#&gt; 5 5              5           3.6          1.4         0.2 setosa \n#&gt; 6 6              5.4         3.9          1.7         0.4 setosa \n#&gt; \n#&gt; $versicolor\n#&gt; # A tibble: 6 × 6\n#&gt;   id    Sepal.Length Sepal.Width Petal.Length Petal.Width Species   \n#&gt;   &lt;chr&gt;        &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt;     \n#&gt; 1 51             7           3.2          4.7         1.4 versicolor\n#&gt; 2 52             6.4         3.2          4.5         1.5 versicolor\n#&gt; 3 53             6.9         3.1          4.9         1.5 versicolor\n#&gt; 4 54             5.5         2.3          4           1.3 versicolor\n#&gt; 5 55             6.5         2.8          4.6         1.5 versicolor\n#&gt; 6 56             5.7         2.8          4.5         1.3 versicolor\n#&gt; \n#&gt; $virginica\n#&gt; # A tibble: 6 × 6\n#&gt;   id    Sepal.Length Sepal.Width Petal.Length Petal.Width Species  \n#&gt;   &lt;chr&gt;        &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt;    \n#&gt; 1 101            6.3         3.3          6           2.5 virginica\n#&gt; 2 102            5.8         2.7          5.1         1.9 virginica\n#&gt; 3 103            7.1         3            5.9         2.1 virginica\n#&gt; 4 104            6.3         2.9          5.6         1.8 virginica\n#&gt; 5 105            6.5         3            5.8         2.2 virginica\n#&gt; 6 106            7.6         3            6.6         2.1 virginica\n\n\n\nShow the coderead_excel_sheets &lt;- function(filename, single_tbl = FALSE) {\n  sheets &lt;- readxl::excel_sheets(filename)\n  \n  if (single_tbl){ #指示函数应返回单个表还是表的列表的逻辑值\n    x &lt;- purrr::map_df(sheets, readxl::read_excel, path = filename)\n  } else {\n    x &lt;- purrr::map(sheets, ~ readxl::read_excel(filename, sheet = .x))\n    purrr::set_names(x, sheets)\n  }\n  \n  x\n}\n\n\nread_excel_sheets(filename, F) %&gt;% map(head)\n#&gt; [[1]]\n#&gt; # A tibble: 6 × 6\n#&gt;   id    Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n#&gt;   &lt;chr&gt;        &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt;  \n#&gt; 1 1              5.1         3.5          1.4         0.2 setosa \n#&gt; 2 2              4.9         3            1.4         0.2 setosa \n#&gt; 3 3              4.7         3.2          1.3         0.2 setosa \n#&gt; 4 4              4.6         3.1          1.5         0.2 setosa \n#&gt; 5 5              5           3.6          1.4         0.2 setosa \n#&gt; 6 6              5.4         3.9          1.7         0.4 setosa \n#&gt; \n#&gt; [[2]]\n#&gt; # A tibble: 6 × 6\n#&gt;   id    Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n#&gt;   &lt;chr&gt;        &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt;  \n#&gt; 1 1              5.1         3.5          1.4         0.2 setosa \n#&gt; 2 2              4.9         3            1.4         0.2 setosa \n#&gt; 3 3              4.7         3.2          1.3         0.2 setosa \n#&gt; 4 4              4.6         3.1          1.5         0.2 setosa \n#&gt; 5 5              5           3.6          1.4         0.2 setosa \n#&gt; 6 6              5.4         3.9          1.7         0.4 setosa \n#&gt; \n#&gt; [[3]]\n#&gt; # A tibble: 6 × 6\n#&gt;   id    Sepal.Length Sepal.Width Petal.Length Petal.Width Species   \n#&gt;   &lt;chr&gt;        &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt;     \n#&gt; 1 51             7           3.2          4.7         1.4 versicolor\n#&gt; 2 52             6.4         3.2          4.5         1.5 versicolor\n#&gt; 3 53             6.9         3.1          4.9         1.5 versicolor\n#&gt; 4 54             5.5         2.3          4           1.3 versicolor\n#&gt; 5 55             6.5         2.8          4.6         1.5 versicolor\n#&gt; 6 56             5.7         2.8          4.5         1.3 versicolor\n#&gt; \n#&gt; [[4]]\n#&gt; # A tibble: 6 × 6\n#&gt;   id    Sepal.Length Sepal.Width Petal.Length Petal.Width Species  \n#&gt;   &lt;chr&gt;        &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt;    \n#&gt; 1 101            6.3         3.3          6           2.5 virginica\n#&gt; 2 102            5.8         2.7          5.1         1.9 virginica\n#&gt; 3 103            7.1         3            5.9         2.1 virginica\n#&gt; 4 104            6.3         2.9          5.6         1.8 virginica\n#&gt; 5 105            6.5         3            5.8         2.2 virginica\n#&gt; 6 106            7.6         3            6.6         2.1 virginica\n\nread_excel_sheets(filename, T) %&gt;% head()\n\n\n\n\nid\nSepal.Length\nSepal.Width\nPetal.Length\nPetal.Width\nSpecies\n\n\n\n1\n5.1\n3.5\n1.4\n0.2\nsetosa\n\n\n2\n4.9\n3.0\n1.4\n0.2\nsetosa\n\n\n3\n4.7\n3.2\n1.3\n0.2\nsetosa\n\n\n4\n4.6\n3.1\n1.5\n0.2\nsetosa\n\n\n5\n5.0\n3.6\n1.4\n0.2\nsetosa\n\n\n6\n5.4\n3.9\n1.7\n0.4\nsetosa\n\n\n\n\n\n\n\n8.1.2.2 批量读取多个Excel\n\nShow the code\nexcel_file_paths &lt;- list.files(path = \".\",pattern = \".xlsx\",recursive = T)\n\nexcel_file_paths\n#&gt; [1] \"data/deaths.xlsx\"                          \n#&gt; [2] \"data/deathsA5_F15.xlsx\"                    \n#&gt; [3] \"data/penguins.xlsx\"                        \n#&gt; [4] \"data/read_write/multi-sheet-iris_data.xlsx\"\n#&gt; [5] \"data/read_write/多个sheet-iris_data.xlsx\"  \n#&gt; [6] \"data/students.xlsx\"\n\n\nmap(excel_file_paths, read_excel) %&gt;% map(head)\n#&gt; [[1]]\n#&gt; # A tibble: 6 × 6\n#&gt;   `Lots of people`             ...2       ...3  ...4     ...5          ...6     \n#&gt;   &lt;chr&gt;                        &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt;         &lt;chr&gt;    \n#&gt; 1 simply cannot resist writing &lt;NA&gt;       &lt;NA&gt;  &lt;NA&gt;     &lt;NA&gt;          some not…\n#&gt; 2 at                           the        top   &lt;NA&gt;     of            their sp…\n#&gt; 3 or                           merging    &lt;NA&gt;  &lt;NA&gt;     &lt;NA&gt;          cells    \n#&gt; 4 Name                         Profession Age   Has kids Date of birth Date of …\n#&gt; 5 David Bowie                  musician   69    TRUE     17175         42379    \n#&gt; 6 Carrie Fisher                actor      60    TRUE     20749         42731    \n#&gt; \n#&gt; [[2]]\n#&gt; # A tibble: 6 × 6\n#&gt;   `Lots of people`             ...2       ...3  ...4     ...5          ...6     \n#&gt;   &lt;chr&gt;                        &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt;         &lt;chr&gt;    \n#&gt; 1 simply cannot resist writing &lt;NA&gt;       &lt;NA&gt;  &lt;NA&gt;     &lt;NA&gt;          some not…\n#&gt; 2 at                           the        top   &lt;NA&gt;     of            their sp…\n#&gt; 3 or                           merging    &lt;NA&gt;  &lt;NA&gt;     &lt;NA&gt;          cells    \n#&gt; 4 Name                         Profession Age   Has kids Date of birth Date of …\n#&gt; 5 David Bowie                  musician   69    TRUE     17175         42379    \n#&gt; 6 Carrie Fisher                actor      60    TRUE     20749         42731    \n#&gt; \n#&gt; [[3]]\n#&gt; # A tibble: 6 × 8\n#&gt;   species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n#&gt;   &lt;chr&gt;   &lt;chr&gt;           &lt;dbl&gt;         &lt;dbl&gt;             &lt;dbl&gt;       &lt;dbl&gt;\n#&gt; 1 Adelie  Biscoe           37.8          18.3               174        3400\n#&gt; 2 Adelie  Biscoe           37.7          18.7               180        3600\n#&gt; 3 Adelie  Biscoe           35.9          19.2               189        3800\n#&gt; 4 Adelie  Biscoe           38.2          18.1               185        3950\n#&gt; 5 Adelie  Biscoe           38.8          17.2               180        3800\n#&gt; 6 Adelie  Biscoe           35.3          18.9               187        3800\n#&gt; # ℹ 2 more variables: sex &lt;chr&gt;, year &lt;dbl&gt;\n#&gt; \n#&gt; [[4]]\n#&gt; # A tibble: 6 × 6\n#&gt;   id    Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n#&gt;   &lt;chr&gt;        &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt;  \n#&gt; 1 1              5.1         3.5          1.4         0.2 setosa \n#&gt; 2 2              4.9         3            1.4         0.2 setosa \n#&gt; 3 3              4.7         3.2          1.3         0.2 setosa \n#&gt; 4 4              4.6         3.1          1.5         0.2 setosa \n#&gt; 5 5              5           3.6          1.4         0.2 setosa \n#&gt; 6 6              5.4         3.9          1.7         0.4 setosa \n#&gt; \n#&gt; [[5]]\n#&gt; # A tibble: 6 × 6\n#&gt;   id    Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n#&gt;   &lt;chr&gt;        &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt;  \n#&gt; 1 1              5.1         3.5          1.4         0.2 setosa \n#&gt; 2 2              4.9         3            1.4         0.2 setosa \n#&gt; 3 3              4.7         3.2          1.3         0.2 setosa \n#&gt; 4 4              4.6         3.1          1.5         0.2 setosa \n#&gt; 5 5              5           3.6          1.4         0.2 setosa \n#&gt; 6 6              5.4         3.9          1.7         0.4 setosa \n#&gt; \n#&gt; [[6]]\n#&gt; # A tibble: 6 × 5\n#&gt;   `Student ID` `Full Name`      favourite.food     mealPlan            AGE  \n#&gt;          &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;chr&gt;\n#&gt; 1            1 Sunil Huffmann   Strawberry yoghurt Lunch only          4    \n#&gt; 2            2 Barclay Lynn     French fries       Lunch only          5    \n#&gt; 3            3 Jayendra Lyne    N/A                Breakfast and lunch 7    \n#&gt; 4            4 Leon Rossini     Anchovies          Lunch only          &lt;NA&gt; \n#&gt; 5            5 Chidiegwu Dunkel Pizza              Breakfast and lunch five \n#&gt; 6            6 Güven? Attila    Ice cream          Lunch only          6\n\n\n\n8.1.3 脚本载入\n\nShow the codesource(\"data/read_write/add_function.R\")\nadd(c(1,24,4),4)\n#&gt; [1]  5 28  8\n\n\n\n\n\n\n\n\nNote\n\n\n\nadd_function\n\nShow the codeadd &lt;- function(x,y){\n  return(x+y)\n}\n\n\n\n\n\n8.1.4 二进制文件\nRDS，R’s custom binary format called RDS\nread_rds()\n\nShow the coderead_rds(\"data/read_write/leadership.rds\")\n\n\n\n\n\ndate\ncountry\ngender\nage\nq1\nq2\nq3\nq4\nq5\n\n\n\nBob\n10/24/14\nUS\nM\n29\n5\n4\n5\n5\n5\n\n\nMary\n10/28/14\nUS\nF\n44\n3\n5\n2\n5\n5\n\n\nLily\n10/01/14\nUK\nF\n45\n3\n5\n5\n5\n2\n\n\nJuly\n10/12/14\nUK\nM\n68\n3\n3\n4\nNA\nNA\n\n\nFrank\n05/01/14\nUK\nF\n99\n2\n2\n1\n2\n1\n\n\n\n\n\n\nParquet，a fast binary and columnar storage file format(列式存储文件)\narrow\n\nShow the codelibrary(arrow)\nread_parquet(file = \"data/read_write/leadership.parquet\" )\n\n\n\n8.1.5 数据库\n\nShow the codelibrary(DBI)\nlibrary(dbplyr)\n\n\n\n8.1.6 等宽格式\nreadr::read_fwf()\n\nShow the code' First     Last  Sex Number\n Currer     Bell    F      2\n    Dr.    Seuss    M     49\n    \"\"   Student   NA     21' |&gt; read_fwf()\n\n\n\n\nX1\nX2\nX3\n\n\n\nFirst\nLast\nSex Number\n\n\nCurrer\nBell\nF 2\n\n\nDr.\nSeuss\nM 49\n\n\n“”\nStudent\nNA 21\n\n\n\n\n\n\n\n8.1.7 网络下载\n\nShow the codeurl = \"https://vincentarelbundock.github.io/Rdatasets/csv/datasets/co2.csv\"\ndownload.file(url, \"data/read_write/网络下载.csv\")\n\n\n\nShow the coderead_csv(\"data/read_write/网络下载.csv\") %&gt;% head()\n\n\n\n\nrownames\ntime\nvalue\n\n\n\n1\n1959.000\n315.42\n\n\n2\n1959.083\n316.31\n\n\n3\n1959.167\n316.50\n\n\n4\n1959.250\n317.56\n\n\n5\n1959.333\n318.13\n\n\n6\n1959.417\n318.00\n\n\n\n\n\n\n\n8.1.8 JSON\njavascript object notation\n\nShow the codelibrary(jsonlite)\nread_json(path = \"data/read_write/JSON.json\",simplifyVector = TRUE)\n#&gt; $author\n#&gt; [1] \"wal\"\n#&gt; \n#&gt; $description\n#&gt; [1] \"\"\n#&gt; \n#&gt; $id\n#&gt; [1] 1.71086e+15\n#&gt; \n#&gt; $title\n#&gt; [1] \"3龙门币3赤金\"\n#&gt; \n#&gt; $buildingType\n#&gt; [1] 243\n#&gt; \n#&gt; $planTimes\n#&gt; [1] \"3班\"\n#&gt; \n#&gt; $plans\n#&gt;    name description Fiammetta.enable Fiammetta.target Fiammetta.order\n#&gt; 1 A白班                         TRUE             巫恋             pre\n#&gt; 2 B夜班                         TRUE           龙舌兰             pre\n#&gt;   drones.room drones.index drones.enable drones.order\n#&gt; 1     trading            1          TRUE          pre\n#&gt; 2     trading            1          TRUE          pre\n#&gt;                                                                                                                                      rooms.trading\n#&gt; 1         FALSE, FALSE, FALSE, LMD, LMD, LMD, 巫恋, 龙舌兰, 柏喙, 孑, 银灰, 琳琅诗怀雅, 空弦, 但书, 伺夜, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE\n#&gt; 2 FALSE, FALSE, FALSE, LMD, LMD, LMD, 巫恋, 龙舌兰, 卡夫卡, 能天使, 德克萨斯, 拉普兰德, 黑键, 慕斯, 石英, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE\n#&gt;                                                                                                                                              rooms.manufacture\n#&gt; 1         FALSE, FALSE, FALSE, Pure Gold, Pure Gold, Pure Gold, 槐琥, 至简, 清流, 苍苔, 斑点, 夜烟, 温蒂, 森蚺, 异客, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE\n#&gt; 2 FALSE, FALSE, FALSE, Pure Gold, Pure Gold, Pure Gold, 淬羽赫默, 多萝西, 白面鸮, 砾, 迷迭香, 香草, 火神, 贝娜, 泡泡, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE\n#&gt;                                                                               rooms.power\n#&gt; 1 FALSE, FALSE, FALSE, 承曦格雷伊, 澄闪, 格雷伊, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE\n#&gt; 2       FALSE, FALSE, FALSE, 缪尔赛思, 雷蛇, 黍, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE\n#&gt;                                                                                  rooms.dormitory\n#&gt; 1 FALSE, FALSE, FALSE, FALSE, 菲亚梅塔, 重岳, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE\n#&gt; 2 FALSE, FALSE, FALSE, FALSE, 菲亚梅塔, 塑心, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE\n#&gt;                                                     rooms.control\n#&gt; 1 FALSE, 阿米娅, 麒麟R夜刀, 火龙S黑角, 灵知, 玛恩纳, FALSE, FALSE\n#&gt; 2             FALSE, 重岳, 诗怀雅, 凯尔希, 令, 琴柳, FALSE, FALSE\n#&gt;                       rooms.meeting                    rooms.hire\n#&gt; 1     FALSE, 陈, 白雪, FALSE, FALSE FALSE, 艾雅法拉, FALSE, FALSE\n#&gt; 2 FALSE, 远山, 塞雷娅, FALSE, FALSE     FALSE, 絮雨, FALSE, FALSE\n#&gt;          rooms.processing                     period\n#&gt; 1     FALSE, FALSE, FALSE               07:00, 21:59\n#&gt; 2 FALSE, 年, FALSE, FALSE 22:00, 00:00, 23:59, 06:59\n#&gt; \n#&gt; $scheduleType\n#&gt; $scheduleType$planTimes\n#&gt; [1] 2\n#&gt; \n#&gt; $scheduleType$trading\n#&gt; [1] 3\n#&gt; \n#&gt; $scheduleType$manufacture\n#&gt; [1] 3\n#&gt; \n#&gt; $scheduleType$power\n#&gt; [1] 3\n#&gt; \n#&gt; $scheduleType$dormitory\n#&gt; [1] 4\n\n\n\n8.1.9 SPSS/SAS/stata DTA\nread_sas(file)\nread_dta(file)\nread_stata(file)\n\nShow the codelibrary(haven)\nsav &lt;- read_spss(file = \"data/read_write/非正态分布的均值比较.sav\")\n\ntable(sav$group)\n#&gt; \n#&gt;   1   4 \n#&gt; 252 957\nread_sav(file = \"data/read_write/非正态分布的均值比较.sav\") %&gt;% head()\n\n\n\n\nx\ngroup\n\n\n\n11989.43\n1\n\n\n35152.95\n1\n\n\n45632.33\n1\n\n\n12113.40\n1\n\n\n3997.77\n1\n\n\n209557.65\n1",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>读写</span>"
    ]
  },
  {
    "objectID": "read_write.html#write",
    "href": "read_write.html#write",
    "title": "\n8  读写\n",
    "section": "\n8.2 Write",
    "text": "8.2 Write\n\n8.2.1 文本输出\n\nShow the codesink(\"data/sink_output.txt\",append = F,split = T)  # split =T 输出到控制台和文件\nletters\n#&gt;  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n#&gt; [20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\"\nsink(NULL)\n\n\n\n8.2.2 图片输出\nRstudio 直接 Export save as Image/PDF，copy to clipboard\n\nShow the codepdf(file = \"data/pdf_output.pdf\")       # bmp,jpeg,png，SVG\nplot(1:25,1:25,pch=1:25,col=\"green\",bg=\"red\",type = \"b\")\nwhile(!is.null(dev.list()))  dev.off() \n\n\n\n8.2.3 Excel\n\nShow the codelibrary(writexl)\nlibrary(dplyr)\n\ndf &lt;- iris %&gt;% as_tibble(rownames = \"id\")\ndf %&gt;% head()\n\n\n\n\nid\nSepal.Length\nSepal.Width\nPetal.Length\nPetal.Width\nSpecies\n\n\n\n1\n5.1\n3.5\n1.4\n0.2\nsetosa\n\n\n2\n4.9\n3.0\n1.4\n0.2\nsetosa\n\n\n3\n4.7\n3.2\n1.3\n0.2\nsetosa\n\n\n4\n4.6\n3.1\n1.5\n0.2\nsetosa\n\n\n5\n5.0\n3.6\n1.4\n0.2\nsetosa\n\n\n6\n5.4\n3.9\n1.7\n0.4\nsetosa\n\n\n\n\n\nShow the codel &lt;- df  |&gt;\n  group_split(Species)\n\nnames(l) &lt;- sapply(unique(iris$Species), as.character)\n\nlt &lt;- c(iris = list(df),l)\n\nwrite_xlsx(lt, path = \"data/read_write/multi-sheet-iris_data.xlsx\")",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>读写</span>"
    ]
  },
  {
    "objectID": "transform_tidy.html",
    "href": "transform_tidy.html",
    "title": "\n9  数据清洗\n",
    "section": "",
    "text": "9.1 行操作dplyr\nhttps://dplyr.tidyverse.org/index.html “分割-应用-组合”（Split-Apply-Combine）",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>数据清洗</span>"
    ]
  },
  {
    "objectID": "transform_tidy.html#行操作dplyr",
    "href": "transform_tidy.html#行操作dplyr",
    "title": "\n9  数据清洗\n",
    "section": "",
    "text": "9.1.1 filter()\n\n\nShow the codedplyr::filter(mpg,model==\"a4\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n\n\naudi\na4\n3.1\n2008\n6\nauto(av)\nf\n18\n27\np\ncompact\n\n\n\n\n\nShow the code\n\n\ndplyr::filter(mpg,drv %in% c(\"r\",\"f\")) |&gt; DT::datatable()\n\n\n\n\n\n\n9.1.2 arrange()\n\n\nShow the codearrange(mpg, year,displ,cty)|&gt; DT::datatable()\n\n\n\n\nShow the code\narrange(mpg,desc(displ))|&gt; DT::datatable()\n\n\n\n\n\n\n9.1.3 distinct()\n\n\nShow the codedistinct(mpg,manufacturer)\n\n\n\n\nmanufacturer\n\n\n\naudi\n\n\nchevrolet\n\n\ndodge\n\n\nford\n\n\nhonda\n\n\nhyundai\n\n\njeep\n\n\nland rover\n\n\nlincoln\n\n\nmercury\n\n\nnissan\n\n\npontiac\n\n\nsubaru\n\n\ntoyota\n\n\nvolkswagen\n\n\n\n\n\nShow the codecount(mpg,manufacturer,sort = TRUE)\n\n\n\n\nmanufacturer\nn\n\n\n\ndodge\n37\n\n\ntoyota\n34\n\n\nvolkswagen\n27\n\n\nford\n25\n\n\nchevrolet\n19\n\n\naudi\n18\n\n\nhyundai\n14\n\n\nsubaru\n14\n\n\nnissan\n13\n\n\nhonda\n9\n\n\njeep\n8\n\n\npontiac\n5\n\n\nland rover\n4\n\n\nmercury\n4\n\n\nlincoln\n3\n\n\n\n\n\nShow the code\nmpg |&gt; \n    distinct(manufacturer,cyl) |&gt; \n    count(cyl)\n\n\n\n\ncyl\nn\n\n\n\n4\n9\n\n\n5\n1\n\n\n6\n11\n\n\n8\n11\n\n\n\n\n\nShow the code\n# 将在数据集中找到唯一行的第一个出现并丢弃其余行\ndistinct(mpg,manufacturer,.keep_all = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\nchevrolet\nc1500 suburban 2wd\n5.3\n2008\n8\nauto(l4)\nr\n14\n20\nr\nsuv\n\n\ndodge\ncaravan 2wd\n2.4\n1999\n4\nauto(l3)\nf\n18\n24\nr\nminivan\n\n\nford\nexpedition 2wd\n4.6\n1999\n8\nauto(l4)\nr\n11\n17\nr\nsuv\n\n\nhonda\ncivic\n1.6\n1999\n4\nmanual(m5)\nf\n28\n33\nr\nsubcompact\n\n\nhyundai\nsonata\n2.4\n1999\n4\nauto(l4)\nf\n18\n26\nr\nmidsize\n\n\njeep\ngrand cherokee 4wd\n3.0\n2008\n6\nauto(l5)\n4\n17\n22\nd\nsuv\n\n\nland rover\nrange rover\n4.0\n1999\n8\nauto(l4)\n4\n11\n15\np\nsuv\n\n\nlincoln\nnavigator 2wd\n5.4\n1999\n8\nauto(l4)\nr\n11\n17\nr\nsuv\n\n\nmercury\nmountaineer 4wd\n4.0\n1999\n6\nauto(l5)\n4\n14\n17\nr\nsuv\n\n\nnissan\naltima\n2.4\n1999\n4\nmanual(m5)\nf\n21\n29\nr\ncompact\n\n\npontiac\ngrand prix\n3.1\n1999\n6\nauto(l4)\nf\n18\n26\nr\nmidsize\n\n\nsubaru\nforester awd\n2.5\n1999\n4\nmanual(m5)\n4\n18\n25\nr\nsuv\n\n\ntoyota\n4runner 4wd\n2.7\n1999\n4\nmanual(m5)\n4\n15\n20\nr\nsuv\n\n\nvolkswagen\ngti\n2.0\n1999\n4\nmanual(m5)\nf\n21\n29\nr\ncompact\n\n\n\n\n\n\n\n9.1.4 slice()\n\n\nShow the codeslice_head(mpg , n=6)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n\n\n\n\n\nShow the codeslice_max(mpg, order_by = displ ,n=6)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\nchevrolet\ncorvette\n7.0\n2008\n8\nmanual(m6)\nr\n15\n24\np\n2seater\n\n\nchevrolet\nk1500 tahoe 4wd\n6.5\n1999\n8\nauto(l4)\n4\n14\n17\nd\nsuv\n\n\nchevrolet\ncorvette\n6.2\n2008\n8\nmanual(m6)\nr\n16\n26\np\n2seater\n\n\nchevrolet\ncorvette\n6.2\n2008\n8\nauto(s6)\nr\n15\n25\np\n2seater\n\n\njeep\ngrand cherokee 4wd\n6.1\n2008\n8\nauto(l5)\n4\n11\n14\np\nsuv\n\n\nchevrolet\nc1500 suburban 2wd\n6.0\n2008\n8\nauto(l4)\nr\n12\n17\nr\nsuv\n\n\n\n\n\nShow the codeslice_min(mpg,order_by = displ,prop = 0.01)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\nhonda\ncivic\n1.6\n1999\n4\nmanual(m5)\nf\n28\n33\nr\nsubcompact\n\n\nhonda\ncivic\n1.6\n1999\n4\nauto(l4)\nf\n24\n32\nr\nsubcompact\n\n\nhonda\ncivic\n1.6\n1999\n4\nmanual(m5)\nf\n25\n32\nr\nsubcompact\n\n\nhonda\ncivic\n1.6\n1999\n4\nmanual(m5)\nf\n23\n29\np\nsubcompact\n\n\nhonda\ncivic\n1.6\n1999\n4\nauto(l4)\nf\n24\n32\nr\nsubcompact\n\n\n\n\n\nShow the code\nslice_sample(mpg,n=6,weight_by =hwy ,replace = T)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\nford\nexpedition 2wd\n5.4\n1999\n8\nauto(l4)\nr\n11\n17\nr\nsuv\n\n\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n\n\ndodge\nram 1500 pickup 4wd\n4.7\n2008\n8\nmanual(m6)\n4\n9\n12\ne\npickup\n\n\njeep\ngrand cherokee 4wd\n4.7\n2008\n8\nauto(l5)\n4\n14\n19\nr\nsuv\n\n\nchevrolet\ncorvette\n7.0\n2008\n8\nmanual(m6)\nr\n15\n24\np\n2seater\n\n\nsubaru\nforester awd\n2.5\n2008\n4\nauto(l4)\n4\n18\n23\np\nsuv",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>数据清洗</span>"
    ]
  },
  {
    "objectID": "transform_tidy.html#列操作-dplyr",
    "href": "transform_tidy.html#列操作-dplyr",
    "title": "\n9  数据清洗\n",
    "section": "\n9.2 列操作 dplyr\n",
    "text": "9.2 列操作 dplyr\n\n\n9.2.1 glimpse()\n\n\nShow the codeglimpse(mpg) %&gt;% select(1:3) %&gt;% head()\n#&gt; Rows: 234\n#&gt; Columns: 11\n#&gt; $ manufacturer &lt;chr&gt; \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"…\n#&gt; $ model        &lt;chr&gt; \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4 quattro\", \"…\n#&gt; $ displ        &lt;dbl&gt; 1.8, 1.8, 2.0, 2.0, 2.8, 2.8, 3.1, 1.8, 1.8, 2.0, 2.0, 2.…\n#&gt; $ year         &lt;int&gt; 1999, 1999, 2008, 2008, 1999, 1999, 2008, 1999, 1999, 200…\n#&gt; $ cyl          &lt;int&gt; 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 8, 8, …\n#&gt; $ trans        &lt;chr&gt; \"auto(l5)\", \"manual(m5)\", \"manual(m6)\", \"auto(av)\", \"auto…\n#&gt; $ drv          &lt;chr&gt; \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"4\", \"4\", \"4\", \"4\", \"4…\n#&gt; $ cty          &lt;int&gt; 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 1…\n#&gt; $ hwy          &lt;int&gt; 29, 29, 31, 30, 26, 26, 27, 26, 25, 28, 27, 25, 25, 25, 2…\n#&gt; $ fl           &lt;chr&gt; \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p…\n#&gt; $ class        &lt;chr&gt; \"compact\", \"compact\", \"compact\", \"compact\", \"compact\", \"c…\n\n\n\n\nmanufacturer\nmodel\ndispl\n\n\n\naudi\na4\n1.8\n\n\naudi\na4\n1.8\n\n\naudi\na4\n2.0\n\n\naudi\na4\n2.0\n\n\naudi\na4\n2.8\n\n\naudi\na4\n2.8\n\n\n\n\n\n\n\n9.2.2 pull()\n\n提取单个列\n\nShow the codempg %&gt;% \n    pull(var = cyl)\n#&gt;   [1] 4 4 4 4 6 6 6 4 4 4 4 6 6 6 6 6 6 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 4 4 6 6 6\n#&gt;  [38] 4 6 6 6 6 6 6 6 6 6 6 6 6 6 6 8 8 8 8 8 6 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n#&gt;  [75] 8 8 8 6 6 6 6 8 8 6 6 8 8 8 8 8 6 6 6 6 8 8 8 8 8 4 4 4 4 4 4 4 4 4 4 4 4\n#&gt; [112] 4 6 6 6 4 4 4 4 6 6 6 6 6 6 8 8 8 8 8 8 8 8 8 8 8 8 6 6 8 8 4 4 4 4 6 6 6\n#&gt; [149] 6 6 6 6 6 8 6 6 6 6 8 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 6 6 6 8 4 4 4 4 6 6\n#&gt; [186] 6 4 4 4 4 6 6 6 4 4 4 4 4 8 8 4 4 4 6 6 6 6 4 4 4 4 6 4 4 4 4 4 5 5 6 6 4\n#&gt; [223] 4 4 4 5 5 4 4 4 4 6 6 6\n\n\n\n9.2.3 mutate()\n\n\nShow the codemutate(mpg,\n       id=nrow(mpg),\n       .before = 1)|&gt; DT::datatable()\n\n\n\n\nShow the code\nmutate(mpg,\n       id=nrow(mpg),\n       .after = 1)|&gt; DT::datatable()\n\n\n\n\nShow the code\nmutate(mpg,\n       id=nrow(mpg),\n       .keep = \"used\")|&gt; DT::datatable()\n\n\n\n\n\n\n9.2.4 rename()\n\n\nShow the coderename(mpg,生产厂商=manufacturer) |&gt; head()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n生产厂商\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n\n\n\n\n\n\n\n9.2.5 relocate()\n\n\nShow the coderelocate(mpg , model:year ,.before = 1) |&gt; head()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmodel\ndispl\nyear\nmanufacturer\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\na4\n1.8\n1999\naudi\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\na4\n1.8\n1999\naudi\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\na4\n2.0\n2008\naudi\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\na4\n2.0\n2008\naudi\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\na4\n2.8\n1999\naudi\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\na4\n2.8\n1999\naudi\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n\n\n\n\n\nShow the coderelocate(mpg , model:year ,.after = cyl) |&gt; head()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmanufacturer\ncyl\nmodel\ndispl\nyear\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\naudi\n4\na4\n1.8\n1999\nauto(l5)\nf\n18\n29\np\ncompact\n\n\naudi\n4\na4\n1.8\n1999\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\naudi\n4\na4\n2.0\n2008\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\naudi\n4\na4\n2.0\n2008\nauto(av)\nf\n21\n30\np\ncompact\n\n\naudi\n6\na4\n2.8\n1999\nauto(l5)\nf\n16\n26\np\ncompact\n\n\naudi\n6\na4\n2.8\n1999\nmanual(m5)\nf\n18\n26\np\ncompact\n\n\n\n\n\n\n\n9.2.6 select()\n\n\n:用于选择一系列连续变量。\n!用于获取一组变量的补集。\n&以及|用于选择交集 或并集。\nc()用于组合选择。\n\n选择帮助程序( selection helpers )选择特定的列：\n\neverything()：匹配所有变量。\nlast_col()：选择最后一个变量，可能带有偏移量。\ngroup_cols()：选择所有分组列。\nstarts_with()：前缀开头。\nends_with()：后缀结尾。\ncontains()：包含文本字符串。\nmatches()：匹配正则表达式。\nnum_range()：匹配 x01、x02、x03 等数值范围。\n\n或者从存储在字符向量中的变量：\n\nall_of()：匹配字符向量中的变量名称。所有 名称必须存在，否则抛出越界错误（out-of-bounds error）。\nany_of()：与all_of()相同，只是对于不存在的名称不会抛出任何错误。\n\n或者使用谓词( predicate )函数：\n\n\nwhere(fn)：将该函数应用于所有变量并选择该函数返回TRUE的变量。\n\n\nShow the codedplyr::select(mpg,model:year)|&gt; DT::datatable()\n\n\n\n\nShow the codeselect(mpg,c(3,4,5))|&gt; DT::datatable()\n\n\n\n\nShow the codeselect(mpg,where(is.numeric))|&gt; DT::datatable()\n\n\n\n\nShow the codeselect(mpg,where(~is.numeric(.x) && mean(.x,na.rm=TRUE)&lt;50))|&gt; DT::datatable()\n\n\n\n\n\n\n9.2.7 across(.cols, .fns, ...)\n\n\nShow the codeiris &lt;- as_tibble(iris)\niris %&gt;%\n  mutate(across(where(is.double) & !c(Petal.Length, Petal.Width), round)) %&gt;% \n    head(6)\n\n\n\n\nSepal.Length\nSepal.Width\nPetal.Length\nPetal.Width\nSpecies\n\n\n\n5\n4\n1.4\n0.2\nsetosa\n\n\n5\n3\n1.4\n0.2\nsetosa\n\n\n5\n3\n1.3\n0.2\nsetosa\n\n\n5\n3\n1.5\n0.2\nsetosa\n\n\n5\n4\n1.4\n0.2\nsetosa\n\n\n5\n4\n1.7\n0.4\nsetosa\n\n\n\n\n\nShow the code\ncols &lt;- c(\"Sepal.Length\", \"Petal.Width\")\niris %&gt;%\n  mutate(across(all_of(cols), round))\n\n\n\n\nSepal.Length\nSepal.Width\nPetal.Length\nPetal.Width\nSpecies\n\n\n\n5\n3.5\n1.4\n0\nsetosa\n\n\n5\n3.0\n1.4\n0\nsetosa\n\n\n5\n3.2\n1.3\n0\nsetosa\n\n\n5\n3.1\n1.5\n0\nsetosa\n\n\n5\n3.6\n1.4\n0\nsetosa\n\n\n5\n3.9\n1.7\n0\nsetosa\n\n\n5\n3.4\n1.4\n0\nsetosa\n\n\n5\n3.4\n1.5\n0\nsetosa\n\n\n4\n2.9\n1.4\n0\nsetosa\n\n\n5\n3.1\n1.5\n0\nsetosa\n\n\n5\n3.7\n1.5\n0\nsetosa\n\n\n5\n3.4\n1.6\n0\nsetosa\n\n\n5\n3.0\n1.4\n0\nsetosa\n\n\n4\n3.0\n1.1\n0\nsetosa\n\n\n6\n4.0\n1.2\n0\nsetosa\n\n\n6\n4.4\n1.5\n0\nsetosa\n\n\n5\n3.9\n1.3\n0\nsetosa\n\n\n5\n3.5\n1.4\n0\nsetosa\n\n\n6\n3.8\n1.7\n0\nsetosa\n\n\n5\n3.8\n1.5\n0\nsetosa\n\n\n5\n3.4\n1.7\n0\nsetosa\n\n\n5\n3.7\n1.5\n0\nsetosa\n\n\n5\n3.6\n1.0\n0\nsetosa\n\n\n5\n3.3\n1.7\n0\nsetosa\n\n\n5\n3.4\n1.9\n0\nsetosa\n\n\n5\n3.0\n1.6\n0\nsetosa\n\n\n5\n3.4\n1.6\n0\nsetosa\n\n\n5\n3.5\n1.5\n0\nsetosa\n\n\n5\n3.4\n1.4\n0\nsetosa\n\n\n5\n3.2\n1.6\n0\nsetosa\n\n\n5\n3.1\n1.6\n0\nsetosa\n\n\n5\n3.4\n1.5\n0\nsetosa\n\n\n5\n4.1\n1.5\n0\nsetosa\n\n\n6\n4.2\n1.4\n0\nsetosa\n\n\n5\n3.1\n1.5\n0\nsetosa\n\n\n5\n3.2\n1.2\n0\nsetosa\n\n\n6\n3.5\n1.3\n0\nsetosa\n\n\n5\n3.6\n1.4\n0\nsetosa\n\n\n4\n3.0\n1.3\n0\nsetosa\n\n\n5\n3.4\n1.5\n0\nsetosa\n\n\n5\n3.5\n1.3\n0\nsetosa\n\n\n4\n2.3\n1.3\n0\nsetosa\n\n\n4\n3.2\n1.3\n0\nsetosa\n\n\n5\n3.5\n1.6\n1\nsetosa\n\n\n5\n3.8\n1.9\n0\nsetosa\n\n\n5\n3.0\n1.4\n0\nsetosa\n\n\n5\n3.8\n1.6\n0\nsetosa\n\n\n5\n3.2\n1.4\n0\nsetosa\n\n\n5\n3.7\n1.5\n0\nsetosa\n\n\n5\n3.3\n1.4\n0\nsetosa\n\n\n7\n3.2\n4.7\n1\nversicolor\n\n\n6\n3.2\n4.5\n2\nversicolor\n\n\n7\n3.1\n4.9\n2\nversicolor\n\n\n6\n2.3\n4.0\n1\nversicolor\n\n\n6\n2.8\n4.6\n2\nversicolor\n\n\n6\n2.8\n4.5\n1\nversicolor\n\n\n6\n3.3\n4.7\n2\nversicolor\n\n\n5\n2.4\n3.3\n1\nversicolor\n\n\n7\n2.9\n4.6\n1\nversicolor\n\n\n5\n2.7\n3.9\n1\nversicolor\n\n\n5\n2.0\n3.5\n1\nversicolor\n\n\n6\n3.0\n4.2\n2\nversicolor\n\n\n6\n2.2\n4.0\n1\nversicolor\n\n\n6\n2.9\n4.7\n1\nversicolor\n\n\n6\n2.9\n3.6\n1\nversicolor\n\n\n7\n3.1\n4.4\n1\nversicolor\n\n\n6\n3.0\n4.5\n2\nversicolor\n\n\n6\n2.7\n4.1\n1\nversicolor\n\n\n6\n2.2\n4.5\n2\nversicolor\n\n\n6\n2.5\n3.9\n1\nversicolor\n\n\n6\n3.2\n4.8\n2\nversicolor\n\n\n6\n2.8\n4.0\n1\nversicolor\n\n\n6\n2.5\n4.9\n2\nversicolor\n\n\n6\n2.8\n4.7\n1\nversicolor\n\n\n6\n2.9\n4.3\n1\nversicolor\n\n\n7\n3.0\n4.4\n1\nversicolor\n\n\n7\n2.8\n4.8\n1\nversicolor\n\n\n7\n3.0\n5.0\n2\nversicolor\n\n\n6\n2.9\n4.5\n2\nversicolor\n\n\n6\n2.6\n3.5\n1\nversicolor\n\n\n6\n2.4\n3.8\n1\nversicolor\n\n\n6\n2.4\n3.7\n1\nversicolor\n\n\n6\n2.7\n3.9\n1\nversicolor\n\n\n6\n2.7\n5.1\n2\nversicolor\n\n\n5\n3.0\n4.5\n2\nversicolor\n\n\n6\n3.4\n4.5\n2\nversicolor\n\n\n7\n3.1\n4.7\n2\nversicolor\n\n\n6\n2.3\n4.4\n1\nversicolor\n\n\n6\n3.0\n4.1\n1\nversicolor\n\n\n6\n2.5\n4.0\n1\nversicolor\n\n\n6\n2.6\n4.4\n1\nversicolor\n\n\n6\n3.0\n4.6\n1\nversicolor\n\n\n6\n2.6\n4.0\n1\nversicolor\n\n\n5\n2.3\n3.3\n1\nversicolor\n\n\n6\n2.7\n4.2\n1\nversicolor\n\n\n6\n3.0\n4.2\n1\nversicolor\n\n\n6\n2.9\n4.2\n1\nversicolor\n\n\n6\n2.9\n4.3\n1\nversicolor\n\n\n5\n2.5\n3.0\n1\nversicolor\n\n\n6\n2.8\n4.1\n1\nversicolor\n\n\n6\n3.3\n6.0\n2\nvirginica\n\n\n6\n2.7\n5.1\n2\nvirginica\n\n\n7\n3.0\n5.9\n2\nvirginica\n\n\n6\n2.9\n5.6\n2\nvirginica\n\n\n6\n3.0\n5.8\n2\nvirginica\n\n\n8\n3.0\n6.6\n2\nvirginica\n\n\n5\n2.5\n4.5\n2\nvirginica\n\n\n7\n2.9\n6.3\n2\nvirginica\n\n\n7\n2.5\n5.8\n2\nvirginica\n\n\n7\n3.6\n6.1\n2\nvirginica\n\n\n6\n3.2\n5.1\n2\nvirginica\n\n\n6\n2.7\n5.3\n2\nvirginica\n\n\n7\n3.0\n5.5\n2\nvirginica\n\n\n6\n2.5\n5.0\n2\nvirginica\n\n\n6\n2.8\n5.1\n2\nvirginica\n\n\n6\n3.2\n5.3\n2\nvirginica\n\n\n6\n3.0\n5.5\n2\nvirginica\n\n\n8\n3.8\n6.7\n2\nvirginica\n\n\n8\n2.6\n6.9\n2\nvirginica\n\n\n6\n2.2\n5.0\n2\nvirginica\n\n\n7\n3.2\n5.7\n2\nvirginica\n\n\n6\n2.8\n4.9\n2\nvirginica\n\n\n8\n2.8\n6.7\n2\nvirginica\n\n\n6\n2.7\n4.9\n2\nvirginica\n\n\n7\n3.3\n5.7\n2\nvirginica\n\n\n7\n3.2\n6.0\n2\nvirginica\n\n\n6\n2.8\n4.8\n2\nvirginica\n\n\n6\n3.0\n4.9\n2\nvirginica\n\n\n6\n2.8\n5.6\n2\nvirginica\n\n\n7\n3.0\n5.8\n2\nvirginica\n\n\n7\n2.8\n6.1\n2\nvirginica\n\n\n8\n3.8\n6.4\n2\nvirginica\n\n\n6\n2.8\n5.6\n2\nvirginica\n\n\n6\n2.8\n5.1\n2\nvirginica\n\n\n6\n2.6\n5.6\n1\nvirginica\n\n\n8\n3.0\n6.1\n2\nvirginica\n\n\n6\n3.4\n5.6\n2\nvirginica\n\n\n6\n3.1\n5.5\n2\nvirginica\n\n\n6\n3.0\n4.8\n2\nvirginica\n\n\n7\n3.1\n5.4\n2\nvirginica\n\n\n7\n3.1\n5.6\n2\nvirginica\n\n\n7\n3.1\n5.1\n2\nvirginica\n\n\n6\n2.7\n5.1\n2\nvirginica\n\n\n7\n3.2\n5.9\n2\nvirginica\n\n\n7\n3.3\n5.7\n2\nvirginica\n\n\n7\n3.0\n5.2\n2\nvirginica\n\n\n6\n2.5\n5.0\n2\nvirginica\n\n\n6\n3.0\n5.2\n2\nvirginica\n\n\n6\n3.4\n5.4\n2\nvirginica\n\n\n6\n3.0\n5.1\n2\nvirginica\n\n\n\n\n\nShow the code\n\niris %&gt;%\n  group_by(Species) %&gt;%\n  summarise(across(starts_with(\"Sepal\"), ~ mean(.x, na.rm = TRUE),.names = \"mean_{.col}\"))\n\n\n\n\nSpecies\nmean_Sepal.Length\nmean_Sepal.Width\n\n\n\nsetosa\n5.006\n3.428\n\n\nversicolor\n5.936\n2.770\n\n\nvirginica\n6.588\n2.974\n\n\n\n\n\nShow the code\n\n# 命名列表\niris %&gt;%\n  group_by(Species) %&gt;%\n  summarise(across(starts_with(\"Sepal\"), list(mean = mean, sd = sd), .names = \"{.col}_{.fn}\"))\n\n\n\n\n\n\n\n\n\n\n\nSpecies\nSepal.Length_mean\nSepal.Length_sd\nSepal.Width_mean\nSepal.Width_sd\n\n\n\nsetosa\n5.006\n0.3524897\n3.428\n0.3790644\n\n\nversicolor\n5.936\n0.5161711\n2.770\n0.3137983\n\n\nvirginica\n6.588\n0.6358796\n2.974\n0.3224966\n\n\n\n\n\nShow the code\niris %&gt;%\n  group_by(Species) %&gt;%\n  summarise(across(starts_with(\"Sepal\"), list(mean, sd), .names = \"{.col}_function{.fn}\"))\n\n\n\n\n\n\n\n\n\n\n\nSpecies\nSepal.Length_function1\nSepal.Length_function2\nSepal.Width_function1\nSepal.Width_function2\n\n\n\nsetosa\n5.006\n0.3524897\n3.428\n0.3790644\n\n\nversicolor\n5.936\n0.5161711\n2.770\n0.3137983\n\n\nvirginica\n6.588\n0.6358796\n2.974\n0.3224966\n\n\n\n\n\n\n\nShow the codeiris %&gt;%\n  dplyr::filter(if_any(ends_with(\"Width\"), ~ . &gt; 4))\n\n\n\n\nSepal.Length\nSepal.Width\nPetal.Length\nPetal.Width\nSpecies\n\n\n\n5.7\n4.4\n1.5\n0.4\nsetosa\n\n\n5.2\n4.1\n1.5\n0.1\nsetosa\n\n\n5.5\n4.2\n1.4\n0.2\nsetosa\n\n\n\n\n\n\n\nShow the codeiris %&gt;%\n  dplyr::filter(if_all(ends_with(\"Width\"), ~ . &gt; 2))\n\n\n\n\nSepal.Length\nSepal.Width\nPetal.Length\nPetal.Width\nSpecies\n\n\n\n6.3\n3.3\n6.0\n2.5\nvirginica\n\n\n7.1\n3.0\n5.9\n2.1\nvirginica\n\n\n6.5\n3.0\n5.8\n2.2\nvirginica\n\n\n7.6\n3.0\n6.6\n2.1\nvirginica\n\n\n7.2\n3.6\n6.1\n2.5\nvirginica\n\n\n6.8\n3.0\n5.5\n2.1\nvirginica\n\n\n5.8\n2.8\n5.1\n2.4\nvirginica\n\n\n6.4\n3.2\n5.3\n2.3\nvirginica\n\n\n7.7\n3.8\n6.7\n2.2\nvirginica\n\n\n7.7\n2.6\n6.9\n2.3\nvirginica\n\n\n6.9\n3.2\n5.7\n2.3\nvirginica\n\n\n6.7\n3.3\n5.7\n2.1\nvirginica\n\n\n6.4\n2.8\n5.6\n2.1\nvirginica\n\n\n6.4\n2.8\n5.6\n2.2\nvirginica\n\n\n7.7\n3.0\n6.1\n2.3\nvirginica\n\n\n6.3\n3.4\n5.6\n2.4\nvirginica\n\n\n6.9\n3.1\n5.4\n2.1\nvirginica\n\n\n6.7\n3.1\n5.6\n2.4\nvirginica\n\n\n6.9\n3.1\n5.1\n2.3\nvirginica\n\n\n6.8\n3.2\n5.9\n2.3\nvirginica\n\n\n6.7\n3.3\n5.7\n2.5\nvirginica\n\n\n6.7\n3.0\n5.2\n2.3\nvirginica\n\n\n6.2\n3.4\n5.4\n2.3\nvirginica",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>数据清洗</span>"
    ]
  },
  {
    "objectID": "transform_tidy.html#按组操作",
    "href": "transform_tidy.html#按组操作",
    "title": "\n9  数据清洗\n",
    "section": "\n9.3 按组操作",
    "text": "9.3 按组操作\n\n9.3.1 group_by()\n\n\nShow the codempg |&gt; \n    group_by(cyl,drv) |&gt; \n    summarise(n=n(),\n              .groups = \"drop_last\") #删除最后一个分组条件\n\n\n\n\ncyl\ndrv\nn\n\n\n\n4\n4\n23\n\n\n4\nf\n58\n\n\n5\nf\n4\n\n\n6\n4\n32\n\n\n6\nf\n43\n\n\n6\nr\n4\n\n\n8\n4\n48\n\n\n8\nf\n1\n\n\n8\nr\n21\n\n\n\n\n\nShow the code# drop 删除所有分组\n# keep 保留所有分组\n\n\n\n9.3.2 .by =\n\n\nShow the codempg %&gt;% \n    summarise(n=n(),\n              .by = c(cyl,drv))\n\n\n\n\ncyl\ndrv\nn\n\n\n\n4\nf\n58\n\n\n6\nf\n43\n\n\n4\n4\n23\n\n\n6\n4\n32\n\n\n8\n4\n48\n\n\n8\nr\n21\n\n\n6\nr\n4\n\n\n8\nf\n1\n\n\n5\nf\n4\n\n\n\n\n\n\n\n9.3.3 计数\n\nShow the codestarwars %&gt;% count(sex, gender, sort = TRUE)\n\n\n\n\nsex\ngender\nn\n\n\n\nmale\nmasculine\n60\n\n\nfemale\nfeminine\n16\n\n\nnone\nmasculine\n5\n\n\nNA\nNA\n4\n\n\nhermaphroditic\nmasculine\n1\n\n\nnone\nfeminine\n1\n\n\n\n\n\nShow the code\nstarwars %&gt;% group_by(sex, gender) %&gt;% \n    summarise(n=n(),.groups = \"drop\") %&gt;% \n    arrange(desc(n))\n\n\n\n\nsex\ngender\nn\n\n\n\nmale\nmasculine\n60\n\n\nfemale\nfeminine\n16\n\n\nnone\nmasculine\n5\n\n\nNA\nNA\n4\n\n\nhermaphroditic\nmasculine\n1\n\n\nnone\nfeminine\n1\n\n\n\n\n\n\n\n9.3.4 rowwise()\n\n\nShow the codeoptions(digits = 3)\nset.seed(123)\ndf &lt;- tibble(x = runif(6), y = runif(6), z = runif(6))\ndf\n\n\n\n\nx\ny\nz\n\n\n\n0.288\n0.528\n0.678\n\n\n0.788\n0.892\n0.573\n\n\n0.409\n0.551\n0.103\n\n\n0.883\n0.457\n0.900\n\n\n0.940\n0.957\n0.246\n\n\n0.046\n0.453\n0.042\n\n\n\n\n\nShow the code\ndf %&gt;% mutate(m = pmin(x, y, z))\n\n\n\n\nx\ny\nz\nm\n\n\n\n0.288\n0.528\n0.678\n0.288\n\n\n0.788\n0.892\n0.573\n0.573\n\n\n0.409\n0.551\n0.103\n0.103\n\n\n0.883\n0.457\n0.900\n0.457\n\n\n0.940\n0.957\n0.246\n0.246\n\n\n0.046\n0.453\n0.042\n0.042\n\n\n\n\n\n\n\n9.3.5 reframe()\n\n\nShow the codedf &lt;- tibble(\n  g = c(1, 1, 1, 2, 2, 2, 2),\n  x = c(1:7)\n)\ndf %&gt;%\n  reframe(x = mean(x), .by = g)\n\n\n\n\ng\nx\n\n\n\n1\n2.0\n\n\n2\n5.5",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>数据清洗</span>"
    ]
  },
  {
    "objectID": "transform_tidy.html#按数据框操作",
    "href": "transform_tidy.html#按数据框操作",
    "title": "\n9  数据清洗\n",
    "section": "\n9.4 按数据框操作",
    "text": "9.4 按数据框操作\n\n9.4.1 绑定操作\n\n9.4.1.1 bing_cols()\n\n\nShow the codedf1 &lt;- tibble(x = 1:3)\ndf2 &lt;- tibble(y = 3:1)\nbind_cols(df1, df2)\n\n\n\n\nx\ny\n\n\n\n1\n3\n\n\n2\n2\n\n\n3\n1\n\n\n\n\n\n\n\n9.4.1.2 bind_rows()\n\n\nShow the codedf1 &lt;- tibble(x = 1:2, y = letters[1:2])\ndf2 &lt;- tibble(x = 4:5, z = 1:2)\n\nbind_rows(df1, df2)\n\n\n\n\nx\ny\nz\n\n\n\n1\na\nNA\n\n\n2\nb\nNA\n\n\n4\nNA\n1\n\n\n5\nNA\n2\n\n\n\n\n\n\n\n9.4.2 集合操作\n集合运算 要求变量名（列）完全相同,把观测（行）看成是集合中的元素\n\nShow the codex&lt;-tibble(ID=c(1,2),X=c(\"a1\",'a2'))\ny&lt;-tibble(ID=c(2,3),X=c(\"a2\",'a3'))\nx;y\n\n\n\n\nID\nX\n\n\n\n1\na1\n\n\n2\na2\n\n\n\n\n\n\n\n\n\nID\nX\n\n\n\n2\na2\n\n\n3\na3\n\n\n\n\n\n\n\nShow the codedplyr::intersect(x,y) \n\n\n\n\nID\nX\n\n\n2\na2\n\n\n\n\nShow the codeunion(x,y)\n\n\n\n\nID\nX\n\n\n\n1\na1\n\n\n2\na2\n\n\n3\na3\n\n\n\n\n\nShow the codeunion_all(x,y)\n\n\n\n\nID\nX\n\n\n\n1\na1\n\n\n2\na2\n\n\n2\na2\n\n\n3\na3\n\n\n\n\n\nShow the code\ndplyr::setdiff(x,y) #返回在x中不在y中\n\n\n\n\nID\nX\n\n\n1\na1\n\n\n\n\nShow the codesymdiff(x,y)  # 在x不在y中的行和在y中不在x中的行\n\n\n\n\nID\nX\n\n\n\n1\na1\n\n\n3\na3\n\n\n\n\n\nShow the codesetequal(x,y)#判断是否相等\n#&gt; [1] FALSE\n\n\n\n9.4.3 连接操作\n\nShow the codex &lt;- tribble(\n  ~ID, ~X,\n  1, \"x1\",\n  2, \"x2\",\n  3, \"x3\"\n)\ny &lt;- tribble(\n  ~id, ~Y,\n  1, \"y1\",\n  2, \"y2\",\n  4, \"y4\"\n)\nx;y\n\n\n\n\nID\nX\n\n\n\n1\nx1\n\n\n2\nx2\n\n\n3\nx3\n\n\n\n\n\n\n\n\n\nid\nY\n\n\n\n1\ny1\n\n\n2\ny2\n\n\n4\ny4\n\n\n\n\n\n\n\n9.4.3.1 mutate-joins\n\nShow the code# 左连接\nleft_join(x, y, by = join_by(ID == id))\n\n\n\n\nID\nX\nY\n\n\n\n1\nx1\ny1\n\n\n2\nx2\ny2\n\n\n3\nx3\nNA\n\n\n\n\n\nShow the code\n# 右连接\nright_join(x, y, by = join_by(ID == id))\n\n\n\n\nID\nX\nY\n\n\n\n1\nx1\ny1\n\n\n2\nx2\ny2\n\n\n4\nNA\ny4\n\n\n\n\n\nShow the code\n\n# 全连接\nfull_join(x, y, by = join_by(ID == id))\n\n\n\n\nID\nX\nY\n\n\n\n1\nx1\ny1\n\n\n2\nx2\ny2\n\n\n3\nx3\nNA\n\n\n4\nNA\ny4\n\n\n\n\n\nShow the code\n# 内连接\ninner_join(x, y, by = join_by(ID == id))\n\n\n\n\nID\nX\nY\n\n\n\n1\nx1\ny1\n\n\n2\nx2\ny2\n\n\n\n\n\nShow the codeinner_join(x,y, by = join_by(ID &gt;=id), keep = TRUE)\n\n\n\n\nID\nX\nid\nY\n\n\n\n1\nx1\n1\ny1\n\n\n2\nx2\n1\ny1\n\n\n2\nx2\n2\ny2\n\n\n3\nx3\n1\ny1\n\n\n3\nx3\n2\ny2\n\n\n\n\n\nShow the code#滚动联接  rolling join 类似于不等式连接，但仅匹配最近一个值。\ninner_join(x,y, join_by(closest(ID &gt;=id)))\n\n\n\n\nID\nX\nid\nY\n\n\n\n1\nx1\n1\ny1\n\n\n2\nx2\n2\ny2\n\n\n3\nx3\n2\ny2\n\n\n\n\n\n\n\n9.4.3.2 filter-joins\n对第一个数据框进行 筛选\n\nShow the code# 半连接\nsemi_join(x, y, by = join_by(ID == id))\n\n\n\n\nID\nX\n\n\n\n1\nx1\n\n\n2\nx2\n\n\n\n\n\nShow the code\n# 反连接\nanti_join(x, y, by = join_by(ID == id))\n\n\n\n\nID\nX\n\n\n3\nx3\n\n\n\n\n\n\n9.4.3.3 cross-join\n\nShow the code#交叉连接\ncross_join(x,y)         #nrow(x) * nrow(y)\n\n\n\n\nID\nX\nid\nY\n\n\n\n1\nx1\n1\ny1\n\n\n1\nx1\n2\ny2\n\n\n1\nx1\n4\ny4\n\n\n2\nx2\n1\ny1\n\n\n2\nx2\n2\ny2\n\n\n2\nx2\n4\ny4\n\n\n3\nx3\n1\ny1\n\n\n3\nx3\n2\ny2\n\n\n3\nx3\n4\ny4\n\n\n\n\n\nShow the code\n\nnest_join(x,y,by = join_by(ID==id))-&gt;nested\n\nnested[[3]]\n#&gt; [[1]]\n#&gt; # A tibble: 1 × 1\n#&gt;   Y    \n#&gt;   &lt;chr&gt;\n#&gt; 1 y1   \n#&gt; \n#&gt; [[2]]\n#&gt; # A tibble: 1 × 1\n#&gt;   Y    \n#&gt;   &lt;chr&gt;\n#&gt; 1 y2   \n#&gt; \n#&gt; [[3]]\n#&gt; # A tibble: 0 × 1\n#&gt; # ℹ 1 variable: Y &lt;chr&gt;\n\n\n\n9.4.3.4 group_nest()\n\n\nShow the codelibrary(tidyverse)\nlibrary(broom)\ndata(crickets, package = \"modeldata\")\nnames(crickets)\n#&gt; [1] \"species\" \"temp\"    \"rate\"\n\nsplit_by_species &lt;- crickets %&gt;% \n  group_nest(species) \nsplit_by_species\n\n\n\n\n\n\n\n\nspecies\ndata\n\n\n\nO. exclamationis\n20.8, 20.8, 24.0, 24.0, 24.0, 24.0, 26.2, 26.2, 26.2, 26.2, 28.4, 29.0, 30.4, 30.4, 67.9, 65.1, 77.3, 78.7, 79.4, 80.4, 85.8, 86.6, 87.5, 89.1, 98.6, 100.8, 99.3, 101.7\n\n\nO. niveus\n17.2, 18.3, 18.3, 18.3, 18.9, 18.9, 20.4, 21.0, 21.0, 22.1, 23.5, 24.2, 25.9, 26.5, 26.5, 26.5, 28.6, 44.3, 47.2, 47.6, 49.6, 50.3, 51.8, 60.0, 58.5, 58.9, 60.7, 69.8, 70.9, 76.2, 76.1, 77.0, 77.7, 84.7\n\n\n\n\n\nShow the code\nmodel_by_species &lt;- \n  split_by_species %&gt;% \n  mutate(model = map(data, ~ lm(rate ~ temp, data = .x)))\nmodel_by_species\n\n\n\n\n\n\n\n\n\nspecies\ndata\nmodel\n\n\nO. exclamationis\n20.8, 20.8, 24.0, 24.0, 24.0, 24.0, 26.2, 26.2, 26.2, 26.2, 28.4, 29.0, 30.4, 30.4, 67.9, 65.1, 77.3, 78.7, 79.4, 80.4, 85.8, 86.6, 87.5, 89.1, 98.6, 100.8, 99.3, 101.7\nc((Inte.... | |O. niveus        |17.2, 18.3, 18.3, 18.3, 18.9, 18.9, 20.4, 21.0, 21.0, 22.1, 23.5, 24.2, 25.9, 26.5, 26.5, 26.5, 28.6, 44.3, 47.2, 47.6, 49.6, 50.3, 51.8, 60.0, 58.5, 58.9, 60.7, 69.8, 70.9, 76.2, 76.1, 77.0, 77.7, 84.7 |c((Inte….\n\n\n\n\nShow the code\nmodel_by_species %&gt;% \n  mutate(coef = map(model, tidy)) %&gt;% \n  select(species, coef) %&gt;% \n  unnest(cols = c(coef))\n\n\n\n\n\n\n\n\n\n\n\n\nspecies\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\nO. exclamationis\n(Intercept)\n-11.04\n4.765\n-2.32\n0.039\n\n\nO. exclamationis\ntemp\n3.75\n0.184\n20.41\n0.000\n\n\nO. niveus\n(Intercept)\n-15.39\n2.347\n-6.56\n0.000\n\n\nO. niveus\ntemp\n3.52\n0.105\n33.59\n0.000\n\n\n\n\n\n\n\n9.4.3.5 group_split()",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>数据清洗</span>"
    ]
  },
  {
    "objectID": "transform_tidy.html#整洁操作",
    "href": "transform_tidy.html#整洁操作",
    "title": "\n9  数据清洗\n",
    "section": "\n9.5 整洁操作",
    "text": "9.5 整洁操作\n\n9.5.1 pivot_longer()\n\n\n9.5.1.1 列名包含一个变量名\n\nShow the codebillboard|&gt; DT::datatable()\n\n\n\n\n\n\nShow the codebillboard_longer &lt;- billboard |&gt; \n  pivot_longer(\n    cols = starts_with(\"wk\"), \n    names_to = \"week\", \n    values_to = \"排名\" ,\n    values_drop_na = TRUE,\n  ) |&gt; \n    mutate(\n        week=parse_number(week)\n    )\nbillboard_longer|&gt; DT::datatable()\n\n\n\n\n\n\nShow the codebillboard_longer |&gt; \n  ggplot(aes(x = week, y = 排名, group = track)) + \n  geom_line(alpha = 0.25) + \n  scale_y_reverse()\n\n\n\n歌曲排名随时间变化的折线图\n\n\n\n\n9.5.1.2 列名包含多个变量名\n\nShow the codewho2 |&gt; DT::datatable()\n\n\n\n\n\n\nShow the codewho2 |&gt; \n  pivot_longer(\n    cols = !(country:year),\n    names_to = c(\"diagnosis\", \"gender\", \"age\"), \n    names_sep = \"_\",\n    values_to = \"count\",\n    values_drop_na = T\n  ) |&gt; head()\n\n\n\n\ncountry\nyear\ndiagnosis\ngender\nage\ncount\n\n\n\nAfghanistan\n1997\nsp\nm\n014\n0\n\n\nAfghanistan\n1997\nsp\nm\n1524\n10\n\n\nAfghanistan\n1997\nsp\nm\n2534\n6\n\n\nAfghanistan\n1997\nsp\nm\n3544\n3\n\n\nAfghanistan\n1997\nsp\nm\n4554\n5\n\n\nAfghanistan\n1997\nsp\nm\n5564\n2\n\n\n\n\n\n\n\n9.5.1.3 列名包含变量名和变量值\n\nShow the codehousehold\n\n\n\n\nfamily\ndob_child1\ndob_child2\nname_child1\nname_child2\n\n\n\n1\n1998-11-26\n2000-01-29\nSusan\nJose\n\n\n2\n1996-06-22\nNA\nMark\nNA\n\n\n3\n2002-07-11\n2004-04-05\nSam\nSeth\n\n\n4\n2004-10-10\n2009-08-27\nCraig\nKhai\n\n\n5\n2000-12-05\n2005-02-28\nParker\nGracie\n\n\n\n\n\n\n\nShow the codehousehold |&gt; \n  pivot_longer(\n    cols = !family, \n    names_to = c(\".value\", \"child\"), # 使用透视列名称的第一个组件作为变量名称\n    names_sep = \"_\", \n    values_drop_na = TRUE\n  )\n\n\n\n\nfamily\nchild\ndob\nname\n\n\n\n1\nchild1\n1998-11-26\nSusan\n\n\n1\nchild2\n2000-01-29\nJose\n\n\n2\nchild1\n1996-06-22\nMark\n\n\n3\nchild1\n2002-07-11\nSam\n\n\n3\nchild2\n2004-04-05\nSeth\n\n\n4\nchild1\n2004-10-10\nCraig\n\n\n4\nchild2\n2009-08-27\nKhai\n\n\n5\nchild1\n2000-12-05\nParker\n\n\n5\nchild2\n2005-02-28\nGracie\n\n\n\n\n\n\n\nShow the codedf &lt;- tibble(ID=c(\"A\",\"B\",\"C\"),\n       GDP_2019=c(114,251,152),\n       GDP_2018=c(215,115,141),\n       GDP_2017=c(141,244,243)) \ndf\n\n\n\n\nID\nGDP_2019\nGDP_2018\nGDP_2017\n\n\n\nA\n114\n215\n141\n\n\nB\n251\n115\n244\n\n\nC\n152\n141\n243\n\n\n\n\n\nShow the code\ndf %&gt;% \n  pivot_longer(\n    cols = -ID,\n    names_to =c(\".value\",\"year\"),\n    names_sep = \"_\") %&gt;% \n    arrange(year)\n\n\n\n\nID\nyear\nGDP\n\n\n\nA\n2017\n141\n\n\nB\n2017\n244\n\n\nC\n2017\n243\n\n\nA\n2018\n215\n\n\nB\n2018\n115\n\n\nC\n2018\n141\n\n\nA\n2019\n114\n\n\nB\n2019\n251\n\n\nC\n2019\n152\n\n\n\n\n\n\n\nShow the code\ndf &lt;- tribble(\n  ~class1_name,~class1_major,~class2_name,~class2_major,~class3_name,~class3_major,\n  '张非',\"math\",'李斯','English','王武','statistic',\n  '钟爱','English','陈述','math','孙健','medicine'\n) \ndf\n\n\n\n\n\n\n\n\n\n\n\n\nclass1_name\nclass1_major\nclass2_name\nclass2_major\nclass3_name\nclass3_major\n\n\n\n张非\nmath\n李斯\nEnglish\n王武\nstatistic\n\n\n钟爱\nEnglish\n陈述\nmath\n孙健\nmedicine\n\n\n\n\n\nShow the codedf%&gt;% \n  pivot_longer(\n    col=starts_with(\"class\"),\n    names_to = c(\"group\",\".value\"),\n    names_sep = \"_\",\n  )\n\n\n\n\ngroup\nname\nmajor\n\n\n\nclass1\n张非\nmath\n\n\nclass2\n李斯\nEnglish\n\n\nclass3\n王武\nstatistic\n\n\nclass1\n钟爱\nEnglish\n\n\nclass2\n陈述\nmath\n\n\nclass3\n孙健\nmedicine\n\n\n\n\n\n\n\n9.5.2 pivot_wider()\n\n\nShow the codecms_patient_experience|&gt; DT::datatable()\n\n\n\n\n\n\nShow the codecms_patient_experience |&gt; \n  distinct(measure_cd, measure_title)\n\n\n\n\n\n\n\n\nmeasure_cd\nmeasure_title\n\n\n\nCAHPS_GRP_1\nCAHPS for MIPS SSM: Getting Timely Care, Appointments, and Information\n\n\nCAHPS_GRP_2\nCAHPS for MIPS SSM: How Well Providers Communicate\n\n\nCAHPS_GRP_3\nCAHPS for MIPS SSM: Patient’s Rating of Provider\n\n\nCAHPS_GRP_5\nCAHPS for MIPS SSM: Health Promotion and Education\n\n\nCAHPS_GRP_8\nCAHPS for MIPS SSM: Courteous and Helpful Office Staff\n\n\nCAHPS_GRP_12\nCAHPS for MIPS SSM: Stewardship of Patient Resources\n\n\n\n\n\n\n\nShow the codecms_patient_experience |&gt;\n    pivot_wider(\n        id_cols = starts_with(\"org\"),# 唯一标识列\n        names_from = measure_cd,\n        values_from = prf_rate\n    ) |&gt; DT::datatable()\n\n\n\n\n\n\n9.5.3 tidyr::separate_longer_*()\n\n\nShow the code# df |&gt; separate_longer_delim(cols, delim)\n# df |&gt; separate_longer_position(cols, width)\n# df |&gt; separate_wider_delim(cols, delim, names)\n# df |&gt; separate_wider_position(cols, widths)\n# df |&gt; separate_wider_regex(cols,patterns)\n\n\n\nShow the codedf1 &lt;- tibble(x = c(\"a,b,c\", \"d,e\", \"f\"))\ndf1 |&gt; \n  separate_longer_delim(x, delim = \",\")\n\n\n\n\nx\n\n\n\na\n\n\nb\n\n\nc\n\n\nd\n\n\ne\n\n\nf\n\n\n\n\n\nShow the code\ndf2 &lt;- tibble(x = c(\"1211\", \"131\", \"21\"))\ndf2 |&gt; \n  separate_longer_position(x, width = 1)\n\n\n\n\nx\n\n\n\n1\n\n\n2\n\n\n1\n\n\n1\n\n\n1\n\n\n3\n\n\n1\n\n\n2\n\n\n1\n\n\n\n\n\n\n\n9.5.4 tidyr::separate_wider_*()\n\n\nShow the codedf3 &lt;- tibble(x = c(\"a10.1.2022\", \"b10.2.2011\", \"e15.1.2015\"))\ndf3\n\n\n\n\nx\n\n\n\na10.1.2022\n\n\nb10.2.2011\n\n\ne15.1.2015\n\n\n\n\n\nShow the codedf3 |&gt; \n  separate_wider_delim(\n    x,\n    delim = \".\",\n    names = c(\"code\", \"edition\", \"year\")\n  )\n\n\n\n\ncode\nedition\nyear\n\n\n\na10\n1\n2022\n\n\nb10\n2\n2011\n\n\ne15\n1\n2015\n\n\n\n\n\nShow the codedf3 |&gt; \n  separate_wider_delim(\n    x,\n    delim = \".\",\n    names = c(\"code\", NA, \"year\")\n  )\n\n\n\n\ncode\nyear\n\n\n\na10\n2022\n\n\nb10\n2011\n\n\ne15\n2015\n\n\n\n\n\nShow the code\ndf4 &lt;- tibble(x = c(\"202215TX\", \"202122LA\", \"202325CA\")) \ndf4 |&gt; \n  separate_wider_position(\n    x,\n    widths = c(year = 4, age = 2, state = 2)\n  )\n\n\n\n\nyear\nage\nstate\n\n\n\n2022\n15\nTX\n\n\n2021\n22\nLA\n\n\n2023\n25\nCA\n\n\n\n\n\nShow the code\ndf5 &lt;- tribble(\n    ~ str,\n    \"&lt;Sheryl&gt;-F_34\",\n    \"&lt;Kisha&gt;-F_45\",\n    \"&lt;Brandon&gt;-N_33\",\n    \"&lt;Sharon&gt;-F_38\",\n    \"&lt;Penny&gt;-F_58\",\n    \"&lt;Justin&gt;-M_41\",\n    \"&lt;Patricia&gt;-F_84\",\n)\ndf5 |&gt;\n    separate_wider_regex(str,\n                         patterns = c(\n                             \"&lt;\",\n                             name = \"[A-Za-z]+\",\n                             #匹配 ≥1 个字母\n                             \"&gt;-\",\n                             gender = \".\",\n                             #匹配除\\n以外任意字符\n                             \"_\",\n                             age = \"[0-9]+\"      #匹配 ≥1 个数字\n                         ))\n\n\n\n\nname\ngender\nage\n\n\n\nSheryl\nF\n34\n\n\nKisha\nF\n45\n\n\nBrandon\nN\n33\n\n\nSharon\nF\n38\n\n\nPenny\nF\n58\n\n\nJustin\nM\n41\n\n\nPatricia\nF\n84",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>数据清洗</span>"
    ]
  },
  {
    "objectID": "transform_tidy.html#重编码",
    "href": "transform_tidy.html#重编码",
    "title": "\n9  数据清洗\n",
    "section": "\n9.6 重编码",
    "text": "9.6 重编码\n\nShow the codestudents &lt;- read_csv(\"data/students.csv\", na = c(\"N/A\", \"\"))\nstudents\n\n\n\n\n\n\n\n\n\n\n\nStudent ID\nFull Name\nfavourite.food\nmealPlan\nAGE\n\n\n\n1\nSunil Huffmann\nStrawberry yoghurt\nLunch only\n4\n\n\n2\nBarclay Lynn\nFrench fries\nLunch only\n5\n\n\n3\nJayendra Lyne\nNA\nBreakfast and lunch\n7\n\n\n4\nLeon Rossini\nAnchovies\nLunch only\nNA\n\n\n5\nChidiegwu Dunkel\nPizza\nBreakfast and lunch\nfive\n\n\n6\nG??ven? Attila\nIce cream\nLunch only\n6\n\n\n\n\n\n\n\n9.6.0.1 变量名\n\nShow the codeif(!require(janitor)) install.packages(\"janitor\")\n\n# snake_case\nstudents |&gt;\n    janitor::clean_names(case=\"snake\") #\"title\"  \"lower_camel\" \"upper_camel\"\n\n\n\n\n\n\n\n\n\n\n\nstudent_id\nfull_name\nfavourite_food\nmeal_plan\nage\n\n\n\n1\nSunil Huffmann\nStrawberry yoghurt\nLunch only\n4\n\n\n2\nBarclay Lynn\nFrench fries\nLunch only\n5\n\n\n3\nJayendra Lyne\nNA\nBreakfast and lunch\n7\n\n\n4\nLeon Rossini\nAnchovies\nLunch only\nNA\n\n\n5\nChidiegwu Dunkel\nPizza\nBreakfast and lunch\nfive\n\n\n6\nG??ven? Attila\nIce cream\nLunch only\n6\n\n\n\n\n\n\n\n9.6.0.2 变量值\n缺失值",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>数据清洗</span>"
    ]
  },
  {
    "objectID": "functionals.html",
    "href": "functionals.html",
    "title": "\n10  泛函purrr\n",
    "section": "",
    "text": "10.1 map 变体\n高阶函数 （higher-order functions）\n泛函（functionals）是将函数作为输入并返回向量作为输出的函数。\n在R语言中，purrr是一个函数式编程包，它提供了一种简洁的方式来迭代数据结构。这个包的名字来源于它所提供的核心功能，即“纯”（pure）函数的迭代。在函数式编程中，纯函数是指给定相同的输入总是返回相同输出的函数，并且没有副作用（如更改全局变量的值-&gt;、写入磁盘write_csv()或显示在屏幕上print()）。\nmap 的基本构造如下，实际上是用 C 语言编写的，以节省性能，保留名称，并支持一些快捷方式。\nShow the codesimple_map &lt;- function(x, f, ...) {\n  out &lt;- vector(\"list\", length(x)) # 分配一个与输入长度相同的列表\n  for (i in seq_along(x)) {        # 用 for 循环填充列表\n    out[[i]] &lt;- f(x[[i]], ...)\n  }\n  out\n}",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>泛函`purrr`</span>"
    ]
  },
  {
    "objectID": "functionals.html#map-变体",
    "href": "functionals.html#map-变体",
    "title": "\n10  泛函purrr\n",
    "section": "",
    "text": "参数 \\ 返回\n列表\n原子\n同类型\n无\n\n\n\n一个参数\nmap()\n\nmap_lgl(), …\nmodify()\nwalk()\n\n\n两个参数\nmap2()\n\nmap2_lgl(), …\nmodify2()\nwalk2()\n\n\n一个参数 + 索引\nimap()\n\nimap_lgl(), …\nimodify()\niwalk()\n\n\nN 个参数\npmap()\n\npmap_lgl(), …\n—\npwalk()\n\n\n\n\n\n\n10.1.1 返回列表\npurrr::map(1:3,f) 接受一个向量和一个函数，为向量的每个元素调用一次函数，并在列表中返回结果，等价于list(f(1), f(2), f(3))\n\nShow the codetriple &lt;- function(x) x * 3\nmap(1:3, triple)\n#&gt; [[1]]\n#&gt; [1] 3\n#&gt; \n#&gt; [[2]]\n#&gt; [1] 6\n#&gt; \n#&gt; [[3]]\n#&gt; [1] 9\n\n\n\n10.1.2 返回原子向量\nmap_lgl()、map_int()、map_dbl()、map_chr() 每个都返回一个指定类型的原子向量\n\nShow the codemap_chr(mtcars, typeof) \n#&gt;      mpg      cyl     disp       hp     drat       wt     qsec       vs \n#&gt; \"double\" \"double\" \"double\" \"double\" \"double\" \"double\" \"double\" \"double\" \n#&gt;       am     gear     carb \n#&gt; \"double\" \"double\" \"double\"\nmap_lgl(mtcars, is.double)  \n#&gt;  mpg  cyl disp   hp drat   wt qsec   vs   am gear carb \n#&gt; TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nn_unique &lt;- function(x)length(unique(x)) \nmap_int(mtcars, n_unique)  \n#&gt;  mpg  cyl disp   hp drat   wt qsec   vs   am gear carb \n#&gt;   25    3   27   22   22   29   30    2    2    3    6\n\nmap_dbl(mtcars, mean)\n#&gt;        mpg        cyl       disp         hp       drat         wt       qsec \n#&gt;  20.090625   6.187500 230.721875 146.687500   3.596563   3.217250  17.848750 \n#&gt;         vs         am       gear       carb \n#&gt;   0.437500   0.406250   3.687500   2.812500\n\n\n\nShow the codeby_cyl &lt;- split(mtcars, mtcars$cyl)\nby_cyl %&gt;% \n  map(~ lm(mpg ~ wt, data = .x)) %&gt;% \n  map(coef) %&gt;% \n  map_dbl(2)\n#&gt;         4         6         8 \n#&gt; -5.647025 -2.780106 -2.192438\n\n\n\n10.1.3 返回与输入类型相同的输出：modify()\n\n\nShow the codedf &lt;- data.frame(\n  x = 1:3,\n  y = 6:4\n)\n\n# 返回列表\nmap(df, ~ .x * 2)\n#&gt; $x\n#&gt; [1] 2 4 6\n#&gt; \n#&gt; $y\n#&gt; [1] 12 10  8\n\n# 返回数据框\nmodify(df, ~ .x * 2)\n\n\n\n\nx\ny\n\n\n\n2\n12\n\n\n4\n10\n\n\n6\n8\n\n\n\n\n\n\n\n10.1.4 无返回\n某些函数主要是为了它们的副作用（如cat()、write_csv()、ggsave()）而被调用，并且捕获和存储它们的结果是没有意义的。\n\nShow the codewelcome &lt;- function(x) {\n  cat(\"Welcome \", x, \"!\\n\", sep = \"\")\n}\nnames &lt;- c(\"Hadley\", \"Jenny\")\nmap(names, welcome)\n#&gt; Welcome Hadley!\n#&gt; Welcome Jenny!\n#&gt; [[1]]\n#&gt; NULL\n#&gt; \n#&gt; [[2]]\n#&gt; NULL\n\n\n\nShow the codewalk(names, welcome)\n#&gt; Welcome Hadley!\n#&gt; Welcome Jenny!\n\n\n\nShow the codecyls &lt;- split(mtcars, mtcars$cyl)\npaths &lt;- paste0(\"data/cyl-\", names(cyls), \".csv\")\nwalk2(cyls, paths, write.csv)\n\n\n等价于write.csv(cyls[[1]]paths[[1]])、write.csv(cyls[[2]],paths[[2]])\nwrite.csv(cyls[[3]], paths[[3]])\n\n10.1.5 两个输入\n\nShow the codeset.seed(10)\nxs &lt;- map(1:8, ~ runif(10))\n\n\n# 权重\nset.seed(100)\nws &lt;- map(1:8, ~ rpois(10, 5) + 1)\n\nxs[[1]][[1]] &lt;- NA\nxs\n#&gt; [[1]]\n#&gt;  [1]         NA 0.30676851 0.42690767 0.69310208 0.08513597 0.22543662\n#&gt;  [7] 0.27453052 0.27230507 0.61582931 0.42967153\n#&gt; \n#&gt; [[2]]\n#&gt;  [1] 0.65165567 0.56773775 0.11350898 0.59592531 0.35804998 0.42880942\n#&gt;  [7] 0.05190332 0.26417767 0.39879073 0.83613414\n#&gt; \n#&gt; [[3]]\n#&gt;  [1] 0.8647212 0.6153524 0.7751099 0.3555687 0.4058500 0.7066469 0.8382877\n#&gt;  [8] 0.2395891 0.7707715 0.3558977\n#&gt; \n#&gt; [[4]]\n#&gt;  [1] 0.53559704 0.09308813 0.16980304 0.89983245 0.42263761 0.74774647\n#&gt;  [7] 0.82265258 0.95465365 0.68544451 0.50050323\n#&gt; \n#&gt; [[5]]\n#&gt;  [1] 0.27548386 0.22890394 0.01443391 0.72896456 0.24988047 0.16118328\n#&gt;  [7] 0.01704265 0.48610035 0.10290017 0.80154700\n#&gt; \n#&gt; [[6]]\n#&gt;  [1] 0.3543281 0.9364325 0.2458664 0.4731415 0.1915609 0.5832220 0.4594732\n#&gt;  [8] 0.4674340 0.3998326 0.5052856\n#&gt; \n#&gt; [[7]]\n#&gt;  [1] 0.03188816 0.11446759 0.46893548 0.39698674 0.83361919 0.76112174\n#&gt;  [7] 0.57335645 0.44750805 0.08380201 0.21913855\n#&gt; \n#&gt; [[8]]\n#&gt;  [1] 0.07557029 0.53442678 0.64135658 0.52573932 0.03928139 0.54585984\n#&gt;  [7] 0.37276310 0.96130241 0.25734157 0.20795168\n\n# 未加权均值\nmap_dbl(xs, mean)\n#&gt; [1]        NA 0.4266693 0.5927795 0.5831959 0.3066440 0.4616577 0.3930824\n#&gt; [8] 0.4161593\n# 加权均值  weighted.mean()\nmap2_dbl(xs, ws, weighted.mean)\n#&gt; [1]        NA 0.4590300 0.5834602 0.5998278 0.3067582 0.4448242 0.3947274\n#&gt; [8] 0.4418898\nmap2_dbl(xs, ws, weighted.mean, na.rm = TRUE)\n#&gt; [1] 0.3479728 0.4590300 0.5834602 0.5998278 0.3067582 0.4448242 0.3947274\n#&gt; [8] 0.4418898\n\n\n\n10.1.6 遍历值和索引\n\nimap(x, f)等价于map2(x, names(x), f)、map2(x, seq_along(x), f)\nimap()通常可用于构建标签：\n\nShow the codeimap_chr(iris, ~ paste0(\"The first value of \", .y, \" is \", .x[[1]]))\n#&gt;                             Sepal.Length \n#&gt; \"The first value of Sepal.Length is 5.1\" \n#&gt;                              Sepal.Width \n#&gt;  \"The first value of Sepal.Width is 3.5\" \n#&gt;                             Petal.Length \n#&gt; \"The first value of Petal.Length is 1.4\" \n#&gt;                              Petal.Width \n#&gt;  \"The first value of Petal.Width is 0.2\" \n#&gt;                                  Species \n#&gt;   \"The first value of Species is setosa\"\nmap2_chr(iris,names(iris),~ paste0(\"The first value of \", .y, \" is \", .x[[1]]))\n#&gt;                             Sepal.Length \n#&gt; \"The first value of Sepal.Length is 5.1\" \n#&gt;                              Sepal.Width \n#&gt;  \"The first value of Sepal.Width is 3.5\" \n#&gt;                             Petal.Length \n#&gt; \"The first value of Petal.Length is 1.4\" \n#&gt;                              Petal.Width \n#&gt;  \"The first value of Petal.Width is 0.2\" \n#&gt;                                  Species \n#&gt;   \"The first value of Species is setosa\"\n\n\n如果向量未命名，则第二个参数将是索引：\n\nShow the codex &lt;- map(1:6, ~ sample(1000, 10))\nimap_chr(x, ~ paste0(\"The maximum value of \", .y, \" is \", max(.x)))\n#&gt; [1] \"The maximum value of 1 is 965\" \"The maximum value of 2 is 978\"\n#&gt; [3] \"The maximum value of 3 is 949\" \"The maximum value of 4 is 871\"\n#&gt; [5] \"The maximum value of 5 is 843\" \"The maximum value of 6 is 848\"\nmap2_chr(x,seq_along(x), ~ paste0(\"The highest value of \", .y, \" is \", max(.x)))\n#&gt; [1] \"The highest value of 1 is 965\" \"The highest value of 2 is 978\"\n#&gt; [3] \"The highest value of 3 is 949\" \"The highest value of 4 is 871\"\n#&gt; [5] \"The highest value of 5 is 843\" \"The highest value of 6 is 848\"\n\n\n\n10.1.7 任意数量的输入\n\nmap2(x, y, f ) 等价于 pmap(list(x, y), f)\n\nShow the codepmap_dbl(list(xs, ws), weighted.mean)\n#&gt; [1]        NA 0.4590300 0.5834602 0.5998278 0.3067582 0.4448242 0.3947274\n#&gt; [8] 0.4418898\npmap_dbl(list(xs, ws), weighted.mean, na.rm = TRUE)\n#&gt; [1] 0.3479728 0.4590300 0.5834602 0.5998278 0.3067582 0.4448242 0.3947274\n#&gt; [8] 0.4418898\n\n\n\nShow the code# 命名列表 调用函数\nparams &lt;- tibble::tribble(\n  ~ n, ~ min, ~ max,\n   1L,     0,     1,\n   2L,    10,   100,\n   3L,   100,  1000\n)\ntypeof(params)\n#&gt; [1] \"list\"\npmap(params, runif)\n#&gt; [[1]]\n#&gt; [1] 0.08703467\n#&gt; \n#&gt; [[2]]\n#&gt; [1] 22.92254 91.76306\n#&gt; \n#&gt; [[3]]\n#&gt; [1] 210.2793 755.9765 955.3395",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>泛函`purrr`</span>"
    ]
  },
  {
    "objectID": "functionals.html#reduce-家族",
    "href": "functionals.html#reduce-家族",
    "title": "\n10  泛函purrr\n",
    "section": "\n10.2 reduce 家族",
    "text": "10.2 reduce 家族\n通过迭代应用两个输入的函数（a binary function）将列表简化为单个值。\n\n10.2.1 reduce()\n\nreduce()获取长度为 n 的向量，并通过一次调用具有一对值的函数来生成长度为 1 的向量\n\n\n\n\nreduce(1:4, f)等价于f(f(f(1, 2), 3), 4)\n\nShow the codel &lt;- map(1:4, ~ sample(1:10, 15, replace = T))\n\n# 交集\nreduce(l, intersect)\n#&gt; [1] 10  5  7  4\n\n# 并集\nreduce(l, union)\n#&gt;  [1] 10  5  7  8  1  6  3  4  2  9\n\n\n\nShow the codesimple_reduce &lt;- function(x, f) {\n  out &lt;- x[[1]]\n  for (i in seq(2, length(x))) {\n    out &lt;- f(out, x[[i]])\n  }\n  out\n}\n\n\n\n10.2.2 accumulate()\n\n第一个变体 ，不仅返回最终结果，还返回所有中间结果\n\nShow the codeaccumulate(l, intersect)\n#&gt; [[1]]\n#&gt;  [1] 10  5  7  8  1  8  6 10  3  6 10  6  8  3  4\n#&gt; \n#&gt; [[2]]\n#&gt; [1] 10  5  7  1  4\n#&gt; \n#&gt; [[3]]\n#&gt; [1] 10  5  7  1  4\n#&gt; \n#&gt; [[4]]\n#&gt; [1] 10  5  7  4\n\n\n\nShow the codex &lt;- c(4, 3, 10)\nreduce(x, `+`)\n#&gt; [1] 17\n\naccumulate(x, `+`)\n#&gt; [1]  4  7 17\n\n\n\n10.2.3 reduce2(x,y,f,.init)",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>泛函`purrr`</span>"
    ]
  },
  {
    "objectID": "functionals.html#谓词泛函",
    "href": "functionals.html#谓词泛函",
    "title": "\n10  泛函purrr\n",
    "section": "\n10.3 谓词泛函",
    "text": "10.3 谓词泛函\n在编程和数学中，“谓词”（Predicate）是一个表达式，它返回一个布尔值（真或假）。谓词通常用于逻辑和函数式编程中，作为判断或决策的基础。\n谓词泛函（Predicate Functionals）是谓词的一个特例，它是一个接受一个或多个参数，并返回一个布尔值的函数。谓词泛函在很多编程语言中都很常见，尤其是在支持函数式编程的语言中。\n谓词泛函的一些关键特点包括：\n\n返回布尔值：谓词泛函的输出是一个布尔值，即真（true）或假（false）。\n接受参数：谓词泛函可以接收一个或多个参数，这些参数的值会影响函数的返回结果。\n无副作用：在函数式编程中，谓词泛函通常是纯函数，即它们不会产生副作用，也不会修改外部状态。\n逻辑判断：谓词泛函常用于逻辑判断，如条件语句（if）、循环（while、for）等。\n\n\n\nsome(.x, .p)如果存在元素匹配，则返回TRUE;every(.x, .p)如果所有元素都匹配，则返回TRUE;none(.x, .p)如果没有元素匹配，则返回TRUE\n当它看到第一个时返回，当它们看到第一个或时返回。\n\ndetect(.x, .p)返回第一个匹配项的值;detect_index(.x, .p) 返回第一个匹配项的位置。\nkeep(.x, .p) 保留所有匹配的元素; discard(.x, .p)删除所有匹配的元素。\n\n\nShow the codedf &lt;- data.frame(\n  num1 = c(0, 10, 20),\n  num2 = c(5, 6, 7),\n  chr1 = c(\"a\", \"b\", \"c\")\n)\ndetect(df, is.factor)\n#&gt; NULL\ndetect_index(df, is.factor)\n#&gt; [1] 0\nstr(keep(df, is.factor))\n#&gt; 'data.frame':    3 obs. of  0 variables\nstr(discard(df, is.factor))\n#&gt; 'data.frame':    3 obs. of  3 variables:\n#&gt;  $ num1: num  0 10 20\n#&gt;  $ num2: num  5 6 7\n#&gt;  $ chr1: chr  \"a\" \"b\" \"c\"\n\n\nmap变体也有谓词泛函\n\nShow the codestr(map_if(df, is.numeric, mean))\n#&gt; List of 3\n#&gt;  $ num1: num 10\n#&gt;  $ num2: num 6\n#&gt;  $ chr1: chr [1:3] \"a\" \"b\" \"c\"\nstr(modify_if(df, is.numeric, mean))\n#&gt; 'data.frame':    3 obs. of  3 variables:\n#&gt;  $ num1: num  10 10 10\n#&gt;  $ num2: num  6 6 6\n#&gt;  $ chr1: chr  \"a\" \"b\" \"c\"\nstr(map(keep(df, is.numeric), mean))\n#&gt; List of 2\n#&gt;  $ num1: num 10\n#&gt;  $ num2: num 6",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>泛函`purrr`</span>"
    ]
  },
  {
    "objectID": "functionals.html#base-包泛函",
    "href": "functionals.html#base-包泛函",
    "title": "\n10  泛函purrr\n",
    "section": "\n10.4 base 包泛函",
    "text": "10.4 base 包泛函\n\n10.4.1 apply()\n\nbase::apply()\n\nX，要汇总的矩阵或数组。\nMARGIN，一个整数向量，给出要汇总的维度， 1 = 行，2 = 列，以此类推（参数名称来自思考 联合分布的边距）。\nFUN，一个汇总函数。\n\n\nShow the codea3d &lt;- array(1:24, c(4, 3, 2))\na3d\n#&gt; , , 1\n#&gt; \n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]    1    5    9\n#&gt; [2,]    2    6   10\n#&gt; [3,]    3    7   11\n#&gt; [4,]    4    8   12\n#&gt; \n#&gt; , , 2\n#&gt; \n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]   13   17   21\n#&gt; [2,]   14   18   22\n#&gt; [3,]   15   19   23\n#&gt; [4,]   16   20   24\napply(a3d, c(1, 2), mean)\n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]    7   11   15\n#&gt; [2,]    8   12   16\n#&gt; [3,]    9   13   17\n#&gt; [4,]   10   14   18\n\n\nlapply()、sapply() 和 vapply() 针对的都是列表结构的数据，sapply()是简化（simplified）版本的 lapply()，而 vapply() 则在 sapply() 的基础上加了结果验证，以保证可靠性。\n\nShow the codeset.seed(10)\n\ntemp &lt;- list(\n  35 + rnorm(10, mean = 1, sd = 10),\n  20 + rnorm(5, mean = 1, sd = 3),\n  25 + rnorm(22, mean = 2, sd = 6),\n  33 + rnorm(14, mean = 4, sd = 20)\n)\nbasic &lt;- function(x) {\n  c(min = min(x), mean = mean(x), median = median(x), max = max(x))\n}\n\n\n\nShow the codelapply(temp, basic)\n#&gt; [[1]]\n#&gt;      min     mean   median      max \n#&gt; 19.73327 31.09343 32.89923 39.89794 \n#&gt; \n#&gt; [[2]]\n#&gt;      min     mean   median      max \n#&gt; 20.28530 23.00890 23.26734 24.30534 \n#&gt; \n#&gt; [[3]]\n#&gt;      min     mean   median      max \n#&gt; 13.88828 23.72360 24.09008 32.81140 \n#&gt; \n#&gt; [[4]]\n#&gt;       min      mean    median       max \n#&gt;  1.818265 31.437784 29.748184 58.731028\nsapply(temp, basic)\n#&gt;            [,1]     [,2]     [,3]      [,4]\n#&gt; min    19.73327 20.28530 13.88828  1.818265\n#&gt; mean   31.09343 23.00890 23.72360 31.437784\n#&gt; median 32.89923 23.26734 24.09008 29.748184\n#&gt; max    39.89794 24.30534 32.81140 58.731028\n\n\n\nShow the codevapply(temp, basic, numeric(4))\n#&gt;            [,1]     [,2]     [,3]      [,4]\n#&gt; min    19.73327 20.28530 13.88828  1.818265\n#&gt; mean   31.09343 23.00890 23.72360 31.437784\n#&gt; median 32.89923 23.26734 24.09008 29.748184\n#&gt; max    39.89794 24.30534 32.81140 58.731028\n\n\nvapply() 第 3 个参数传入对每一个子集调用函数后结果的预期，上述设定为包含 4 个元素的数值型向量。",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>泛函`purrr`</span>"
    ]
  },
  {
    "objectID": "functionals.html#apply函数簇",
    "href": "functionals.html#apply函数簇",
    "title": "\n10  泛函purrr\n",
    "section": "\n10.5 apply函数簇",
    "text": "10.5 apply函数簇\n\n10.5.1 apply()\n\n\nShow the codeapply(X = mtcars, MARGIN = 2, FUN = mean)\n#&gt;        mpg        cyl       disp         hp       drat         wt       qsec \n#&gt;  20.090625   6.187500 230.721875 146.687500   3.596563   3.217250  17.848750 \n#&gt;         vs         am       gear       carb \n#&gt;   0.437500   0.406250   3.687500   2.812500\n\n\n\n10.5.2 aggregate()\n\n\nShow the codeaggregate(x = mtcars,\n          by = list(am=mtcars$am,cyl=mtcars$cyl),\n          FUN = mean)  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nam\ncyl\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n0\n4\n22.90000\n4\n135.8667\n84.66667\n3.770000\n2.935000\n20.97000\n1.000\n0\n3.666667\n1.666667\n\n\n1\n4\n28.07500\n4\n93.6125\n81.87500\n4.183750\n2.042250\n18.45000\n0.875\n1\n4.250000\n1.500000\n\n\n0\n6\n19.12500\n6\n204.5500\n115.25000\n3.420000\n3.388750\n19.21500\n1.000\n0\n3.500000\n2.500000\n\n\n1\n6\n20.56667\n6\n155.0000\n131.66667\n3.806667\n2.755000\n16.32667\n0.000\n1\n4.333333\n4.666667\n\n\n0\n8\n15.05000\n8\n357.6167\n194.16667\n3.120833\n4.104083\n17.14250\n0.000\n0\n3.000000\n3.083333\n\n\n1\n8\n15.40000\n8\n326.0000\n299.50000\n3.880000\n3.370000\n14.55000\n0.000\n1\n5.000000\n6.000000\n\n\n\n\n\nShow the codeaggregate(.~am+cyl,\n          data = mtcars,\n          FUN = mean)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nam\ncyl\nmpg\ndisp\nhp\ndrat\nwt\nqsec\nvs\ngear\ncarb\n\n\n\n0\n4\n22.90000\n135.8667\n84.66667\n3.770000\n2.935000\n20.97000\n1.000\n3.666667\n1.666667\n\n\n1\n4\n28.07500\n93.6125\n81.87500\n4.183750\n2.042250\n18.45000\n0.875\n4.250000\n1.500000\n\n\n0\n6\n19.12500\n204.5500\n115.25000\n3.420000\n3.388750\n19.21500\n1.000\n3.500000\n2.500000\n\n\n1\n6\n20.56667\n155.0000\n131.66667\n3.806667\n2.755000\n16.32667\n0.000\n4.333333\n4.666667\n\n\n0\n8\n15.05000\n357.6167\n194.16667\n3.120833\n4.104083\n17.14250\n0.000\n3.000000\n3.083333\n\n\n1\n8\n15.40000\n326.0000\n299.50000\n3.880000\n3.370000\n14.55000\n0.000\n5.000000\n6.000000\n\n\n\n\n\nShow the codeaggregate(mpg~am+cyl,\n          data = mtcars,\n          FUN = summary)\n\n\n\n\nam\ncyl\nmpg\n\n\n\n0\n4\n21.50000\n\n\n1\n4\n21.40000\n\n\n0\n6\n17.80000\n\n\n1\n6\n19.70000\n\n\n0\n8\n10.40000\n\n\n1\n8\n15.00000\n\n\n\n\n\n\n\n10.5.3 by(), tapply()\n\nby()是应用于数据框的tapply的面向对象包装器。\n\nShow the codeby(data = mtcars[,1:3],\n   INDICES = list(cyl=mtcars$cyl),\n   FUN = summary)\n#&gt; cyl: 4\n#&gt;       mpg             cyl         disp       \n#&gt;  Min.   :21.40   Min.   :4   Min.   : 71.10  \n#&gt;  1st Qu.:22.80   1st Qu.:4   1st Qu.: 78.85  \n#&gt;  Median :26.00   Median :4   Median :108.00  \n#&gt;  Mean   :26.66   Mean   :4   Mean   :105.14  \n#&gt;  3rd Qu.:30.40   3rd Qu.:4   3rd Qu.:120.65  \n#&gt;  Max.   :33.90   Max.   :4   Max.   :146.70  \n#&gt; ------------------------------------------------------------ \n#&gt; cyl: 6\n#&gt;       mpg             cyl         disp      \n#&gt;  Min.   :17.80   Min.   :6   Min.   :145.0  \n#&gt;  1st Qu.:18.65   1st Qu.:6   1st Qu.:160.0  \n#&gt;  Median :19.70   Median :6   Median :167.6  \n#&gt;  Mean   :19.74   Mean   :6   Mean   :183.3  \n#&gt;  3rd Qu.:21.00   3rd Qu.:6   3rd Qu.:196.3  \n#&gt;  Max.   :21.40   Max.   :6   Max.   :258.0  \n#&gt; ------------------------------------------------------------ \n#&gt; cyl: 8\n#&gt;       mpg             cyl         disp      \n#&gt;  Min.   :10.40   Min.   :8   Min.   :275.8  \n#&gt;  1st Qu.:14.40   1st Qu.:8   1st Qu.:301.8  \n#&gt;  Median :15.20   Median :8   Median :350.5  \n#&gt;  Mean   :15.10   Mean   :8   Mean   :353.1  \n#&gt;  3rd Qu.:16.25   3rd Qu.:8   3rd Qu.:390.0  \n#&gt;  Max.   :19.20   Max.   :8   Max.   :472.0\n\nby(data = mtcars[,1:3],\n   INDICES = factor(mtcars$cyl),\n   FUN = function(x) lm( disp ~ mpg, data = x))\n#&gt; factor(mtcars$cyl): 4\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = disp ~ mpg, data = x)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)          mpg  \n#&gt;     233.067       -4.798  \n#&gt; \n#&gt; ------------------------------------------------------------ \n#&gt; factor(mtcars$cyl): 6\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = disp ~ mpg, data = x)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)          mpg  \n#&gt;     125.122        2.947  \n#&gt; \n#&gt; ------------------------------------------------------------ \n#&gt; factor(mtcars$cyl): 8\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = disp ~ mpg, data = x)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)          mpg  \n#&gt;      560.87       -13.76\n\ntapply(X = mtcars[,1:3],\n       INDEX = list(cyl=mtcars$cyl),\n       FUN = summary)\n#&gt; $`4`\n#&gt;       mpg             cyl         disp       \n#&gt;  Min.   :21.40   Min.   :4   Min.   : 71.10  \n#&gt;  1st Qu.:22.80   1st Qu.:4   1st Qu.: 78.85  \n#&gt;  Median :26.00   Median :4   Median :108.00  \n#&gt;  Mean   :26.66   Mean   :4   Mean   :105.14  \n#&gt;  3rd Qu.:30.40   3rd Qu.:4   3rd Qu.:120.65  \n#&gt;  Max.   :33.90   Max.   :4   Max.   :146.70  \n#&gt; \n#&gt; $`6`\n#&gt;       mpg             cyl         disp      \n#&gt;  Min.   :17.80   Min.   :6   Min.   :145.0  \n#&gt;  1st Qu.:18.65   1st Qu.:6   1st Qu.:160.0  \n#&gt;  Median :19.70   Median :6   Median :167.6  \n#&gt;  Mean   :19.74   Mean   :6   Mean   :183.3  \n#&gt;  3rd Qu.:21.00   3rd Qu.:6   3rd Qu.:196.3  \n#&gt;  Max.   :21.40   Max.   :6   Max.   :258.0  \n#&gt; \n#&gt; $`8`\n#&gt;       mpg             cyl         disp      \n#&gt;  Min.   :10.40   Min.   :8   Min.   :275.8  \n#&gt;  1st Qu.:14.40   1st Qu.:8   1st Qu.:301.8  \n#&gt;  Median :15.20   Median :8   Median :350.5  \n#&gt;  Mean   :15.10   Mean   :8   Mean   :353.1  \n#&gt;  3rd Qu.:16.25   3rd Qu.:8   3rd Qu.:390.0  \n#&gt;  Max.   :19.20   Max.   :8   Max.   :472.0\n\n\n\n10.5.4 lapply(), sapply()\n\nlapply() returns a list of the same length as X,\nsapply() is a user-friendly version and wrapper of lapply() by default returning a vector or matrix\n\nShow the codex &lt;- list(a = 1:10, beta = exp(-3:3), logic = c(TRUE,FALSE,FALSE,TRUE))\nlapply(X = x,FUN = quantile)\n#&gt; $a\n#&gt;    0%   25%   50%   75%  100% \n#&gt;  1.00  3.25  5.50  7.75 10.00 \n#&gt; \n#&gt; $beta\n#&gt;          0%         25%         50%         75%        100% \n#&gt;  0.04978707  0.25160736  1.00000000  5.05366896 20.08553692 \n#&gt; \n#&gt; $logic\n#&gt;   0%  25%  50%  75% 100% \n#&gt;  0.0  0.0  0.5  1.0  1.0\n\nsapply(x, quantile)\n#&gt;          a        beta logic\n#&gt; 0%    1.00  0.04978707   0.0\n#&gt; 25%   3.25  0.25160736   0.0\n#&gt; 50%   5.50  1.00000000   0.5\n#&gt; 75%   7.75  5.05366896   1.0\n#&gt; 100% 10.00 20.08553692   1.0\n\n\n\n10.5.5 vapply\n\n\nShow the codeby_cyl &lt;- split(mtcars, mtcars$cyl)\nmodels &lt;- lapply(by_cyl, function(data) lm(mpg ~ wt, data = data))\nmodels\n#&gt; $`4`\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = mpg ~ wt, data = data)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)           wt  \n#&gt;      39.571       -5.647  \n#&gt; \n#&gt; \n#&gt; $`6`\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = mpg ~ wt, data = data)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)           wt  \n#&gt;       28.41        -2.78  \n#&gt; \n#&gt; \n#&gt; $`8`\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = mpg ~ wt, data = data)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)           wt  \n#&gt;      23.868       -2.192\nvapply(models, function(x) coef(x)[[2]], double(1))\n#&gt;         4         6         8 \n#&gt; -5.647025 -2.780106 -2.192438\n\n\n\n10.5.6 数学泛函",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>泛函`purrr`</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html",
    "href": "dynamic_report.html",
    "title": "\n11  动态报告\n",
    "section": "",
    "text": "1 文本格式\nhttps://quarto.org/docs/guide/\nhttps://www.productive-r-workflow.com/quarto-tricks",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#section-text_format",
    "href": "dynamic_report.html#section-text_format",
    "title": "\n11  动态报告\n",
    "section": "",
    "text": "output\nsyntax\n\n\n\ncode\n` code `\n\n\n\n粗体\n**粗体**\n\n\n\n斜体\n*斜体*\n\n\n\n颜色标注\n[颜色标注]{style=\"color:red\"}\n\n\n\n下横线\n[下横线]{.underline}\n\n\n\n删除线\n~~删除线~~\n\n\n\n上标X2\n\nX^2^\n\n\n\n下标 X1\n\nX~1~\n\n\n\n\n水平线分隔符\n\n\n***\n\n\n\nhttps://r4ds.hadley.nz/\n&lt;https://r4ds.hadley.nz/&gt;\n\n\n\nquarto\n[quarto](https://quarto.org)\n\n\n\n\n | \n\n\n\n\n\n\nBlockquote\n\n&gt; Blockquote",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#yaml",
    "href": "dynamic_report.html#yaml",
    "title": "\n11  动态报告\n",
    "section": "\n2 YAML",
    "text": "2 YAML\n\n2.1 Execute chunk\n\n\n\n\n\n\n\nOption\nDefault\nEffects\n\n\n\necho\ntrue\n\n\nfalse: hide code in output\\\n\ninclude code cell syntaxfenced\n\n\n\n\neval\ntrue\n\nfalse: don’t run code\n\n\ninclude\ntrue\n\nfalse: don’t include code or results\n\n\noutput\ntrue\n\n\nfalse: don’t include results\\\n\ntreat results as raw markdownasis\n\n\n\n\nwarning\ntrue\n\nfalse: don’t include warnings in output\n\n\nerror\nfalse\n\ntrue: include error in output and continue with render\n\n\n\n2.2 添加页脚\n您可以创建包含某些内容的文件。然后将其显示在 quarto 文档的底部。html\n首先，创建一个名为 file 的文件。在其中复制以下内容：footer.html\n在YAML block 中添加 include-after-body: \"footer.html\"\n\n2.3 标题上方添加额外空间\n使用自定义样式表可以直接实现此效果。此样式表将包含专门设计用于在标题上方添加额外空间的规则。\n首先创建一个名为并包含以下规则的 CSS 文件：style.css\nh1, .h1, h2, .h2, h3, .h3 {\n  margin-top: 84px;\n}\n这些 CSS 规则将在 1、2 和 3 级标题（分别由h1 、h2 和h3 标签表示）上方添加 84 像素的边距。\n最后，在YAML block 中添加 css: style.css",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#内部链接",
    "href": "dynamic_report.html#内部链接",
    "title": "\n11  动态报告\n",
    "section": "\n3 内部链接",
    "text": "3 内部链接\n如 文本格式 是第一节",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#脚注",
    "href": "dynamic_report.html#脚注",
    "title": "\n11  动态报告\n",
    "section": "\n4 脚注",
    "text": "4 脚注\n第一个1\nFor instance2, here is one attached to the word carrot3.",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#figure",
    "href": "dynamic_report.html#figure",
    "title": "\n11  动态报告\n",
    "section": "\n5 Figure",
    "text": "5 Figure\n\n5.1 Caption\n\nShow the codelibrary(tidyverse)\n\nmpg %&gt;%\n  ggplot(aes(x = reorder(class, hwy), y = hwy, fill = class)) +\n  geom_boxplot() +\n  xlab(\"class\") +\n  theme(legend.position = \"none\")\n\n\n\nFigure: Here is a really important caption.\n\n\n\n标题文本居中\ninclude-in-header:\n   - text: |\n       &lt;style&gt;\n       figcaption {\n         text-align: center;\n       }\n       &lt;/style&gt;\n\n5.2 交互式图\n\nShow the codelibrary(plotly)\np &lt;- mpg %&gt;%\n  ggplot(aes(x = reorder(class, hwy), y = hwy, fill = class)) +\n  geom_boxplot() +\n  xlab(\"class\") +\n  theme(legend.position = \"none\")\n\n# Turn it interactive with ggplotly\np &lt;- ggplotly(p)\np\n\n\n\n\n\n\n5.3 选项卡\nDiv .class .panel-tabset .nav-pills\n\n\nScatterplot\nBoxplot\nBarplot\n\n\n\n\nShow the codempg %&gt;%\n  ggplot(aes(x = reorder(class, hwy), y = hwy, fill = class)) +\n  geom_point() +\n  xlab(\"class\") +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n\nShow the codempg %&gt;%\n  ggplot(aes(x = reorder(class, hwy), y = hwy, fill = class)) +\n  geom_boxplot() +\n  xlab(\"class\") +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n\nShow the codempg %&gt;%\n  ggplot(aes(x = reorder(class, hwy), y = hwy, fill = class)) +\n  geom_bar(stat = \"identity\") +\n  xlab(\"class\") +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n\n\n5.4 全宽图\n\nShow the code\nlibrary(patchwork)\nlibrary(ggplot2)\n\nggplot(mtcars) + geom_point(aes(mpg, disp))+\nggplot(mtcars) + geom_boxplot(aes(gear, disp, group = gear))+\nggplot(mtcars) + geom_smooth(aes(disp, qsec))+\nggplot(mtcars) + geom_bar(aes(carb))\n\n\n\n\n\n\n\nShow the codeplot(1:25,1:25,pch=c(1:25))\nplot(1:25,c(1:25)^2,type=\"b\",pch=c(1:25))\n\n\n\n\n\n\n\n\n\n(a) 点\n\n\n\n\n\n\n\n\n\n(b) 线\n\n\n\n\n\n\n图 1: 左右图\n\n\n如左图 图 11.1 (a) 所示，点有25种不同的形状，\n右图 图 11.1 (b) 所示。\n\n5.4.1 EDA\n引用章节： Section 11.5.4.1 and Section 11.7\n引用图片 图 11.2 shows two histograms displaying the distributions of price and area individually.\n直方图ggplot(mpg, aes(cty)) +\n  geom_histogram() +\n  labs(title = \"Histogram of cty\")\n\nggplot(mpg, aes(x =hwy)) +\n  geom_histogram() +\n  labs(title = \"Histogram of hwy\")\n\n\n\n\n\n\n\n\n\n(a) Histogram of ctys\n\n\n\n\n\n\n\n\n\n(b) Histogram of hwys\n\n\n\n\n\n\n图 2: Histograms of mpg",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#表格",
    "href": "dynamic_report.html#表格",
    "title": "\n11  动态报告\n",
    "section": "\n6 表格",
    "text": "6 表格\n表 11.1 displays basic summary statistics for these two variables.\n\nShow the codempg %&gt;%\n  summarise(\n    mean_displ=mean(displ),\n    mean_hwy=mean(hwy),\n    mean_cty=mean(cty),\n    .by = cyl\n    ) %&gt;%\n  knitr::kable(digits = c(0, 0, 0, 0, 2))\n\n\n表 1: Table Summary statistics\n\n\n\n\ncyl\nmean_displ\nmean_hwy\nmean_cty\n\n\n\n4\n2\n29\n21\n\n\n6\n3\n23\n16\n\n\n8\n5\n18\n13\n\n\n5\n2\n29\n20",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#sec-formula",
    "href": "dynamic_report.html#sec-formula",
    "title": "\n11  动态报告\n",
    "section": "\n7 公式",
    "text": "7 公式\nBlack-Scholes (式 11.1) is a mathematical model that seeks to explain the behavior of financial derivatives, most commonly options:\n\\[ \\frac{\\partial \\mathrm C}{ \\partial \\mathrm t } + \\frac{1}{2}\\sigma^{2} \\mathrm S^{2} \\frac{\\partial^{2} \\mathrm C}{\\partial \\mathrm C^2}   + \\mathrm r \\mathrm S \\frac{\\partial \\mathrm C}{\\partial \\mathrm S}\\ =   \\mathrm r \\mathrm C   \\tag{1}\\]\nWe can fit a simple linear regression model of the form shown in 式 11.2.\n\\[\nprice = \\hat{\\beta}_0 + \\hat{\\beta}_1 \\times area + \\epsilon\n\\tag{2}\\]",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#callout",
    "href": "dynamic_report.html#callout",
    "title": "\n11  动态报告\n",
    "section": "\n8 Callout",
    "text": "8 Callout\n\n\n\n\n\n\nNote\n\n\n\nNote that there are five types of callouts, including: note, tip, warning, caution, and important.\n\n\n\n\n\n\n\n\nTip\n\n\n\nThis is an example of an tip callout\n\n\n\n\n\n\n\n\nCaution\n\n\n\nThis is an example of an caution callout\n\n\n\n\n\n\n\n\nWarning\n\n\n\nThis is an example of an warning callout\n\n\n\n\n\n\n\n\nImportant\n\n\n\nThis is an example of an important callout\n\n\n\n\n\n\n\n\nTip 1\n\n\n\n交叉引用 a Tip\nAdd an ID starting with #tip- to reference a tip.\n\n\nSee Tip 11.1…\n自定义callout\n\n\n\n\n\n\n\nNote\n\n\n\nThis is a custom callout.\nUsing CSS, you can control pretty much everything.\nThis div is even shaking every now and then 🙃\n\n\n\n\n\n标注类型\n前缀\n\n\n\nnote\n#nte-\n\n\ntip\n#tip-\n\n\nwarning\n#wrn-\n\n\nimportant\n#imp-\n\n\ncaution\n#cau-",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#页边距",
    "href": "dynamic_report.html#页边距",
    "title": "\n11  动态报告\n",
    "section": "\n9 页边距",
    "text": "9 页边距\n\n9.1 R结果\n\nShow the codeknitr::kable(\n  mtcars[1:3, 1:3]\n)\n\n\n\n\n\nmpg\ncyl\ndisp\n\n\n\nMazda RX4\n21.0\n6\n160\n\n\nMazda RX4 Wag\n21.0\n6\n160\n\n\nDatsun 710\n22.8\n4\n108\n\n\n\n\n\n9.2 Div\n\n\nHi! I’m a side note! 🔥",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#latex",
    "href": "dynamic_report.html#latex",
    "title": "\n11  动态报告\n",
    "section": "\n10 LaTex",
    "text": "10 LaTex\n\n10.1 公式对齐\n\\[\\begin{aligned}\n  f(x) =& \\sum_{k=0}^\\infty \\frac{1}{k!} x^k \\\\\n  =& e^x\n\\end{aligned}\\]\n\n10.2 括号等高\n\\[\\phi(x) = \\frac{1}{\\sqrt{2\\pi}} \\exp\\left\\{ \\frac{1}{2} x^2 \\right\\} \\]\n\n10.3 矩阵\n\\[\n\\begin{bmatrix}\nx_{11} & x_{12}&...&x_{1p} \\\\\nx_{21} & x_{22}&...&x_{2p} \\\\\n\\vdots &\\vdots &   &\\vdots\\\\\nx_{n1} & x_{n2}&...&x_{np} \\\\\n\\end{bmatrix}\n\\]\n\n10.4 向量表示\n\\[   \\boldsymbol{v} = (v_1, v_2)^T \\]",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#定理类段落",
    "href": "dynamic_report.html#定理类段落",
    "title": "\n11  动态报告\n",
    "section": "\n11 定理类段落",
    "text": "11 定理类段落\n\n术语\n\n定义：三角形的内角和等于180°。\n\n\n或者\n引用Theorem 11.1。\n\nTheorem 1 (勒贝格定理) 一元函数黎曼可积， 当且仅当其不连续点的集合为零测集。\n\n\n\n环境名\n默认显示名\n标签前缀\n\n\n\ntheorem\nTheorem\n#thm-\n\n\nlemma\nLemma\n#lem-\n\n\ncorollary\nCorollary\n#cor-\n\n\nproposition\nProposition\n#prp-\n\n\nconjecture\nConjecture\n#cnj-\n\n\ndefinition\nDefinition\n#def-\n\n\nexample\nExample\n#exm-\n\n\nexercise\nExercise\n#exr-",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#opts_chunkset.r",
    "href": "dynamic_report.html#opts_chunkset.r",
    "title": "\n11  动态报告\n",
    "section": "\n12 _opts_chunk$set.R",
    "text": "12 _opts_chunk$set.R\n\nShow the codeknitr::opts_chunk$set(\n  # comment = \"#&gt;\",\n  # collapse = TRUE,\n  # cache = TRUE,\n  # message = FALSE,\n  # error = FALSE,\n)\nggplot2::theme_set(new = ggplot2::theme_classic())",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#内联代码",
    "href": "dynamic_report.html#内联代码",
    "title": "\n11  动态报告\n",
    "section": "\n13 内联代码",
    "text": "13 内联代码\nUse computed values directly in text sections. Code is evaluated at render and results appear as text.\n\nShow the codea &lt;- 1+2+3\n\n\n\n13.0.1 Knitr\na 的值为 6",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#文本高亮",
    "href": "dynamic_report.html#文本高亮",
    "title": "\n11  动态报告\n",
    "section": "\n14 文本高亮",
    "text": "14 文本高亮\n&lt;Text highlight\nkeyboard\n Ctrl+C &gt;",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#会话信息",
    "href": "dynamic_report.html#会话信息",
    "title": "\n11  动态报告\n",
    "section": "\n15 会话信息",
    "text": "15 会话信息\n\nSession Information,click to show\n\n\n\nShow the codesessionInfo()\n#&gt; R version 4.4.1 (2024-06-14 ucrt)\n#&gt; Platform: x86_64-w64-mingw32/x64\n#&gt; Running under: Windows 10 x64 (build 19045)\n#&gt; \n#&gt; Matrix products: default\n#&gt; \n#&gt; \n#&gt; locale:\n#&gt; [1] LC_COLLATE=Chinese (Simplified)_China.utf8 \n#&gt; [2] LC_CTYPE=Chinese (Simplified)_China.utf8   \n#&gt; [3] LC_MONETARY=Chinese (Simplified)_China.utf8\n#&gt; [4] LC_NUMERIC=C                               \n#&gt; [5] LC_TIME=Chinese (Simplified)_China.utf8    \n#&gt; \n#&gt; time zone: Asia/Shanghai\n#&gt; tzcode source: internal\n#&gt; \n#&gt; attached base packages:\n#&gt; [1] stats     graphics  grDevices utils     datasets  methods   base     \n#&gt; \n#&gt; other attached packages:\n#&gt;  [1] plotly_4.10.4    writexl_1.5.0    readxl_1.4.3     patchwork_1.2.0 \n#&gt;  [5] lubridate_1.9.3  forcats_1.0.0    stringr_1.5.1    dplyr_1.1.4     \n#&gt;  [9] purrr_1.0.2      readr_2.1.5      tidyr_1.3.1      tibble_3.2.1    \n#&gt; [13] ggplot2_3.5.1    tidyverse_2.0.0  conflicted_1.2.0 showtext_0.9-7  \n#&gt; [17] showtextdb_3.0   sysfonts_0.8.9  \n#&gt; \n#&gt; loaded via a namespace (and not attached):\n#&gt;  [1] gtable_0.3.5            xfun_0.45               htmlwidgets_1.6.4      \n#&gt;  [4] lattice_0.22-6          tzdb_0.4.0              crosstalk_1.2.1        \n#&gt;  [7] vctrs_0.6.5             tools_4.4.1             generics_0.1.3         \n#&gt; [10] stats4_4.4.1            fansi_1.0.6             pkgconfig_2.0.3        \n#&gt; [13] Matrix_1.7-0            data.table_1.15.4       S4Vectors_0.42.1       \n#&gt; [16] lifecycle_1.0.4         GenomeInfoDbData_1.2.12 farver_2.1.2           \n#&gt; [19] compiler_4.4.1          munsell_0.5.1           codetools_0.2-20       \n#&gt; [22] GenomeInfoDb_1.40.1     htmltools_0.5.8.1       lazyeval_0.2.2         \n#&gt; [25] yaml_2.3.9              pillar_1.9.0            cachem_1.1.0           \n#&gt; [28] nlme_3.1-165            tidyselect_1.2.1        digest_0.6.36          \n#&gt; [31] stringi_1.8.4           splines_4.4.1           labeling_0.4.3         \n#&gt; [34] fastmap_1.2.0           grid_4.4.1              colorspace_2.1-0       \n#&gt; [37] cli_3.6.3               magrittr_2.0.3          utf8_1.2.4             \n#&gt; [40] withr_3.0.0             scales_1.3.0            UCSC.utils_1.0.0       \n#&gt; [43] timechange_0.3.0        rmarkdown_2.27          XVector_0.44.0         \n#&gt; [46] httr_1.4.7              cellranger_1.1.0        hms_1.1.3              \n#&gt; [49] memoise_2.0.1           evaluate_0.24.0         knitr_1.48             \n#&gt; [52] GenomicRanges_1.56.1    IRanges_2.38.1          viridisLite_0.4.2      \n#&gt; [55] mgcv_1.9-1              rlang_1.1.4             glue_1.7.0             \n#&gt; [58] BiocGenerics_0.50.0     rstudioapi_0.16.0       jsonlite_1.8.8         \n#&gt; [61] R6_2.5.1                zlibbioc_1.50.0",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#footnotes",
    "href": "dynamic_report.html#footnotes",
    "title": "\n11  动态报告\n",
    "section": "",
    "text": "WANG,A.,et al.(2025)↩︎\ndafhaifhafoahfo↩︎\nThe carrot (Daucus carota subsp. sativus) is a root vegetable, typically orange in color↩︎",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "data.table.html",
    "href": "data.table.html",
    "title": "\n12  data.table\n",
    "section": "",
    "text": "12.1 dtplyr 语法\nDTPLYR 使用 DPLYR 的语法s实现 data.table 的速度；编写 DPLYR（和 TidyR）代码，DTPLYR 将其转换为等效的 Data.Table。\nShow the codemtcars2 &lt;- lazy_dt(mtcars)\nShow the codedtplyr &lt;- mtcars2 %&gt;% \n  filter(wt &lt; 5) %&gt;% \n  mutate(l100k = 235.21 / mpg) %&gt;% # liters / 100 km\n  group_by(cyl) %&gt;% \n  summarise(l100k = mean(l100k))\ndtplyr\n#&gt; Source: local data table [3 x 2]\n#&gt; Call:   `_DT1`[wt &lt; 5][, `:=`(l100k = 235.21/mpg)][, .(l100k = mean(l100k)), \n#&gt;     keyby = .(cyl)]\n#&gt; \n#&gt;     cyl l100k\n#&gt;   &lt;dbl&gt; &lt;dbl&gt;\n#&gt; 1     4  9.05\n#&gt; 2     6 12.0 \n#&gt; 3     8 14.9 \n#&gt; \n#&gt; # Use as.data.table()/as.data.frame()/as_tibble() to access results\n\ndtplyr %&gt;% show_query()\n#&gt; `_DT1`[wt &lt; 5][, `:=`(l100k = 235.21/mpg)][, .(l100k = mean(l100k)), \n#&gt;     keyby = .(cyl)]\n\ndtplyr %&gt;% as_tibble()\n\n\n\n\ncyl\nl100k\n\n\n\n4\n9.048898\n\n\n6\n11.970180\n\n\n8\n14.871885\nShow the codedt &lt;- data.table::as.data.table(mtcars)\ndt[wt&lt;5][, `:=`(l100k = 235.21/mpg)][, .(l100k = mean(l100k)), keyby = .(cyl)]\n\n\n\n\ncyl\nl100k\n\n\n\n4\n9.048898\n\n\n6\n11.970180\n\n\n8\n14.871885",
    "crumbs": [
      "大数据",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>`data.table`</span>"
    ]
  },
  {
    "objectID": "data.table.html#data.table-语法",
    "href": "data.table.html#data.table-语法",
    "title": "\n12  data.table\n",
    "section": "\n12.2 data.table 语法",
    "text": "12.2 data.table 语法\nDT[i, j, by]\n\n##   R:                 i                 j        by\n## SQL:  where | order by   select | update  group by\n\n\n\n\nhttps://cran.r-project.org/web/packages/data.table/vignettes/datatable-intro.html",
    "crumbs": [
      "大数据",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>`data.table`</span>"
    ]
  },
  {
    "objectID": "arrow.html",
    "href": "arrow.html",
    "title": "\n13  Arrow\n",
    "section": "",
    "text": "13.1 安装\napache-arrow.tar.gz\nread_parquet()：读取 Parquet 格式的文件\nread_delim_arrow()：读取带分隔符的文本文件\nread_csv_arrow()：读取逗号分隔值 （CSV） 文件\nread_tsv_arrow()：读取制表符分隔值 （TSV） 文件",
    "crumbs": [
      "大数据",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Arrow</span>"
    ]
  },
  {
    "objectID": "polars.html",
    "href": "polars.html",
    "title": "\n14  Polars\n",
    "section": "",
    "text": "14.1 polars\nShow the codeif(!require(polars))\n    install.packages(\"polars\", repos = \"https://rpolars.r-universe.dev\")\n\npolars_info()\n#&gt; Polars R package version : 0.18.0\n#&gt; Rust Polars crate version: 0.41.3\n#&gt; \n#&gt; Thread pool size: 8 \n#&gt; \n#&gt; Features:                               \n#&gt; default                    TRUE\n#&gt; full_features              TRUE\n#&gt; disable_limit_max_threads  TRUE\n#&gt; nightly                    TRUE\n#&gt; sql                        TRUE\n#&gt; rpolars_debug_print       FALSE\n#&gt; \n#&gt; Code completion: deactivated\npolars_code_completion_activate()\nPolars 的主要函数存储在 “pl” 命名空间中，可以使用 “pl$” 前缀进行访问，以防止与其他组件和base R 函数名称冲突\nShow the codeiris_polars &lt;- pl$DataFrame(iris)\niris_polars\n\n\n\nshape: (150, 5)\n\n\n\nSepal.Length\nSepal.Width\nPetal.Length\nPetal.Width\nSpecies\n\n\nf64\nf64\nf64\nf64\ncat\n\n\n\n\n5.1\n3.5\n1.4\n0.2\n\"setosa\"\n\n\n4.9\n3.0\n1.4\n0.2\n\"setosa\"\n\n\n4.7\n3.2\n1.3\n0.2\n\"setosa\"\n\n\n4.6\n3.1\n1.5\n0.2\n\"setosa\"\n\n\n5.0\n3.6\n1.4\n0.2\n\"setosa\"\n\n\n5.4\n3.9\n1.7\n0.4\n\"setosa\"\n\n\n4.6\n3.4\n1.4\n0.3\n\"setosa\"\n\n\n5.0\n3.4\n1.5\n0.2\n\"setosa\"\n\n\n4.4\n2.9\n1.4\n0.2\n\"setosa\"\n\n\n4.9\n3.1\n1.5\n0.1\n\"setosa\"\n\n\n5.4\n3.7\n1.5\n0.2\n\"setosa\"\n\n\n4.8\n3.4\n1.6\n0.2\n\"setosa\"\n\n\n4.8\n3.0\n1.4\n0.1\n\"setosa\"\n\n\n4.3\n3.0\n1.1\n0.1\n\"setosa\"\n\n\n5.8\n4.0\n1.2\n0.2\n\"setosa\"\n\n\n5.7\n4.4\n1.5\n0.4\n\"setosa\"\n\n\n5.4\n3.9\n1.3\n0.4\n\"setosa\"\n\n\n5.1\n3.5\n1.4\n0.3\n\"setosa\"\n\n\n5.7\n3.8\n1.7\n0.3\n\"setosa\"\n\n\n5.1\n3.8\n1.5\n0.3\n\"setosa\"\n\n\n…\n…\n…\n…\n…\n\n\n7.4\n2.8\n6.1\n1.9\n\"virginica\"\n\n\n7.9\n3.8\n6.4\n2.0\n\"virginica\"\n\n\n6.4\n2.8\n5.6\n2.2\n\"virginica\"\n\n\n6.3\n2.8\n5.1\n1.5\n\"virginica\"\n\n\n6.1\n2.6\n5.6\n1.4\n\"virginica\"\n\n\n7.7\n3.0\n6.1\n2.3\n\"virginica\"\n\n\n6.3\n3.4\n5.6\n2.4\n\"virginica\"\n\n\n6.4\n3.1\n5.5\n1.8\n\"virginica\"\n\n\n6.0\n3.0\n4.8\n1.8\n\"virginica\"\n\n\n6.9\n3.1\n5.4\n2.1\n\"virginica\"\n\n\n6.7\n3.1\n5.6\n2.4\n\"virginica\"\n\n\n6.9\n3.1\n5.1\n2.3\n\"virginica\"\n\n\n5.8\n2.7\n5.1\n1.9\n\"virginica\"\n\n\n6.8\n3.2\n5.9\n2.3\n\"virginica\"\n\n\n6.7\n3.3\n5.7\n2.5\n\"virginica\"\n\n\n6.7\n3.0\n5.2\n2.3\n\"virginica\"\n\n\n6.3\n2.5\n5.0\n1.9\n\"virginica\"\n\n\n6.5\n3.0\n5.2\n2.0\n\"virginica\"\n\n\n6.2\n3.4\n5.4\n2.3\n\"virginica\"\n\n\n5.9\n3.0\n5.1\n1.8\n\"virginica\"\n访问属性\nShow the codeiris_polars$shape\n#&gt; [1] 150   5\niris_polars$height\n#&gt; [1] 150\niris_polars$width\n#&gt; [1] 5\n\n# polars syntax\npl$DataFrame(iris)$\n  select(c(\"Sepal.Length\", \"Sepal.Width\", \"Petal.Length\", \"Petal.Width\"))$\n  with_columns(\n    pl$when(\n      (pl$col(\"Petal.Length\") / pl$col(\"Petal.Width\") &gt; 3)\n    )$then(pl$lit(\"long\"))$\n      otherwise(pl$lit(\"large\"))$\n      alias(\"petal_type\")\n  )$\n  filter(pl$col(\"Sepal.Length\")$is_between(4.5, 5.5))$\n  head(6)\n\n\n\nshape: (6, 5)\n\n\n\nSepal.Length\nSepal.Width\nPetal.Length\nPetal.Width\npetal_type\n\n\nf64\nf64\nf64\nf64\nstr\n\n\n\n\n5.1\n3.5\n1.4\n0.2\n\"long\"\n\n\n4.9\n3.0\n1.4\n0.2\n\"long\"\n\n\n4.7\n3.2\n1.3\n0.2\n\"long\"\n\n\n4.6\n3.1\n1.5\n0.2\n\"long\"\n\n\n5.0\n3.6\n1.4\n0.2\n\"long\"\n\n\n5.4\n3.9\n1.7\n0.4\n\"long\"\nShow the codepl$read_csv(\"data/Advertising.csv\")\n\n\n\nshape: (200, 5)\n\n\n\n\nTV\nradio\nnewspaper\nsales\n\n\ni64\nf64\nf64\nf64\nf64\n\n\n\n\n1\n230.1\n37.8\n69.2\n22.1\n\n\n2\n44.5\n39.3\n45.1\n10.4\n\n\n3\n17.2\n45.9\n69.3\n9.3\n\n\n4\n151.5\n41.3\n58.5\n18.5\n\n\n5\n180.8\n10.8\n58.4\n12.9\n\n\n6\n8.7\n48.9\n75.0\n7.2\n\n\n7\n57.5\n32.8\n23.5\n11.8\n\n\n8\n120.2\n19.6\n11.6\n13.2\n\n\n9\n8.6\n2.1\n1.0\n4.8\n\n\n10\n199.8\n2.6\n21.2\n10.6\n\n\n11\n66.1\n5.8\n24.2\n8.6\n\n\n12\n214.7\n24.0\n4.0\n17.4\n\n\n13\n23.8\n35.1\n65.9\n9.2\n\n\n14\n97.5\n7.6\n7.2\n9.7\n\n\n15\n204.1\n32.9\n46.0\n19.0\n\n\n16\n195.4\n47.7\n52.9\n22.4\n\n\n17\n67.8\n36.6\n114.0\n12.5\n\n\n18\n281.4\n39.6\n55.8\n24.4\n\n\n19\n69.2\n20.5\n18.3\n11.3\n\n\n20\n147.3\n23.9\n19.1\n14.6\n\n\n…\n…\n…\n…\n…\n\n\n181\n156.6\n2.6\n8.3\n10.5\n\n\n182\n218.5\n5.4\n27.4\n12.2\n\n\n183\n56.2\n5.7\n29.7\n8.7\n\n\n184\n287.6\n43.0\n71.8\n26.2\n\n\n185\n253.8\n21.3\n30.0\n17.6\n\n\n186\n205.0\n45.1\n19.6\n22.6\n\n\n187\n139.5\n2.1\n26.6\n10.3\n\n\n188\n191.1\n28.7\n18.2\n17.3\n\n\n189\n286.0\n13.9\n3.7\n15.9\n\n\n190\n18.7\n12.1\n23.4\n6.7\n\n\n191\n39.5\n41.1\n5.8\n10.8\n\n\n192\n75.5\n10.8\n6.0\n9.9\n\n\n193\n17.2\n4.1\n31.6\n5.9\n\n\n194\n166.8\n42.0\n3.6\n19.6\n\n\n195\n149.7\n35.6\n6.0\n17.3\n\n\n196\n38.2\n3.7\n13.8\n7.6\n\n\n197\n94.2\n4.9\n8.1\n9.7\n\n\n198\n177.0\n9.3\n6.4\n12.8\n\n\n199\n283.6\n42.0\n66.2\n25.5\n\n\n200\n232.1\n8.6\n8.7\n13.4",
    "crumbs": [
      "大数据",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Polars</span>"
    ]
  },
  {
    "objectID": "polars.html#polars",
    "href": "polars.html#polars",
    "title": "\n14  Polars\n",
    "section": "",
    "text": "R polars\nCookbook Polars for R",
    "crumbs": [
      "大数据",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Polars</span>"
    ]
  },
  {
    "objectID": "polars.html#tidypolars",
    "href": "polars.html#tidypolars",
    "title": "\n14  Polars\n",
    "section": "\n14.2 tidypolars\n",
    "text": "14.2 tidypolars\n\n\nShow the codeif(!require(tidypolars))\n    install.packages('tidypolars',\n                     repos = c('https://etiennebacher.r-universe.dev', getOption(\"repos\"))\n    )\n\niris |&gt; \n  as_polars_df() |&gt; \n  select(starts_with(c(\"Sep\", \"Pet\"))) |&gt; \n  mutate(\n    petal_type = ifelse((Petal.Length / Petal.Width) &gt; 3, \"long\", \"large\")\n  ) |&gt; \n  filter(between(Sepal.Length, 4.5, 5.5)) |&gt; \n  head()\n\n\n\nshape: (6, 5)\n\n\n\nSepal.Length\nSepal.Width\nPetal.Length\nPetal.Width\npetal_type\n\n\nf64\nf64\nf64\nf64\nstr\n\n\n\n\n5.1\n3.5\n1.4\n0.2\n\"long\"\n\n\n4.9\n3.0\n1.4\n0.2\n\"long\"\n\n\n4.7\n3.2\n1.3\n0.2\n\"long\"\n\n\n4.6\n3.1\n1.5\n0.2\n\"long\"\n\n\n5.0\n3.6\n1.4\n0.2\n\"long\"\n\n\n5.4\n3.9\n1.7\n0.4\n\"long\"",
    "crumbs": [
      "大数据",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Polars</span>"
    ]
  },
  {
    "objectID": "parallel_computing.html",
    "href": "parallel_computing.html",
    "title": "\n15  并行计算\n",
    "section": "",
    "text": "15.1 硬件\nParallel computing\nShow the codeif(!require(benchmarkme)) install.packages(\"benchmarkme\")\n1字节（byte）= 8位（bit） 二进制数 = 1个 ASCII 字符。\nInternational System of Units (SI)\nShow the code# 随机存取存储器 Random access memory,RAM\nget_ram()\n#&gt; 33.9 GB\n\n\n# CPU\nget_cpu()\n#&gt; $vendor_id\n#&gt; [1] \"GenuineIntel\"\n#&gt; \n#&gt; $model_name\n#&gt; [1] \"Intel(R) Core(TM) Ultra 5 125H\"\n#&gt; \n#&gt; $no_of_cores\n#&gt; [1] 18\nstandard hard disk drives (HDDs)\nSolid state drives (SSDs)",
    "crumbs": [
      "大数据",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>并行计算</span>"
    ]
  },
  {
    "objectID": "parallel_computing.html#并行计算",
    "href": "parallel_computing.html#并行计算",
    "title": "\n15  并行计算\n",
    "section": "\n15.2 并行计算",
    "text": "15.2 并行计算\n\n\n\n\nCluster\nMaster\nWorker\nJob -&gt; (Spilt) -&gt; task 1,…,n, -&gt; (feed) -&gt; R worker\nhttps://www.futureverse.org/\n\n15.2.1 furrr 包\n\n15.2.2 future.apply 包\n\n15.2.3 BiocParallel 包",
    "crumbs": [
      "大数据",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>并行计算</span>"
    ]
  },
  {
    "objectID": "spark.html",
    "href": "spark.html",
    "title": "\n16  Spark\n",
    "section": "",
    "text": "16.1 安装\nhttps://spark.posit.co/\nApache Spark 是用于大规模数据处理的统一分析引擎。\nSpark 提供了一组超出 MapReduce 的更丰富的动词，以方便优化在多台计算机中运行的代码。Spark 还将数据加载到内存中，使操作速度比 Hadoop 的磁盘存储快得多。",
    "crumbs": [
      "大数据",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Spark</span>"
    ]
  },
  {
    "objectID": "spark.html#安装",
    "href": "spark.html#安装",
    "title": "\n16  Spark\n",
    "section": "",
    "text": "16.1.1 java 8\nhttps://java.com/download\n\nShow the codesystem(command = \"E:/java/bin/java.exe -version\",intern = T) %&gt;% cat(.,sep = \"\\n\")\n\n\n# 在 R 中临时设置 JAVA_HOME 环境变量\n# Sys.setenv(JAVA_HOME = \"E:/java\")\n\n\n\n16.1.2 sparklyr\n\nShow the code#install.packages(\"sparklyr\")\npackageVersion(\"sparklyr\")\n\n\n\n16.1.3 spark\n\nShow the codelibrary(sparklyr)\n# C:\\\\Users\\\\DELL\\\\AppData\\\\Local/spark\noptions(spark.install.dir = \"E:/spark/\")\nspark_install_dir()\n# spark_available_versions()\n\n#spark_install(version = \"3.3\")\nspark_installed_versions()\n\n\n# spark_uninstall(version = \"1.6.3\", hadoop = \"2.6\")",
    "crumbs": [
      "大数据",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Spark</span>"
    ]
  },
  {
    "objectID": "spark.html#连接",
    "href": "spark.html#连接",
    "title": "\n16  Spark\n",
    "section": "\n16.2 连接",
    "text": "16.2 连接\n\nShow the codelibrary(sparklyr)\nsc &lt;- spark_connect(master = \"local\")",
    "crumbs": [
      "大数据",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Spark</span>"
    ]
  },
  {
    "objectID": "spark.html#使用",
    "href": "spark.html#使用",
    "title": "\n16  Spark\n",
    "section": "\n16.3 使用",
    "text": "16.3 使用\n\nShow the codecars &lt;- copy_to(sc, mtcars)\n\ncars\n\n\n\nShow the codelibrary(dplyr)\nselect(cars, hp, mpg) %&gt;%\n  sample_n(100) %&gt;%\n  collect() %&gt;%\n  plot()\n\n\n\nShow the codemodel &lt;- ml_linear_regression(cars, mpg ~ hp)\nmodel\n\nmodel %&gt;%\n  ml_predict(copy_to(sc, data.frame(hp = 250 + 10 * 1:10))) %&gt;%\n  transmute(hp = hp, mpg = prediction) %&gt;%\n  full_join(select(cars, hp, mpg)) %&gt;%\n  collect() %&gt;%\n  plot()\n\n\n\nShow the codespark_write_csv(cars, \"data/spark/cars.csv\")\n\ncars &lt;- spark_read_csv(sc, \"data/spark/cars.csv\")\n\n\n\n16.3.1 分布式\n\nShow the codecars %&gt;% spark_apply(~round(.x))\n\n\n\n16.3.2 流\n\nShow the codedir.create(\"data/spark/input\")\ndir.create(\"data/spark/output\")\nwrite.csv(mtcars, \"data/spark/input/cars_1.csv\", row.names = F)\n\n\nstream &lt;-stream_read_csv(sc, \"data/spark/input/\") %&gt;%\n    select(mpg, cyl, disp) %&gt;% \n    stream_write_csv(\"data/spark/output/\")\n\ndir(\"data/spark/output\", pattern = \".csv\")\n\n\nwrite.csv(mtcars, \"data/spark/input/cars_2.csv\", row.names = F)\n\n# 几秒钟后\ndir(\"data/spark/output\", pattern = \".csv\")\n\n\nstream_stop(stream)\n\nfile.remove(\"data/spark/input\")\nfile.remove(\"data/spark/output\")",
    "crumbs": [
      "大数据",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Spark</span>"
    ]
  },
  {
    "objectID": "spark.html#web-界面",
    "href": "spark.html#web-界面",
    "title": "\n16  Spark\n",
    "section": "\n16.4 Web 界面",
    "text": "16.4 Web 界面\n\nShow the codespark_web(sc)",
    "crumbs": [
      "大数据",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Spark</span>"
    ]
  },
  {
    "objectID": "spark.html#断开连接",
    "href": "spark.html#断开连接",
    "title": "\n16  Spark\n",
    "section": "\n16.5 断开连接",
    "text": "16.5 断开连接\n\nShow the codespark_disconnect(sc)\nspark_disconnect_all()",
    "crumbs": [
      "大数据",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Spark</span>"
    ]
  },
  {
    "objectID": "Rcpp.html",
    "href": "Rcpp.html",
    "title": "\n17  Rcpp\n",
    "section": "",
    "text": "17.1 数据结构\nRcpp\nRcpp4everyone\nhttps://dirk.eddelbuettel.com/papers/useR2019_rcpp_tutorial.pdf\nhttps://www.runoob.com/cplusplus/cpp-tutorial.html",
    "crumbs": [
      "大数据",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Rcpp</span>"
    ]
  },
  {
    "objectID": "Rcpp.html#数据结构",
    "href": "Rcpp.html#数据结构",
    "title": "\n17  Rcpp\n",
    "section": "",
    "text": "17.1.1 向量类\nNumericVector IntegerVector CharacterVector LogicalVector\n\nShow the codelibrary(Rcpp)\nsourceCpp(\"function/sum_cpp.cpp\")\n#&gt; \n#&gt; &gt; sum_cpp(c(1, 2, 3))\n#&gt; [1] 6\n\nsum_cpp(mpg$displ)\n#&gt; [1] 812.4\nsum(mpg$displ)\n#&gt; [1] 812.4\n\nsourceCpp(\"function/mean_cpp.cpp\")\n#&gt; \n#&gt; &gt; x = c(1, 2, 3, 4, 5)\n#&gt; \n#&gt; &gt; mean_cpp(x)\n#&gt; [1] 3\nmean_cpp(mpg$displ)\n#&gt; [1] 3.471795\n\n\nNumericMatrix IntegerMatrix CharacterMatrix LogicalMatrix\n\n17.1.2 数据框类\nDataFrame\n\n17.1.3 列表类\nList\n\nShow the code# 平均百分比误差\nsourceCpp(\"function/mpe.cpp\")\n#&gt; \n#&gt; &gt; model &lt;- lm(mpg ~ wt, data = mtcars)\n#&gt; \n#&gt; &gt; mpe(model)\n#&gt; [1] -0.01541615\nmod &lt;- lm(mpg ~ wt, data = mtcars)\nmpe(mod)\n#&gt; [1] -0.01541615\n\n\n\n17.1.4 函数类\n\nShow the codecppFunction(\"RObject callWithOne(Function f) {\n  return f(1);\n}\")\n\ncallWithOne(function(x) x + 1)\n#&gt; [1] 2\ncallWithOne(paste)\n#&gt; [1] \"1\"\n\n\n\n17.1.5 属性\n\nShow the codecppFunction('NumericVector attribs() {\n  NumericVector out = NumericVector::create(1, 2, 3);\n\n  out.names() = CharacterVector::create(\"a\", \"b\", \"c\");\n  out.attr(\"my-attr\") = \"my-value\";\n  out.attr(\"class\") = \"my-class\";\n\n  return out;\n}')\n\n\nattribs()\n#&gt; a b c \n#&gt; 1 2 3 \n#&gt; attr(,\"my-attr\")\n#&gt; [1] \"my-value\"\n#&gt; attr(,\"class\")\n#&gt; [1] \"my-class\"",
    "crumbs": [
      "大数据",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Rcpp</span>"
    ]
  },
  {
    "objectID": "Rcpp.html#rcpp-sugar",
    "href": "Rcpp.html#rcpp-sugar",
    "title": "\n17  Rcpp\n",
    "section": "\n17.2 Rcpp sugar",
    "text": "17.2 Rcpp sugar",
    "crumbs": [
      "大数据",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Rcpp</span>"
    ]
  },
  {
    "objectID": "R_Python.html",
    "href": "R_Python.html",
    "title": "R⬌Python",
    "section": "",
    "text": "对象转换",
    "crumbs": [
      "大数据",
      "R⬌Python"
    ]
  },
  {
    "objectID": "R_Python.html#对象转换",
    "href": "R_Python.html#对象转换",
    "title": "R⬌Python",
    "section": "",
    "text": "Type conversions\n\n\n\n\n\n\nR\nPython\n例\n\n\n\n单元素向量\n标量Scalar\n\n1、 1L、TRUE、\"foo\"\n\n\n\n未命名列表或多元素向量\nList\n\nc(1.0, 2.0, 3.0), c(1L, 2L, 3L)\n\n\n\n命名列表\nDict\n\nlist(a = 1L, b = 2.0), dict(x = x_data)\n\n\n\nMatrix/Array\nNumPy ndarray\nmatrix(c(1,2,3,4), nrow = 2, ncol = 2)\n\n\nData Frame\nPandas DataFrame\ndata.frame(x = c(1,2,3), y = c(\"a\", \"b\", \"c\"))\n\n\nFunction\nPython function\nfunction(x) x + 1\n\n\nNULL, TRUE, FALSE\nNone, True, False\n\nNULL, TRUE, ALSE",
    "crumbs": [
      "大数据",
      "R⬌Python"
    ]
  },
  {
    "objectID": "R_Python.html#reticulate",
    "href": "R_Python.html#reticulate",
    "title": "R⬌Python",
    "section": "reticulate::",
    "text": "reticulate::\n\nShow the codelibrary(reticulate)\n#devtools::install_version( \"ggmap\",  version = \"3.5.2\")\n\n\"R code\"\n\n\n\nShow the code\"python code\"\n\n\nR 安装 python 模块\nreticulate：安装Python module\n\nShow the codelibrary(reticulate)\npy_config()\npy_module_available('pip')\n\n#  Anaconda 激活环境   pip install scanpy -i https://pypi.tuna.tsinghua.edu.cn/simple/  ，依赖包含 numpy pandas\npy_module_available('numpy')\npy_module_available('pandas')\npy_module_available('scanpy')\nreticulate::repl_python()\n\n\nR 调用 Python 模块\n\nShow the code# 调用os模块(module)的listdir()函数\nos &lt;- reticulate::import(\"os\")\nos$listdir(\"./\")\n\n# 调用seaborn模块的load_dataset()函数\n# 需要seaborn模块已安装\nsns &lt;- import(\"seaborn\")\ntips &lt;- sns$load_dataset(\"tips\")\nprint(head(tips))\n\n\n\nR → Python\n\nShow the codeA &lt;- 1\nB &lt;- c(1, 2, 3)\nC &lt;- c(a = 1, b = 2, c = 3)\nD &lt;- matrix(1:4, nrow = 2)\nE &lt;- data.frame(a = c(1, 2), b = c(3, 4))\nG &lt;- list(1, 2, 3)\nH &lt;- list(c(1, 2), c(3, 4))\nI &lt;- list(a = c(1, 2), b = c(3, 4))\nJ &lt;- function(a, b) {\n  return(a + b)\n  }\nK1 &lt;- NULL\nK2 &lt;- T\nK3 &lt;- F\n\n\n\nShow the code### float\nr.A\ntype(r.A)\n\n### list\nr.B\ntype(r.B)\n\nr.C\ntype(r.C)\n\n### numpy.ndarray\nr.D\ntype(r.D)\n\n### pandas.core.frame.DataFrame\nr.E\ntype(r.E)\n\n### list\nr.G\ntype(r.G)\n\nr.H\ntype(r.H)\n\n### dict\nr.I\ntype(r.I)\n\n### function\nr.J\ntype(r.J)\nr.J(2, 3)\n\n\n### NoneType\nr.K1\ntype(r.K1)\n\n\n### bool\nr.K2\ntype(r.K2)\nr.K3\ntype(r.K3)\n\n\n\nPython → R\n\nShow the codeimport pandas as pd\nm = [1, 2, 3]\nn = pd.DataFrame([[1, 2], [3, 4]], columns=[\"a\", \"b\"])\n\nA = 1\nB = [1, 2, 3]\nC = [[1, 2], [3, 4]]\nD1 = [[1], 2, 3]\nD2 = [[1, 2], 2, 3]\n\nE = (1, 2, 3)\n\nFF = ((1, 2), (3, 4))\n\nG = ((1, 2), 3, 4)\n\nH = {\"a\": [1, 2, 3],  \"b\": [2, 3, 4]}\n     \nI = {\"a\": 1,\"b\": [2, 3, 4]}\n     \ndef J(a, b):\n  return a + b\n\n\n\nShow the codepy$m\npy$n\n\n### integer\npy$A\nclass(py$A)\n\npy$B\nclass(py$B)\n\n### list\npy$C\nclass(py$C)\n\npy$D1\nclass(py$D1)\n\npy$D2\nclass(py$D2)\n\npy$E\nclass(py$E)\n\npy$FF\nclass(py$FF)\n\npy$G\nclass(py$G)\n\npy$H\nclass(py$H)\n\npy$I\nclass(py$I)\n\n### function\npy$J\nclass(py$J)\npy$J(2, 3)",
    "crumbs": [
      "大数据",
      "R⬌Python"
    ]
  },
  {
    "objectID": "control_structure.html",
    "href": "control_structure.html",
    "title": "\n18  控制结构\n",
    "section": "",
    "text": "18.1 顺序结构",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>控制结构</span>"
    ]
  },
  {
    "objectID": "control_structure.html#分支结构",
    "href": "control_structure.html#分支结构",
    "title": "\n18  控制结构\n",
    "section": "\n18.2 分支结构",
    "text": "18.2 分支结构\n\n18.2.1 if() 和 else\n\nShow the codex &lt;- 10\n\nif(x %%3 ==0) {\n    message(\"能被3整除\")\n} else {\n    message(\"不能被3整除\")\n}\n\n\n\n18.2.2 ifelse()\n\nShow the codex &lt;- c(10,9)\nifelse(x %%3 ==0,\"能被3整除\",\"不能被3整除\")\n#&gt; [1] \"不能被3整除\" \"能被3整除\"\nif_else(x %%3 ==0,\"能被3整除\",\"不能被3整除\")\n#&gt; [1] \"不能被3整除\" \"能被3整除\"\n\n\n\n18.2.3 case_when()\n\nShow the codex &lt;- 1:10\ndplyr::case_when(\n  x %% 35 == 0 ~ \"fizz buzz\",\n  x %% 5 == 0 ~ \"fizz\",\n  x %% 7 == 0 ~ \"buzz\",\n  is.na(x) ~ \"???\",\n  TRUE ~ as.character(x)\n)\n#&gt;  [1] \"1\"    \"2\"    \"3\"    \"4\"    \"fizz\" \"6\"    \"buzz\" \"8\"    \"9\"    \"fizz\"\n\n\n\n18.2.4 switch()\n\nShow the code# 如果多个输入具有相同的输出，则可以将右侧留空，输入将“掉入”到下一个值。这模仿了 C 语句的行为\nnlegs &lt;- function(x) {\n  switch(x,\n    cow = ,\n    horse = ,\n    dog = 4,\n    human = ,\n    chicken = 2,\n    plant = 0,\n    stop(\"Unknown input\")  #最后应该始终抛出错误，否则不匹配的输入将返回 NULL\n  )\n}\nnlegs(\"cow\")\n#&gt; [1] 4\n\nnlegs(\"do6\")\n#&gt; Error in nlegs(\"do6\"): Unknown input",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>控制结构</span>"
    ]
  },
  {
    "objectID": "control_structure.html#循环结构",
    "href": "control_structure.html#循环结构",
    "title": "\n18  控制结构\n",
    "section": "\n18.3 循环结构",
    "text": "18.3 循环结构\n\n18.3.1 for\n\nShow the codefor(i in 1:5){\n    print(1:i)\n}\n#&gt; [1] 1\n#&gt; [1] 1 2\n#&gt; [1] 1 2 3\n#&gt; [1] 1 2 3 4\n#&gt; [1] 1 2 3 4 5\n\n\n\nShow the codefor (i in 1:10) {\n  if (i &lt; 3) \n    next  # 退出当前迭代,后面不执行了\n\n  print(i)\n  \n  if (i &gt;= 5)\n    break # 退出整个循环\n}\n#&gt; [1] 3\n#&gt; [1] 4\n#&gt; [1] 5\n\n\n\n18.3.2 while()\n\nShow the codei &lt;- 0\nwhile(i&lt;=10){\n    print(i)\n    i=i+1\n}\n#&gt; [1] 0\n#&gt; [1] 1\n#&gt; [1] 2\n#&gt; [1] 3\n#&gt; [1] 4\n#&gt; [1] 5\n#&gt; [1] 6\n#&gt; [1] 7\n#&gt; [1] 8\n#&gt; [1] 9\n#&gt; [1] 10\n\n\n\nShow the codeflag &lt;- TRUE\nx &lt;- 0\ni &lt;- 0\nwhile(flag){\n    x &lt;- x+1\n    if(x%%3==0) {\n        i &lt;- i+1\n        print(x)\n    }\n    if(i==25) flag &lt;- FALSE\n}\n#&gt; [1] 3\n#&gt; [1] 6\n#&gt; [1] 9\n#&gt; [1] 12\n#&gt; [1] 15\n#&gt; [1] 18\n#&gt; [1] 21\n#&gt; [1] 24\n#&gt; [1] 27\n#&gt; [1] 30\n#&gt; [1] 33\n#&gt; [1] 36\n#&gt; [1] 39\n#&gt; [1] 42\n#&gt; [1] 45\n#&gt; [1] 48\n#&gt; [1] 51\n#&gt; [1] 54\n#&gt; [1] 57\n#&gt; [1] 60\n#&gt; [1] 63\n#&gt; [1] 66\n#&gt; [1] 69\n#&gt; [1] 72\n#&gt; [1] 75\n\n\n\n18.3.3 repeat()\n\nShow the codei &lt;- 1\n\nrepeat{\n  print(i)\n  i &lt;- i*2\n  if (i &gt; 100) break  # 跳出当前的循环\n}\n#&gt; [1] 1\n#&gt; [1] 2\n#&gt; [1] 4\n#&gt; [1] 8\n#&gt; [1] 16\n#&gt; [1] 32\n#&gt; [1] 64\n\n\n\nShow the codei &lt;- 1\n\nrepeat{\n  print(i)\n  i &lt;- i*2\n  if (i &gt; 200) break()\n  if (i &gt; 100) next()  #跳过后续代码的运行进入下一次循环\n  print(\"Can you see me?\")\n}\n#&gt; [1] 1\n#&gt; [1] \"Can you see me?\"\n#&gt; [1] 2\n#&gt; [1] \"Can you see me?\"\n#&gt; [1] 4\n#&gt; [1] \"Can you see me?\"\n#&gt; [1] 8\n#&gt; [1] \"Can you see me?\"\n#&gt; [1] 16\n#&gt; [1] \"Can you see me?\"\n#&gt; [1] 32\n#&gt; [1] \"Can you see me?\"\n#&gt; [1] 64\n#&gt; [1] 128",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>控制结构</span>"
    ]
  },
  {
    "objectID": "exception_handling.html",
    "href": "exception_handling.html",
    "title": "\n19  异常处理\n",
    "section": "",
    "text": "19.1 signals conditions\nR中的条件（condition）系统提供了一组成对的工具，提示函数正在发生异常情况，并允许该函数的用户处理它\nShow the codestop(\"This is what an error looks like\")\n#&gt; Error: This is what an error looks like\n\n\nwarning(\"This is what a warning looks like\")\n\n\nmessage(\"This is what a message looks like\")\n\nprint(\"Running...\")\n#&gt; [1] \"Running...\"\ncat(\"Running...\\n\")\n#&gt; Running...",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>异常处理</span>"
    ]
  },
  {
    "objectID": "exception_handling.html#signals-conditions",
    "href": "exception_handling.html#signals-conditions",
    "title": "\n19  异常处理\n",
    "section": "",
    "text": "stop() for errors\n\nwarning() for warnings\n\nmessage() for messages\n\n\n\n19.1.1 error\n停止执行并返回到顶部\n\nShow the codeh &lt;- function() stop(\"This is an error!\")\nh()\n#&gt; Error in h(): This is an error!\n\n# 不包含调用信息\nh &lt;- function() stop(\"This is an error!\", call. = FALSE)\nh()\n#&gt; Error: This is an error!\n\nh &lt;- function() rlang::abort(\"This is an error!\")\nh()\n#&gt; Error in `h()`:\n#&gt; ! This is an error!\n\n\n\n19.1.2 warning\n捕获警告并聚合显示\n\n要使警告立即显示，请设置 options(warn = 1)\n要将警告转换为错误，请设置 options(warn = 2)。这通常是 调试警告的最简单方法，因为一旦出现错误，就可以 使用工具，例如查找源头traceback()\n使用 options(warn = 0)恢复默认行为。\n\n\nShow the codefw &lt;- function() {\n  cat(\"1\\n\")\n  warning(\"W1\")\n  cat(\"2\\n\")\n  warning(\"W2\")\n  cat(\"3\\n\")\n  warning(\"W3\",call. = FALSE)\n}\nfw()\n#&gt; 1\n#&gt; 2\n#&gt; 3\n\nfw &lt;- function() {\n  cat(\"1\\n\")\n  rlang::warn(\"W1\")\n  cat(\"2\\n\")\n  rlang::warn(\"W2\")\n  cat(\"3\\n\")\n  rlang::warn(\"W3\")\n}\nfw()\n#&gt; 1\n#&gt; 2\n#&gt; 3\n\n\n\n19.1.3 message\n消息立即显示\n参数quiet = TRUE 抑制所有消息suppressMessages()\n\nShow the code# 无 call. 参数\nfm &lt;- function() {\n  cat(\"1\\n\")\n  message(\"M1\")\n  cat(\"2\\n\")\n  message(\"M2\")\n  cat(\"3\\n\")\n  message(\"M3\")\n}\n\nfm()\n#&gt; 1\n#&gt; 2\n#&gt; 3",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>异常处理</span>"
    ]
  },
  {
    "objectID": "exception_handling.html#忽略信息",
    "href": "exception_handling.html#忽略信息",
    "title": "\n19  异常处理\n",
    "section": "\n19.2 忽略信息",
    "text": "19.2 忽略信息\n\n\n忽略错误：try()，最好是使用tryCatch()\n\nShow the code\ntry(log(\"a\"))\n#&gt; Error in log(\"a\") : non-numeric argument to mathematical function\ntry(log(\"a\"),silent = TRUE)\n\n\n\n\n忽略警告。suppressWarnings()\n\nShow the codesuppressWarnings({\n    warning(\"Uhoh!\")\n    warning(\"Another warning\")\n    1\n})\n#&gt; [1] 1\n\n\n\n\n忽略消息。suppressMessages()\n\nShow the codesuppressMessages({\n    message(\"Hello there\")\n    \"ABC\"\n})\n#&gt; [1] \"ABC\"",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>异常处理</span>"
    ]
  },
  {
    "objectID": "exception_handling.html#条件处理程序",
    "href": "exception_handling.html#条件处理程序",
    "title": "\n19  异常处理\n",
    "section": "\n19.3 条件处理程序",
    "text": "19.3 条件处理程序\n\n19.3.1 条件对象\n\nShow the codecnd &lt;- rlang::catch_cnd(stop(\"An error\"))\nstr(cnd)\n#&gt; List of 2\n#&gt;  $ message: chr \"An error\"\n#&gt;  $ call   : language force(expr)\n#&gt;  - attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n\nconditionMessage(cnd)\n#&gt; [1] \"An error\"\nconditionCall(cnd)\n#&gt; force(expr)\n\n\n\n19.3.2 退出处理程序\n处理条件信息\n\ntryCatch()\nwithCallingHandlers()\n\ntryCatch()定义exitinghandlers，，通常用于处理错误情况。它允许您覆盖默认的错误行为。\n\nShow the codetryCatch(\n  error = function(cnd) {\n    # code to run when error is thrown\n  },\n  code_to_run_while_handlers_are_active\n)\n\n\n\nShow the codef3 &lt;- function(x) {\n  tryCatch(\n    error = function(cnd) NA,\n    log(x)\n  )\n}\n\nf3(\"x\")\n#&gt; [1] NA\n\n\n在发出条件信号后，控制权将传递给处理程序，并且永远不会返回到原始代码，这实际上意味着代码退出\n\nShow the codetryCatch(\n  message = function(cnd) \"There\",\n  {\n    message(\"Here\")\n    stop(\"This code is never run!\")\n  }\n)\n#&gt; [1] \"There\"\n\n\n类似Python的\ntry: \n    {}\nfinally:\n    {}\n\nShow the codetryCatch(\n  {\n    write.table(\"Hi!\", \"data/异常处理.csv\")\n  },\n  finally = {\n    # always run\n    x &lt;- read.table(\"data/异常处理.csv\")\n    print(\"你好\")\n  }\n)\n#&gt; [1] \"你好\"\n\n\n\n19.3.3 调用处理程序\nwithCallingHandlers()定义callinghandlers，适合处理非错误条件，一旦处理程序返回，代码执行将正常继续\n\nShow the codewithCallingHandlers(\n  warning = function(cnd) {\n    # code to run when warning is signalled\n  },\n  message = function(cnd) {\n    # code to run when message is signalled\n  },\n  code_to_run_while_handlers_are_active\n)\n\n\n\nShow the codetryCatch(\n  message = function(cnd) cat(\"Caught a message!\\n\"), \n  {\n    message(\"Someone there?\")\n    message(\"Why, yes!\")\n  }\n)\n#&gt; Caught a message!\n\n\nwithCallingHandlers(\n  message = function(cnd) cat(\"Caught a message!\\n\"), \n  {\n    message(\"Someone there?\")\n    message(\"Why, yes!\")\n  }\n)\n#&gt; Caught a message!\n#&gt; Caught a message!",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>异常处理</span>"
    ]
  },
  {
    "objectID": "exception_handling.html#自定义条件",
    "href": "exception_handling.html#自定义条件",
    "title": "\n19  异常处理\n",
    "section": "\n19.4 自定义条件",
    "text": "19.4 自定义条件\n\nShow the codelibrary(rlang)\n\nmy_log &lt;- function(x, base = exp(1)) {\n  if (!is.numeric(x)) {\n    abort(paste0(\n      \"`x` must be a numeric vector; not \", typeof(x), \".\"\n    ))\n  }\n  if (!is.numeric(base)) {\n    abort(paste0(\n      \"`base` must be a numeric vector; not \", typeof(base), \".\"\n    ))\n  }\n\n  base::log(x, base = base)\n}\n\n\n\nShow the codemy_log(letters)\n#&gt; Error in `my_log()`:\n#&gt; ! `x` must be a numeric vector; not character.\nmy_log(1:10, base = letters)\n#&gt; Error in `my_log()`:\n#&gt; ! `base` must be a numeric vector; not character.\n\n\n\nShow the codeabort_bad_argument &lt;- function(arg, must, not = NULL) {\n  msg &lt;- glue::glue(\"`{arg}` must {must}\")\n  if (!is.null(not)) {\n    not &lt;- typeof(not)\n    msg &lt;- glue::glue(\"{msg}; not {not}.\")\n  }\n  \n  abort(\"error_bad_argument\", \n    message = msg, \n    arg = arg, \n    must = must, \n    not = not\n  )\n}\n\nstop_custom &lt;- function(.subclass, message, call = NULL, ...) {\n  err &lt;- structure(\n    list(\n      message = message,\n      call = call,\n      ...\n    ),\n    class = c(.subclass, \"error\", \"condition\")\n  )\n  stop(err)\n}\n\nerr &lt;- catch_cnd(\n  stop_custom(\"error_new\", \"This is a custom error\", x = 10)\n)\nclass(err)\n#&gt; [1] \"error_new\" \"error\"     \"condition\"\nerr$x\n#&gt; [1] 10\n\n\n重写my_log\n\nShow the codemy_log &lt;- function(x, base = exp(1)) {\n  if (!is.numeric(x)) {\n    abort_bad_argument(\"x\", must = \"be numeric\", not = x)\n  }\n  if (!is.numeric(base)) {\n    abort_bad_argument(\"base\", must = \"be numeric\", not = base)\n  }\n\n  base::log(x, base = base)\n}\n\n\n\nShow the codemy_log(letters)\n#&gt; Error in `abort_bad_argument()`:\n#&gt; ! `x` must be numeric; not character.\nmy_log(letters)\n#&gt; Error in `abort_bad_argument()`:\n#&gt; ! `x` must be numeric; not character.",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>异常处理</span>"
    ]
  },
  {
    "objectID": "exception_handling.html#debugging",
    "href": "exception_handling.html#debugging",
    "title": "\n19  异常处理\n",
    "section": "\n19.5 Debugging",
    "text": "19.5 Debugging\ntraceback(): 函数调用栈\n\nShow the codelm(y ~ x)\n#&gt; Error in eval(predvars, data, env): object 'y' not found\ntraceback() \n#&gt; No traceback available\n\n\n表示第7次调用函数出现错误。\ndebug() : 标记函数，调用函数时出现错误自动进入browser，输入 n 一行一行运行直到出现错误\n\nShow the codedebug(lm)\nlm(y ~ x)\n#&gt; debugging in: lm(y ~ x)\n#&gt; debug: {\n#&gt;     ret.x &lt;- x\n#&gt;     ret.y &lt;- y\n#&gt;     cl &lt;- match.call()\n#&gt;     mf &lt;- match.call(expand.dots = FALSE)\n#&gt;     m &lt;- match(c(\"formula\", \"data\", \"subset\", \"weights\", \"na.action\", \n#&gt;         \"offset\"), names(mf), 0L)\n#&gt;     mf &lt;- mf[c(1L, m)]\n#&gt;     mf$drop.unused.levels &lt;- TRUE\n#&gt;     mf[[1L]] &lt;- quote(stats::model.frame)\n#&gt;     mf &lt;- eval(mf, parent.frame())\n#&gt;     if (method == \"model.frame\") \n#&gt;         return(mf)\n#&gt;     else if (method != \"qr\") \n#&gt;         warning(gettextf(\"method = '%s' is not supported. Using 'qr'\", \n#&gt;             method), domain = NA)\n#&gt;     mt &lt;- attr(mf, \"terms\")\n#&gt;     y &lt;- model.response(mf, \"numeric\")\n#&gt;     w &lt;- as.vector(model.weights(mf))\n#&gt;     if (!is.null(w) && !is.numeric(w)) \n#&gt;         stop(\"'weights' must be a numeric vector\")\n#&gt;     offset &lt;- model.offset(mf)\n#&gt;     mlm &lt;- is.matrix(y)\n#&gt;     ny &lt;- if (mlm) \n#&gt;         nrow(y)\n#&gt;     else length(y)\n#&gt;     if (!is.null(offset)) {\n#&gt;         if (!mlm) \n#&gt;             offset &lt;- as.vector(offset)\n#&gt;         if (NROW(offset) != ny) \n#&gt;             stop(gettextf(\"number of offsets is %d, should equal %d (number of observations)\", \n#&gt;                 NROW(offset), ny), domain = NA)\n#&gt;     }\n#&gt;     if (is.empty.model(mt)) {\n#&gt;         x &lt;- NULL\n#&gt;         z &lt;- list(coefficients = if (mlm) matrix(NA_real_, 0, \n#&gt;             ncol(y)) else numeric(), residuals = y, fitted.values = 0 * \n#&gt;             y, weights = w, rank = 0L, df.residual = if (!is.null(w)) sum(w != \n#&gt;             0) else ny)\n#&gt;         if (!is.null(offset)) {\n#&gt;             z$fitted.values &lt;- offset\n#&gt;             z$residuals &lt;- y - offset\n#&gt;         }\n#&gt;     }\n#&gt;     else {\n#&gt;         x &lt;- model.matrix(mt, mf, contrasts)\n#&gt;         z &lt;- if (is.null(w)) \n#&gt;             lm.fit(x, y, offset = offset, singular.ok = singular.ok, \n#&gt;                 ...)\n#&gt;         else lm.wfit(x, y, w, offset = offset, singular.ok = singular.ok, \n#&gt;             ...)\n#&gt;     }\n#&gt;     class(z) &lt;- c(if (mlm) \"mlm\", \"lm\")\n#&gt;     z$na.action &lt;- attr(mf, \"na.action\")\n#&gt;     z$offset &lt;- offset\n#&gt;     z$contrasts &lt;- attr(x, \"contrasts\")\n#&gt;     z$xlevels &lt;- .getXlevels(mt, mf)\n#&gt;     z$call &lt;- cl\n#&gt;     z$terms &lt;- mt\n#&gt;     if (model) \n#&gt;         z$model &lt;- mf\n#&gt;     if (ret.x) \n#&gt;         z$x &lt;- x\n#&gt;     if (ret.y) \n#&gt;         z$y &lt;- y\n#&gt;     if (!qr) \n#&gt;         z$qr &lt;- NULL\n#&gt;     z\n#&gt; }\n#&gt; debug: ret.x &lt;- x\n#&gt; debug: ret.y &lt;- y\n#&gt; debug: cl &lt;- match.call()\n#&gt; debug: mf &lt;- match.call(expand.dots = FALSE)\n#&gt; debug: m &lt;- match(c(\"formula\", \"data\", \"subset\", \"weights\", \"na.action\", \n#&gt;     \"offset\"), names(mf), 0L)\n#&gt; debug: mf &lt;- mf[c(1L, m)]\n#&gt; debug: mf$drop.unused.levels &lt;- TRUE\n#&gt; debug: mf[[1L]] &lt;- quote(stats::model.frame)\n#&gt; debug: mf &lt;- eval(mf, parent.frame())\n#&gt; Error in eval(predvars, data, env): object 'y' not found\n\n\n# Browse[1]&gt; n\n# debug: ret.x &lt;- x\n# Browse[1]&gt; n\n# debug: ret.y &lt;- y\n# Browse[1]&gt; n\n# debug: cl &lt;- match.call()\n# Browse[1]&gt; n\n# debug: mf &lt;- match.call(expand.dots = FALSE)\n# Browse[1]&gt; n\n# debug: m &lt;- match(c(\"formula\", \"data\", \"subset\", \"weights\", \"na.action\", \n#     \"offset\"), names(mf), 0L)\n# Browse[1]&gt; n\n# debug: mf &lt;- mf[c(1L, m)]\n# Browse[1]&gt; n\n# debug: mf$drop.unused.levels &lt;- TRUE\n# Browse[1]&gt; n\n# debug: mf[[1L]] &lt;- quote(stats::model.frame)\n# Browse[1]&gt; n\n# debug: mf &lt;- eval(mf, parent.frame())\n# Browse[1]&gt; n\n# Error in eval(predvars, data, env) : object 'y' not found\n\n\nundebug(lm)",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>异常处理</span>"
    ]
  },
  {
    "objectID": "environments.html",
    "href": "environments.html",
    "title": "\n20  环境\n",
    "section": "",
    "text": "20.1 环境类型\n在编程语言中，环境指的是一个包含对象、变量和函数的虚拟空间。环境可以理解为一个包含名称和与之绑定（bind）的值的集合，并且每个环境都有一个父环境，形成一个层次结构。R语言中的环境概念与作用域规则紧密相关，尤其是词法作用域（Lexical scoping）。\n词法作用域，也称为静态作用域，是根据代码的书写结构来确定变量的可见性和作用域的。这意味着变量的作用域是由它被定义时的环境决定的，而不是在运行时动态决定的。例如，当在函数中访问一个变量时，R会首先在函数自身的环境内查找，如果没有找到，就会沿着环境链向上在父环境中查找，直到找到该变量或者达到全局环境 。\n在R中，词法作用域遵循以下原则：",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>环境</span>"
    ]
  },
  {
    "objectID": "environments.html#环境类型",
    "href": "environments.html#环境类型",
    "title": "\n20  环境\n",
    "section": "",
    "text": "20.1.1 当前环境与全局环境\n\nShow the code# 访问全局环境\nglobalenv()\n#&gt; &lt;environment: R_GlobalEnv&gt;\n\n# 访问当前环境\nenvironment()\n#&gt; &lt;environment: R_GlobalEnv&gt;\n\n\ncurrent_env()\nglobal_env()\n\nShow the codelibrary(rlang)\nidentical(global_env(), current_env())\n#&gt; [1] TRUE\n\n# 环境不是向量\nglobal_env() == current_env() \n#&gt; Error in global_env() == current_env(): comparison (==) is possible only for atomic and list types\n\n\n\nShow the codetypeof(globalenv())\n#&gt; [1] \"environment\"\nclass(globalenv())\n#&gt; [1] \"environment\"\n\nis.atomic(globalenv())\n#&gt; [1] FALSE\nis.list(globalenv())\n#&gt; [1] FALSE\n\nis.environment(globalenv())\n#&gt; [1] TRUE\n\n\n\n20.1.2 父环境\n每个环境都有一个父环境（parent）。用于实现词法作用域：如果在当前环境中找不到名称，则 R 将在其父环境中查找（依此类推）。可以通过向 env() 提供未命名的参数来设置父环境。如果不提供它，它将默认为当前环境。\n\nShow the codee2a&lt;- env(d = 4, e = 5)\ne2b &lt;- env(e2a, a = 1, b = 2, c = 3)\n\n\n\n\n\n\ne2a 是 e2b 的父级。\n\nShow the code# 查看父级\nidentical(e2a, env_parent(e2b))\n#&gt; [1] TRUE\nenv_parent(e2a)\n#&gt; &lt;environment: R_GlobalEnv&gt;\n\n\n默认情况下，当到达全局环境时停止。如果覆盖默认行为，则可以看到全局环境的父级包括每个加载的包。\n\nShow the code# 查看所有父级\ne2a\n#&gt; &lt;environment: 0x000001cdd7f51e30&gt;\nenv_parents(e2b)\n#&gt; [[1]]   &lt;env: 0x000001cdd7f51e30&gt;\n#&gt; [[2]] $ &lt;env: global&gt;\nenv_parents(e2b, last = empty_env())\n#&gt;  [[1]]   &lt;env: 0x000001cdd7f51e30&gt;\n#&gt;  [[2]] $ &lt;env: global&gt;\n#&gt;  [[3]] $ &lt;env: .conflicts&gt;\n#&gt;  [[4]] $ &lt;env: package:lobstr&gt;\n#&gt;  [[5]] $ &lt;env: package:rlang&gt;\n#&gt;  [[6]] $ &lt;env: package:stats&gt;\n#&gt;  [[7]] $ &lt;env: package:graphics&gt;\n#&gt;  [[8]] $ &lt;env: package:grDevices&gt;\n#&gt;  [[9]] $ &lt;env: package:utils&gt;\n#&gt; [[10]] $ &lt;env: package:datasets&gt;\n#&gt; [[11]] $ &lt;env: package:writexl&gt;\n#&gt; [[12]] $ &lt;env: package:readxl&gt;\n#&gt; [[13]] $ &lt;env: package:patchwork&gt;\n#&gt; [[14]] $ &lt;env: package:lubridate&gt;\n#&gt; [[15]] $ &lt;env: package:forcats&gt;\n#&gt; [[16]] $ &lt;env: package:stringr&gt;\n#&gt; [[17]] $ &lt;env: package:dplyr&gt;\n#&gt; [[18]] $ &lt;env: package:purrr&gt;\n#&gt; [[19]] $ &lt;env: package:readr&gt;\n#&gt; [[20]] $ &lt;env: package:tidyr&gt;\n#&gt; ... and 11 more environments\n\n\n\n20.1.3 空环境\n只有一个环境没有父环境：空( empty)环境。每个环境的父级最终都会随着空环境而终止。\n\nShow the codee2c &lt;- env(empty_env(), d = 4, e = 5)\ne2d &lt;- env(e2c, a = 1, b = 2, c = 3)\n\n\n\n\n\n\n\nShow the code# 查看所有父级\nenv_parents(e2d)\n#&gt; [[1]]   &lt;env: 0x000001c32bc9b6b8&gt;\n#&gt; [[2]] $ &lt;env: empty&gt;\ne2c\n#&gt; &lt;environment: 0x000001c32bc9b6b8&gt;\nenv_parents(e2c)\n#&gt; [[1]] $ &lt;env: empty&gt;",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>环境</span>"
    ]
  },
  {
    "objectID": "environments.html#环境操作",
    "href": "environments.html#环境操作",
    "title": "\n20  环境\n",
    "section": "\n20.2 环境操作",
    "text": "20.2 环境操作\n\n修改时不会复制环境。\n\n\n20.2.1 创建环境\n环境的工作是将一组名称关联或绑定（bind）到一组值。\n\nShow the code# name-value pairs\ne1 &lt;- rlang::env(\n  a = FALSE,\n  b = \"a\",\n  c = 2.3,\n  d = 1:3,\n)\n\n\n# 绑定自身\ne1$d &lt;- e1\n\n# 只显示内存地址\ne1 \n#&gt; &lt;environment: 0x000001cdcf314e48&gt;\n\n# \nenv_print(e1)\n#&gt; &lt;environment: 0x000001cdcf314e48&gt;\n#&gt; Parent: &lt;environment: global&gt;\n#&gt; Bindings:\n#&gt; • a: &lt;lgl&gt;\n#&gt; • b: &lt;chr&gt;\n#&gt; • c: &lt;dbl&gt;\n#&gt; • d: &lt;env&gt;\nenv_names(e1)\n#&gt; [1] \"a\" \"b\" \"c\" \"d\"\nnames(e1)\n#&gt; [1] \"a\" \"b\" \"c\" \"d\"\n\n\nnew.env() 也可用于创建新环境。 hash size\n\nShow the codemy_env &lt;- base::new.env(parent = emptyenv())\nmy_env$a &lt;- 1\n\n\n\n20.2.2 超级赋值 &lt;&lt;-\n\n常规赋值 &lt;- 始终在当前环境中创建绑定一个变量\n超级赋值 &lt;&lt;- ，重新绑定当前环境的父级中的现有名称\n\nShow the codex &lt;- 0\nf &lt;- function() {\n  x &lt;&lt;- 1\n}\nf()\nx\n#&gt; [1] 1\n\n\n\n20.2.3 访问对象\n\nShow the codeenv_print(e1)\n#&gt; &lt;environment: 0x000001cdcf314e48&gt;\n#&gt; Parent: &lt;environment: global&gt;\n#&gt; Bindings:\n#&gt; • a: &lt;lgl&gt;\n#&gt; • b: &lt;chr&gt;\n#&gt; • c: &lt;dbl&gt;\n#&gt; • d: &lt;env&gt;\n\n# error  无顺序，不能用数字索引\ne1[[1]]\n#&gt; Error in e1[[1]]: wrong arguments for subsetting an environment\n\n# $ [[\"name]]\ne1$b\n#&gt; [1] \"a\"\ne1[[\"a\"]]\n#&gt; [1] FALSE\n\n\n\n20.2.4 添加绑定\n\nShow the code# 单个\nenv_poke(e1, \"e\", 100)\n\n# 多个\nenv_bind(e1, x = 10, y = 20)\n\nenv_print(e1)\n#&gt; &lt;environment: 0x000001cdcf314e48&gt;\n#&gt; Parent: &lt;environment: global&gt;\n#&gt; Bindings:\n#&gt; • x: &lt;dbl&gt;\n#&gt; • y: &lt;dbl&gt;\n#&gt; • a: &lt;lgl&gt;\n#&gt; • b: &lt;chr&gt;\n#&gt; • c: &lt;dbl&gt;\n#&gt; • d: &lt;env&gt;\n#&gt; • e: &lt;dbl&gt;\n\n\n\n20.2.5 解除绑定\n\nShow the codee1$x &lt;- NULL  # 不能删除\nenv_has(e1, \"x\")\n#&gt;    x \n#&gt; TRUE\n\n\nenv_unbind(e1, \"x\") # 解绑定\nenv_has(e1, \"x\")\n#&gt;     x \n#&gt; FALSE\n\nenv_print(e1)\n#&gt; &lt;environment: 0x000001cdcf314e48&gt;\n#&gt; Parent: &lt;environment: global&gt;\n#&gt; Bindings:\n#&gt; • y: &lt;dbl&gt;\n#&gt; • a: &lt;lgl&gt;\n#&gt; • b: &lt;chr&gt;\n#&gt; • c: &lt;dbl&gt;\n#&gt; • d: &lt;env&gt;\n#&gt; • e: &lt;dbl&gt;\n\n\n\n20.2.6 高级绑定\n\n20.2.6.1 延迟绑定\ndelayed bindings autoload()允许 R 包提供行为类似于加载内存中的数据集\n延迟绑定会创建 unevaluated promise\n\nShow the codeenv_bind_lazy(current_env(), b =object.size(e1))\nforce(b)\n#&gt; 56 bytes\n\nsystem.time(print(b))\n#&gt; 56 bytes\n#&gt;    user  system elapsed \n#&gt;       0       0       0\n\nsystem.time(print(b))\n#&gt; 56 bytes\n#&gt;    user  system elapsed \n#&gt;       0       0       0\n\n\n\n\n\n\n\n20.2.6.2 动态绑定\nactive bindings 每次访问它们时都会重新计算\n\nShow the codeenv_bind_active(current_env(), z1 = function(val) runif(1))\nz1\n#&gt; [1] 0.08058083\nz1\n#&gt; [1] 0.5469654",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>环境</span>"
    ]
  },
  {
    "objectID": "environments.html#在环境中递归",
    "href": "environments.html#在环境中递归",
    "title": "\n20  环境\n",
    "section": "\n20.3 在环境中递归",
    "text": "20.3 在环境中递归\n\n20.3.1 递归recurse\n\nShow the codef_recur &lt;- function(..., env = caller_env()) {\n  if (identical(env, empty_env())) {\n    # base case\n  } else if (success) {\n    # success case\n  } else {\n    # recursive case\n    f(..., env = env_parent(env))\n  }\n}\n\n\n\nShow the codewhere &lt;- function(name, env = caller_env()) {\n  if (identical(env, empty_env())) {\n    # Base case\n    stop(\"Can't find \", name, call. = FALSE)\n  } else if (env_has(env, name)) {\n    # Success case\n    env\n  } else {\n    # Recursive case\n    where(name, env_parent(env))\n  }\n}\n\n\n\nShow the codee3a &lt;- env(empty_env(), a = 1, b = 2)\ne3b &lt;- env(e3a, x = 10, a = 11)\n\n\n\n\n\n\n\nShow the codewhere(\"a\", e3b)\n#&gt; &lt;environment: 0x000001cdd7cbf3a8&gt;\n\nwhere(\"b\", e3b)\n#&gt; &lt;environment: 0x000001cdd7d6b538&gt;\ne3a\n#&gt; &lt;environment: 0x000001cdd7d6b538&gt;\n\nwhere(\"c\", e3b)\n#&gt; Error: Can't find c\n\n\n\n20.3.2 迭代iteration\n\nShow the codef_iter &lt;- function(..., env = caller_env()) {\n  while (!identical(env, empty_env())) {\n    if (success) {\n      # success case\n      return()\n    }\n    # inspect parent\n    env &lt;- env_parent(env)\n  }\n\n  # base case\n}",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>环境</span>"
    ]
  },
  {
    "objectID": "environments.html#特殊环境",
    "href": "environments.html#特殊环境",
    "title": "\n20  环境\n",
    "section": "\n20.4 特殊环境",
    "text": "20.4 特殊环境\n大多数环境是由 R 创建的\n\n20.4.1 包环境和搜索路径\n\n\n\n\n搜索路径：R_EmptyEnv→pkgs→R_GlobalENV\n\nShow the codebase::search()\n#&gt;  [1] \".GlobalEnv\"         \".conflicts\"         \"package:lobstr\"    \n#&gt;  [4] \"package:rlang\"      \"package:stats\"      \"package:graphics\"  \n#&gt;  [7] \"package:grDevices\"  \"package:utils\"      \"package:datasets\"  \n#&gt; [10] \"package:writexl\"    \"package:readxl\"     \"package:patchwork\" \n#&gt; [13] \"package:lubridate\"  \"package:forcats\"    \"package:stringr\"   \n#&gt; [16] \"package:dplyr\"      \"package:purrr\"      \"package:readr\"     \n#&gt; [19] \"package:tidyr\"      \"package:tibble\"     \"package:ggplot2\"   \n#&gt; [22] \"package:tidyverse\"  \"package:conflicted\" \"package:showtext\"  \n#&gt; [25] \"package:showtextdb\" \"package:sysfonts\"   \"package:methods\"   \n#&gt; [28] \"Autoloads\"          \"package:base\"\nrlang::search_envs()\n#&gt;  [[1]] $ &lt;env: global&gt;\n#&gt;  [[2]] $ &lt;env: .conflicts&gt;\n#&gt;  [[3]] $ &lt;env: package:lobstr&gt;\n#&gt;  [[4]] $ &lt;env: package:rlang&gt;\n#&gt;  [[5]] $ &lt;env: package:stats&gt;\n#&gt;  [[6]] $ &lt;env: package:graphics&gt;\n#&gt;  [[7]] $ &lt;env: package:grDevices&gt;\n#&gt;  [[8]] $ &lt;env: package:utils&gt;\n#&gt;  [[9]] $ &lt;env: package:datasets&gt;\n#&gt; [[10]] $ &lt;env: package:writexl&gt;\n#&gt; [[11]] $ &lt;env: package:readxl&gt;\n#&gt; [[12]] $ &lt;env: package:patchwork&gt;\n#&gt; [[13]] $ &lt;env: package:lubridate&gt;\n#&gt; [[14]] $ &lt;env: package:forcats&gt;\n#&gt; [[15]] $ &lt;env: package:stringr&gt;\n#&gt; [[16]] $ &lt;env: package:dplyr&gt;\n#&gt; [[17]] $ &lt;env: package:purrr&gt;\n#&gt; [[18]] $ &lt;env: package:readr&gt;\n#&gt; [[19]] $ &lt;env: package:tidyr&gt;\n#&gt; [[20]] $ &lt;env: package:tibble&gt;\n#&gt; ... and 9 more environments\n\n\n搜索路径上的最后两个环境始终相同：\n\n环境Autoloads使用延迟绑定来节省内存，仅通过需要时加载包对象（如大型数据集）节省内存 。\n基本环境package:base，是 base package 的环，它能够引导所有其他包的加载。访问base_env()\n\n请注意，当您附加另一个包时，全局环境的父环境会发生变化：\n\n\n\n\n\n20.4.2 命名空间\n命名空间 （namespaces） 的目标是确保以不同的顺序加载包，包将找到相同的功能，并且无论用户附加什么包，每个包的工作方式都相同。\n\nShow the codesd\n#&gt; function (x, na.rm = FALSE) \n#&gt; sqrt(var(if (is.vector(x) || is.factor(x)) x else as.double(x), \n#&gt;     na.rm = na.rm))\n#&gt; &lt;bytecode: 0x000001cdd56211e8&gt;\n#&gt; &lt;environment: namespace:stats&gt;\n\n\n包中的每个函数都与一对环境相关联：前面的包环境和命名空间环境。\n\n包环境是包的外部接口。\n命名空间环境是包的内部接口。\n\n包环境控制我们如何找到函数；命名空间控制函数查找其变量的方式。\n包环境中的每个绑定也可以在命名空间环境中找到。\n每个命名空间都有一个import环境，import环境的父级是base namespace，base namespace的父级是全局环境。\n\n\n\n\n\n20.4.3 函数环境\n函数在创建时绑定当前环境，称为函数环境，用于词法作用域。在计算机语言中，捕获（或封闭）其环境的函数被称为闭包 closures 。\n访问函数环境\n\nShow the codey &lt;- 1\nf &lt;- function(x) x + y\nfn_env(f)\n#&gt; &lt;environment: R_GlobalEnv&gt;\n\n\n\n\n\n\n\nShow the codee &lt;- env()  # 绑定当前环境为父级\nenv_parent(e)\n#&gt; &lt;environment: R_GlobalEnv&gt;\n\ne$g &lt;- function() 1  # g绑定在e中\n\nenv_print(e)\n#&gt; &lt;environment: 0x000001cdd4151420&gt;\n#&gt; Parent: &lt;environment: global&gt;\n#&gt; Bindings:\n#&gt; • g: &lt;fn&gt;\n\n\n\n20.4.4 执行环境\n执行环境是函数环境的子级，由函数的创建位置决定。\n\nShow the codeg &lt;- function(x) {\n  if (!env_has(current_env(), \"a\")) {\n    message(\"Defining a\")\n    a &lt;- 1\n  } else {\n    a &lt;- a + 1\n  }\n  a\n}\n\n\n\nShow the code# A fresh start principle\ng(10)\n#&gt; [1] 1\ng(10)\n#&gt; [1] 1\n\n\n每次调用函数时，都会创建一个新环境来托管执行。这称为执行环境（execution environment），其父级是函数环境\n\nShow the codeh &lt;- function(x) {\n  # 1.\n  a &lt;- 2 # 2.\n  x + a\n}\ny &lt;- h(1) # 3.\n\n\n\n\n\n\n\nFigure 20.1\n\n\n执行环境通常是短暂的;函数完成后，环境将被垃圾回收（garbage collected）。",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>环境</span>"
    ]
  },
  {
    "objectID": "environments.html#call-stacks",
    "href": "environments.html#call-stacks",
    "title": "\n20  环境\n",
    "section": "\n20.5 Call stacks",
    "text": "20.5 Call stacks\ncaller environment\nrlang::caller_env() 提供了调用函数的环境。\n调用栈（call stacks）由 frames 组成。调用栈是由调用函数的位置创建的。\n\nShow the codef &lt;- function(x) {\n  g(x = 2)\n}\ng &lt;- function(x) {\n  h(x = 3)\n}\nh &lt;- function(x) {\n  stop()\n}\n\n\n在 R 中最常查看调用栈的方式是查看错误发生后的情况：traceback()\n\nShow the codef(x = 1)\n#&gt; Error in h(x = 3):\ntraceback()\n#&gt; No traceback available\n\n\n使用 lobstr::cst()从头开始 来理解调用栈, call stack tree Figure 20.2\n\nShow the codeh &lt;- function(x) {\n  lobstr::cst()\n}\nf(x = 1)\n#&gt;     ▆\n#&gt;  1. └─global f(x = 1)\n#&gt;  2.   └─global g(x = 2)\n#&gt;  3.     └─global h(x = 3)\n#&gt;  4.       └─lobstr::cst()\n\n\n\n20.5.1 frames\n调用栈的每个元素都是一个frame，也称为 evaluation context。Frames 是一个极其重要的内部数据结构，R 代码只能访问它的一小部分，因为篡改它会破坏 R。\nframe 有三个关键组件：\n\n给出函数调用的表达式（标有expr ）\n环境（标记为env ）\n父级，调用栈中的上一个调用（由灰色箭头显示）\n\n\n\n\n\n\nFigure 20.2\n\n\n\n20.5.2 Dynamic scope\n在调用栈中而不是在封闭环境中查找变量称为dynamic scoping 。",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>环境</span>"
    ]
  },
  {
    "objectID": "functions.html",
    "href": "functions.html",
    "title": "\n21  函数\n",
    "section": "",
    "text": "21.1 函数类型\nR 语言中函数主要有内置函数（builtin） 、 特殊函数（special ）和 闭包函数（closure）三种类型\nShow the codetypeof(sum)    \n#&gt; [1] \"builtin\"\ntypeof(`[`)\n#&gt; [1] \"special\"\ntypeof(`%&gt;%`)\n#&gt; [1] \"closure\"",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#函数组件",
    "href": "functions.html#函数组件",
    "title": "\n21  函数\n",
    "section": "\n21.2 函数组件",
    "text": "21.2 函数组件\n\n\nformals() 参数列表\n\nbody() 函数体，包括异常处理、执行程序\n\nenvironment() 确定函数如何查找与名称相关联的值的数据结构，俗称环境\n\n\nShow the codef02 &lt;- function(x, y) {\n  # 注释\n  x + y\n}\n\nformals(f02)\n#&gt; $x\n#&gt; \n#&gt; \n#&gt; $y\nbody(f02)\n#&gt; {\n#&gt;     x + y\n#&gt; }\nenvironment(f02)\n#&gt; &lt;environment: R_GlobalEnv&gt;\n\n\n属性 srcref（source reference ），指向函数的源代码\n\nShow the codeattributes(f02)\n#&gt; $srcref\n#&gt; function(x, y) {\n#&gt;   # 注释\n#&gt;   x + y\n#&gt; }",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#sec-Primitive_functions",
    "href": "functions.html#sec-Primitive_functions",
    "title": "\n21  函数\n",
    "section": "\n21.3 原函数",
    "text": "21.3 原函数\n在R中，原函数（primitive functions） 不具备上述三个组件，而是直接通过.Primitive()调用C语言代码实现。\n\nShow the codeformals(sum)\n#&gt; NULL\nbody(sum)\n#&gt; NULL\nenvironment(sum)\n#&gt; NULL\nattributes(sum)\n#&gt; NULL\n\n\n在R语言中，“Primitive functions”（始函数）是使用C语言实现的核心函数，它们是R的基础并且直接映射到底层操作，从而提供了更高的运行效率。原始函数的类型为builtin或special，并且它们通常不接受延迟求值的参数，而是在调用时立即求值 。\n原函数有内置函数（builtin） 和 特殊函数（special ）两种类型。\n\nShow the codesum\n#&gt; function (..., na.rm = FALSE)  .Primitive(\"sum\")\ntypeof(sum)\n#&gt; [1] \"builtin\"\n.Primitive(\"sum\")\n#&gt; function (..., na.rm = FALSE)  .Primitive(\"sum\")\nget(\"sum\",envir = baseenv())\n#&gt; function (..., na.rm = FALSE)  .Primitive(\"sum\")\n\n`[`\n#&gt; .Primitive(\"[\")\ntypeof(`[`)\n#&gt; [1] \"special\"\n.Primitive(\"[\")\n#&gt; .Primitive(\"[\")",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#first-class-functions",
    "href": "functions.html#first-class-functions",
    "title": "\n21  函数\n",
    "section": "\n21.4 First-class functions",
    "text": "21.4 First-class functions\n在编程语言中，“First-class functions”（一级函数或函数作为一等公民）是函数式编程的一个核心概念，它意味着函数可以像任何其他类型的数据（如数字、字符串和对象）一样被传递和操作。具体来说，一级函数具有以下几个关键特性：\n\n可赋值：可以给函数分配一个变量。\n可传递：可以作为参数传递给其他函数。\n可返回：可以从其他函数中作为返回值。\n可创建：可以在运行时创建新函数。\n\n这些特性使得一级函数非常灵活，并且允许编程者以声明式的方式构建复杂的逻辑。\nR语言是一种支持函数式编程的语言，它自然地支持一级函数。以下是R语言中一级函数的一些应用示例：\n\n\n将函数赋值给变量：\n\nShow the codef01 &lt;- function(x) {\n  x^2\n}\n\n\n\n\n将函数作为参数传递：\n\nShow the codeapply_func &lt;- function(x, f) {\n  f(x)\n}\nresult &lt;- apply_func(10, f01) # 将函数f01()作为参数传递\n\n\n\n\n从函数中返回函数：\n\nShow the codecreate_multiplier &lt;- function(n) {\n  function(x) {\n    x * n\n  }\n}\n\ndouble &lt;- create_multiplier(2)\nresult &lt;- double(10) # 返回20\n\n\n\n\n匿名函数 anonymous function：\n\nShow the codesapply(c(1,2,3,4,5), function(x) x*2)\n#&gt; [1]  2  4  6  8 10\n\n\n\n\nLambda函数：在较新版本的R中，可以使用~来定义Lambda函数，是一种简洁的匿名函数定义方式。\n\nShow the codemap_dbl(1:5, ~.x * 2)\n#&gt; [1]  2  4  6  8 10\n\n\n\n\n函数的高阶特性：\n\nShow the codemap_values &lt;- function(x, f) {\n  vapply(x, f, FUN.VALUE = double(1))\n}\n\nresult &lt;- map_values(c(1,2,3,4,5), function(x) x ^ 2)\n\n\n在R中，vapply、sapply、lapply、mapply 等函数都是高阶函数的例子，它们可以接受另一个函数作为参数，并对数据集执行操作。\n\n\n\n21.4.1 一级函数的优势：\n\n代码复用：通过将函数作为参数，可以编写更通用、更可重用的代码。\n模块化：一级函数有助于将程序分解为更小、更易于管理的部分。\n抽象：它们允许开发者创建更高级别的抽象，简化复杂逻辑的表达。\n灵活性：一级函数提供了编写灵活和动态代码的能力。\n\n函数式编程和一级函数是现代编程范式的重要组成部分，它们在数据处理和统计计算中尤其有用，这也是R语言作为统计计算语言的一个强大特性。\n\n21.4.2 函数列表\n\nShow the codefuns &lt;- list(\n  half = function(x) x / 2,\n  double = function(x) x * 2\n)\nfuns$double(10)\n#&gt; [1] 20\n\n\n\n21.4.3 函数闭包\n在 R 中，你经常会看到称为 闭包（closure）（内嵌在函数体的函数） 的函数。\n函数是对象，使用创建函数闭包（function closure）时的即存在的状态值进行封装的函数。\n\nShow the codetypeof(ggplot)\n#&gt; [1] \"closure\"",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#函数调用",
    "href": "functions.html#函数调用",
    "title": "\n21  函数\n",
    "section": "\n21.5 函数调用",
    "text": "21.5 函数调用\n\nShow the codeargs &lt;- list(1:10, na.rm = TRUE)  # 参数列表\ndo.call(mean, args)\n#&gt; [1] 5.5",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#词法作用域",
    "href": "functions.html#词法作用域",
    "title": "\n21  函数\n",
    "section": "\n21.6 词法作用域",
    "text": "21.6 词法作用域\n词法作用域lexical scoping ，即函数运行中需要使用某个变量时，从其定义时的环境向外层逐层查找，而不是在调用时的环境中查找。这种查找找到变量对应的存储空间后，使用其当前值，而不是历史值，这种规则称为动态查找（dynamic lookup）\n函数的作用域（scope）在R中称为环境。当一个函数被创建后，R 中存在一个让这个函数发挥作用的环境。\n在启动 R 之后，我们就进去了一个全局环境之中（Global Environment），我们创建的各自变量、函数都会处于其中。\n对象可以通过参数传递到函数中，但不会被函数改变。传递的是对象的副本而不是对象本身。除非使用 &lt;&lt;- 特殊赋值符。\n\nShow the codex &lt;- 2\ny &lt;- 3\nz &lt;- 4\nf &lt;- function(w){\n    z &lt;- 2\n    x &lt;- w*y*z\n    return(x)\n}\nf(x)\n#&gt; [1] 12\nx\n#&gt; [1] 2\ny\n#&gt; [1] 3\nz\n#&gt; [1] 4\n\n\nLexical scoping:\n\nName masking\nFunctions versus variables\nA fresh start\nDynamic lookup\n\n\n21.6.1 Name masking\n在函数内部定义的名称会掩盖在函数外部定义的名称。\n\nShow the codex &lt;- 10\ny &lt;- 20\ng02 &lt;- function() {\n  x &lt;- 1\n  y &lt;- 2\n  c(x, y)\n}\ng02()\n#&gt; [1] 1 2\n\n\n如果未在函数中定义名称，则 R 将向上查找。\n\nShow the codex &lt;- 2\ng03 &lt;- function() {\n  y &lt;- 1\n  c(x, y)\n}\ng03()\n#&gt; [1] 2 1\n\ny\n#&gt; [1] 20",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#惰性求值",
    "href": "functions.html#惰性求值",
    "title": "\n21  函数\n",
    "section": "\n21.7 惰性求值",
    "text": "21.7 惰性求值\nLazy evaluation 是一种将操作延迟到真正需要它的结果时才执行的优化技术。\n惰性求值由称为 promise 或thunk 的数据结构提供支持。\n\n21.7.1 promise\n一个表达式，调用函数的环境，一个值，局部变量作用域求值\n\nShow the codedouble &lt;- function(x) { \n  message(\"Calculating...\")\n  x * 2\n}\n\nh03 &lt;- function(x) {\n  c(x, x)\n}\n\nh03(double(20))\n#&gt; [1] 40 40",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#传递参数",
    "href": "functions.html#传递参数",
    "title": "\n21  函数\n",
    "section": "\n21.8 传递参数",
    "text": "21.8 传递参数\n关键字传参，位置传参\n\n21.8.1 默认参数\n\nShow the codeh04 &lt;- function(x = 1, y = x * 2, z = a + b) {\n  a &lt;- 10\n  b &lt;- 100\n  \n  c(x, y, z)\n}\nh04()\n#&gt; [1]   1   2 110\n\n# 查看参数的名称和默认值\nargs(h04)\n#&gt; function (x = 1, y = x * 2, z = a + b) \n#&gt; NULL\n\n\n\n21.8.2 缺失参数\n\nShow the codeh06 &lt;- function(x = 10) {\n  list(missing(x), x)\n}\nstr(h06())\n#&gt; List of 2\n#&gt;  $ : logi TRUE\n#&gt;  $ : num 10\n\nstr(h06(10))\n#&gt; List of 2\n#&gt;  $ : logi FALSE\n#&gt;  $ : num 10",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#特殊参数...",
    "href": "functions.html#特殊参数...",
    "title": "\n21  函数\n",
    "section": "\n21.9 特殊参数...\n",
    "text": "21.9 特殊参数...\n\nvariable arguments，有了它，函数可以接受任意数量的附加参数。还可以将附加参数传递给另一个函数\n\nShow the codeaddAll &lt;- function(x, ...) {\n  args &lt;- list(...)\n  for (a in args) {\n    x &lt;- x + a\n  }\n  return(x)\n}\naddAll(3, 4, 5, 6, 7, 8)\n#&gt; [1] 33\n\n\n使用list() 将传入的 ... 转换为列表，然后再进行处理\n\nShow the codei01 &lt;- function(y, z) {\n  list(y = y, z = z)\n}\n\ni02 &lt;- function(x, ...) {\n  i01(...)\n}\nstr(i02(x = 1, y = 2, z = 3))\n#&gt; List of 2\n#&gt;  $ y: num 2\n#&gt;  $ z: num 3\ni02(x = 1, y = 2, z = 3)\n#&gt; $y\n#&gt; [1] 2\n#&gt; \n#&gt; $z\n#&gt; [1] 3\n\n\n特殊形式 ..N，按位置引用参数，使用 ..1、..2 等直接引用 … 对象中的第 1 个元素、第 2 个元素。\n\nShow the codei03 &lt;- function(...) {\n  list(first = ..1, third = ..3)\n}\nstr(i03(1, 2, 3))\n#&gt; List of 2\n#&gt;  $ first: num 1\n#&gt;  $ third: num 3\n\n\nlist(...)计算参数并将它们存储在列表中\n\nShow the codei04 &lt;- function(...) {\n  list(...)\n}\nstr(i04(a = 1, b = 2))\n#&gt; List of 2\n#&gt;  $ a: num 1\n#&gt;  $ b: num 2",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#退出函数",
    "href": "functions.html#退出函数",
    "title": "\n21  函数\n",
    "section": "\n21.10 退出函数",
    "text": "21.10 退出函数\n返回一个对象，或者，错误\n\n21.10.1 隐式返回值\n最后计算的表达式是返回值\n\nShow the codej01 &lt;- function(x) {\n  if (x &lt; 10) {\n    0\n  } else {\n    10\n  }\n}\nj01(5)\n#&gt; [1] 0\n\nj01(15)\n#&gt; [1] 10\n\n\n\n21.10.2 显示返回值\n调用return()\n\nShow the codej02 &lt;- function(x) {\n  if (x &lt; 10) {\n    return(0)\n  } else {\n    return(10)\n  }\n}\n\n\n\n21.10.3 不可见值\n大多数函数都以可见方式返回：在交互式上下文中调用函数会自动打印结果\n\nShow the codej03 &lt;- function() 1\nj03()\n#&gt; [1] 1\n\n\n通过应用invisible()于最后一个值来阻止自动打印：\n\nShow the codej04 &lt;- function() invisible(1)\nj04()\n\n\n若要验证此值是否确实存在，可以显式打印它或将其括在括号中,或者使用返回值和可见性标志：withVisible()\n\nShow the codeprint(j04())\n#&gt; [1] 1\n\n\n(j04())\n#&gt; [1] 1\n\nwithVisible(j04())\n#&gt; $value\n#&gt; [1] 1\n#&gt; \n#&gt; $visible\n#&gt; [1] FALSE\n\n\n不可见返回的最常见函数是：&lt;-\n\nShow the codea &lt;- 2\n(a &lt;- 2)\n#&gt; [1] 2\n\na &lt;- b &lt;- c &lt;- d &lt;- 2\n\n\n\n21.10.4 Errors\n如果函数无法完成其分配的任务，则应抛出错误，并立即终止函数的执行。\n\nShow the codej05 &lt;- function() {\n  stop(\"I'm an error\")\n  return(10)\n}\nj05()\n#&gt; Error in j05(): I'm an error\n\n\n\n21.10.5 退出处理程序\n\nShow the codej06 &lt;- function(x) {\n  cat(\"Hello\\n\")\n  on.exit(cat(\"Goodbye!\\n\"), add = TRUE) # 使用  add = TRUE 时始终设置\n  \n  if (x) {\n    return(10)\n  } else {\n    stop(\"Error\")\n  }\n}\n\nj06(TRUE)\n#&gt; Hello\n#&gt; Goodbye!\n#&gt; [1] 10\n\n\nj06(FALSE)\n#&gt; Hello\n#&gt; Error in j06(FALSE): Error\n#&gt; Goodbye!",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#函数形式",
    "href": "functions.html#函数形式",
    "title": "\n21  函数\n",
    "section": "\n21.11 函数形式",
    "text": "21.11 函数形式\n\nprefix： foofy(a, b, c)\n\ninfix： x + y\n\nreplacement：names(df) &lt;- c(\"a\", \"b\", \"c\")\n\nspecial：[[, if ,for\n\n\n\nShow the codex &lt;- 2\ny &lt;- 1\nx + y\n#&gt; [1] 3\n`+`(x, y)\n#&gt; [1] 3\n\n\nfor(i in 1:10) print(i)\n#&gt; [1] 1\n#&gt; [1] 2\n#&gt; [1] 3\n#&gt; [1] 4\n#&gt; [1] 5\n#&gt; [1] 6\n#&gt; [1] 7\n#&gt; [1] 8\n#&gt; [1] 9\n#&gt; [1] 10\n`for`(i, 1:10, print(i))\n#&gt; [1] 1\n#&gt; [1] 2\n#&gt; [1] 3\n#&gt; [1] 4\n#&gt; [1] 5\n#&gt; [1] 6\n#&gt; [1] 7\n#&gt; [1] 8\n#&gt; [1] 9\n#&gt; [1] 10\n\n\n\n21.11.1 前缀形式\n是 R 代码中最常见的形式，参数按确切名称匹配，然后与唯一前缀匹配，最后按位置匹配。\n\nShow the codek01 &lt;- function(abcdef, bcde1, bcde2) {\n  list(a = abcdef, b1 = bcde1, b2 = bcde2)\n}\nstr(k01(2, 3, abcdef = 1))\n#&gt; List of 3\n#&gt;  $ a : num 1\n#&gt;  $ b1: num 2\n#&gt;  $ b2: num 3\nstr(k01(2, 3, a = 1))  # 部分匹配\n#&gt; List of 3\n#&gt;  $ a : num 1\n#&gt;  $ b1: num 2\n#&gt;  $ b2: num 3\noptions(warnPartialMatchArgs = TRUE)\nx &lt;- k01(a = 1, 2, 3)\n\n\n\n21.11.2 中缀形式\n\nShow the code`%+%` &lt;- function(a, b) paste0(a, b)\n\"new \" %+% \"string\"\n#&gt; [1] \"new string\"\n\n\n\n21.11.3 替换形式\n\nShow the code`second&lt;-` &lt;- function(x, value) {\n  x[2] &lt;- value\n  x\n}\nx &lt;- 1:10\nsecond(x) &lt;- 5L\nx\n#&gt;  [1]  1  5  3  4  5  6  7  8  9 10\n\n\n\n21.11.4 特殊形式\n所有特殊形式都作为原函数 实现（即在 C 中），这意味着打印这些函数没有信息。\n\nShow the code`for`\n#&gt; .Primitive(\"for\")\nformals(`for`)\n#&gt; NULL",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "Functional_Programming.html",
    "href": "Functional_Programming.html",
    "title": "\n22  函数式编程\n",
    "section": "",
    "text": "函数式编程（Functional Programming）：将计算视为数学函数的求值，强调使用纯函数、不可变数据和高阶函数。典型代表语言：Haskell、Clojure、Scala。\n\nShow the codef &lt;- function(x, fun) {\n  fun(x)\n}\n\nf(1:10, sum)\n#&gt; [1] 55\nf(1:10, quantile)\n#&gt;    0%   25%   50%   75%  100% \n#&gt;  1.00  3.25  5.50  7.75 10.00\n\n\n在我们创建的函数 f() 中，我们可以理解为对传入函数的 mean()、sum() 等函数重命名成 fun() 并进行调用。\n\nShow the codef2 &lt;- function(type) {\n  switch(type,\n         mean = mean,\n         sum = sum,\n         quantile = quantile)\n}\nmean\n#&gt; function (x, ...) \n#&gt; UseMethod(\"mean\")\n#&gt; &lt;bytecode: 0x0000018042390298&gt;\n#&gt; &lt;environment: namespace:base&gt;\nf2(\"mean\")\n#&gt; function (x, ...) \n#&gt; UseMethod(\"mean\")\n#&gt; &lt;bytecode: 0x0000018042390298&gt;\n#&gt; &lt;environment: namespace:base&gt;\n\nf2(\"mean\")(1:10)\n#&gt; [1] 5.5",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>函数式编程</span>"
    ]
  },
  {
    "objectID": "Generic_Programming.html",
    "href": "Generic_Programming.html",
    "title": "23  泛型编程",
    "section": "",
    "text": "泛型编程（Generic Programming）是一种编程范式，它通过使用参数化类型（Parameterized Types）和参数化函数（Parameterized Functions）来实现通用的算法和数据结构。泛型编程的核心思想是将算法和数据结构与具体的数据类型解耦合，使得代码能够适用于多种数据类型，提高代码的重用性和可扩展性。典型代表语言：C++、Rust。\n泛型编程的目的是编写可以在不考虑具体数据类型的情况下工作的代码，从而提高代码的复用性和性能。泛型编程通过使用类型参数（或称为模板参数）来实现通用性。类型参数可以在代码中用于定义变量、函数或类，从而使它们能够适用于多种不同的数据类型。通过泛型编程，可以实现在编译时对类型进行检查，提供更好的类型安全性，并避免代码中的类型转换。\nOOP 将data和methods关联在一起\nGP将data和methods分开来",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>23</span>  <span class='chapter-title'>泛型编程</span>"
    ]
  },
  {
    "objectID": "object_oriented_programming.html",
    "href": "object_oriented_programming.html",
    "title": "\n24  面向对象编程\n",
    "section": "",
    "text": "24.1 程序设计的范式\n程序设计的范式：",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>面向对象编程</span>"
    ]
  },
  {
    "objectID": "object_oriented_programming.html#程序设计的范式",
    "href": "object_oriented_programming.html#程序设计的范式",
    "title": "\n24  面向对象编程\n",
    "section": "",
    "text": "面向过程（Procedural Programming）：将问题分解为一系列相互关联的过程或函数，并按照一定的顺序执行这些过程以解决问题。\n基于对象（Object-Based Programming）：基于对象范式强调将数据和操作封装在一起，形成独立的对象。每个对象都拥有属性和方法，通过对象之间的交互来实现功能。也称为基于原型（prototyped-based）\n\n面向对象（Object-Oriented Programming, OOP）：面向对象范式强调将现实世界的事物抽象为对象，通过类（Class）和实例（Instance）来组织和管理代码。\n\n基于泛型函数 OOP： 方法属于泛型函数，函数调用，内部组件也是函数。generic_function(object, arg2, arg3)，如S3类、S4类\n基于原型（prototyped-based）：如 ggproto？\n基于类（class-based） ：方法属于对象或类，对象封装了数据（属性）和 行为（方法）。object.method(arg1, arg2)，如 R6类",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>面向对象编程</span>"
    ]
  },
  {
    "objectID": "object_oriented_programming.html#oop",
    "href": "object_oriented_programming.html#oop",
    "title": "\n24  面向对象编程\n",
    "section": "\n24.2 OOP",
    "text": "24.2 OOP\n特点：\n\n\n封装（encapsulation）：是把客观事物封装成抽象的类，并且类可以把自己的数据和方法只让可信的类或者对象操作，对不可信的进行信息隐藏。\n\n\n\n继承（inheritance）：子类（child class）自动共享父类（parent class）数据结构和方法的机制，这是类之间的一种关系。在定义和实现一个类的时候，可以在一个已经存在的类的基础之上来进行，使用现有类的所有功能，并在无需重新编写原来的类的情况下对这些功能进行扩展。通过继承创建的新类称为“子类”或“派生类”；被继承的类称为“基类”、“父类”或“超类”（super class）。\n\n\n\n多态（polymorphism）：由继承而产生的相关的不同的类，其对象对同一消息做出不同的响应。将函数的接口与其实现分开考虑，对不同类型的输入使用相同的函数形式。\n\n\n\nOO 系统\n\n类 （class）定义对象的集合。\n方法（method）描述对象的行为。\n属性（fields） 即该类的每个实例（instance）所拥有的属性\n方法调度（method dispatch） 在给定类的情况下查找正确方法的过程称为方法调度",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>面向对象编程</span>"
    ]
  },
  {
    "objectID": "object_oriented_programming.html#r-中的对象",
    "href": "object_oriented_programming.html#r-中的对象",
    "title": "\n24  面向对象编程\n",
    "section": "\n24.3 R 中的对象",
    "text": "24.3 R 中的对象\nR中存在的一切都是一个对象，包括 base objects 和 OO objects 。\n\n\n\n\n\n24.3.1 base objects\nbase 对象来自 S 语言\n\nShow the codeif(!require(sloop)) install.packages(\"sloop\")\n# A base object:\nsloop::otype(`[`)\n#&gt; [1] \"base\"\nis.object(`[`)\n#&gt; [1] FALSE\n\n# An OO object\nsloop::otype(mtcars)\n#&gt; [1] \"S3\"\nis.object(mtcars)\n#&gt; [1] TRUE\nmle_obj &lt;- stats4::mle(function(x = 1) (x - 2) ^ 2)\nsloop::otype(mle_obj)\n#&gt; [1] \"S4\"\n\n\nbase 对象和 OO 对象之间的区别在于 OO 对象具有class属性\n\nShow the codeattr(1:10, \"class\")\n#&gt; NULL\nattr(mtcars, \"class\")\n#&gt; [1] \"data.frame\"\n\n\n虽然只有 OO 对象具有类class属性，但每个对象都具有基本类型（base type）：包括基本数据类型（数值，字符，逻辑，复数等），数据结构 （data.frame，list ），function（闭包、内置、特殊），环境，类，…… 等等。\n\nShow the code# base objects\ntypeof(1:10)\n#&gt; [1] \"integer\"\ntypeof(mtcars)\n#&gt; [1] \"list\"\ntypeof(mean)\n#&gt; [1] \"closure\"\nclass(mean)\n#&gt; [1] \"function\"\ntypeof(`[`)\n#&gt; [1] \"special\"\ntypeof(sum) \n#&gt; [1] \"builtin\"\n\n# OO objects\ntypeof(mle_obj)\n#&gt; [1] \"S4\"\n\ntypeof(globalenv())\n#&gt; [1] \"environment\"\n\n\n\n24.3.2 OO objects：class 属性\n\nS3：是 R 的第一个 OOP 系统，Statistical Models in S\nS4：是对 S3 的正式和严格的重写，Programming with Data，S4 在默认安装(options()$defaultPackages) methods 包中实现。Bioconductor 项目使用的就是S4类。\nR6：构建在环境之上的封装OOP，具有引用语义，modified in-place 而非“修改时复制（copy-on-modify）”，在 R6 包中实现。\nprototype（原型）：模糊类和类（对象）的实例之间的区别，通常指的是一个对象的初始实例，它定义了一组属性和方法，其他对象可以基于这个原型进行创建。例如ggplot2 包的ggproto类",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>面向对象编程</span>"
    ]
  },
  {
    "objectID": "object_oriented_programming.html#封装",
    "href": "object_oriented_programming.html#封装",
    "title": "\n24  面向对象编程\n",
    "section": "\n24.4 封装",
    "text": "24.4 封装\n\nShow the code# 定义老师对象和行为\nteacher &lt;- function(x, ...) UseMethod(\"teacher\")\nteacher.lecture &lt;- function(x) print(\"讲课\")\nteacher.assignment &lt;- function(x) print(\"布置作业\")\nteacher.correcting &lt;- function(x) print(\"批改作业\")\nteacher.default&lt;-function(x) print(\"你不是teacher\")\n\n# 定义同学对象和行为\nstudent &lt;- function(x, ...) UseMethod(\"student\")\nstudent.attend &lt;- function(x) print(\"听课\")\nstudent.homework &lt;- function(x) print(\"写作业\")\nstudent.exam &lt;- function(x) print(\"考试\")\nstudent.default&lt;-function(x) print(\"你不是student\")\n\n# 定义两个变量，a老师和b同学\na&lt;-'teacher'\nb&lt;-'student'\n\n# 给老师变量设置行为\nattr(a,'class') &lt;- 'lecture'\n# 执行老师的行为\nteacher(a)\n#&gt; [1] \"讲课\"\n\n# 给同学变量设置行为\nattr(b,'class') &lt;- 'attend'\n# 执行同学的行为\nstudent(b)\n#&gt; [1] \"听课\"\n\n\nattr(a,'class') &lt;- 'assignment'\nteacher(a)\n#&gt; [1] \"布置作业\"\n\n\nattr(b,'class') &lt;- 'homework'\nstudent(b)\n#&gt; [1] \"写作业\"\n\n \nattr(a,'class') &lt;- 'correcting'\nteacher(a)\n#&gt; [1] \"批改作业\"\n \nattr(b,'class') &lt;- 'exam'\nstudent(b)\n#&gt; [1] \"考试\"\n\n\n# 定义一个变量，既是老师又是同学 \nab&lt;-'student_teacher'\n# 分别设置不同对象的行为\nattr(ab,'class') &lt;- c('lecture','homework')\n# 执行老师的行为\nteacher(ab)\n#&gt; [1] \"讲课\"\n\n# 执行同学的行为\nstudent(ab)\n#&gt; [1] \"写作业\"",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>面向对象编程</span>"
    ]
  },
  {
    "objectID": "object_oriented_programming.html#继承",
    "href": "object_oriented_programming.html#继承",
    "title": "\n24  面向对象编程\n",
    "section": "\n24.5 继承",
    "text": "24.5 继承\n\nShow the code# 给同学对象增加新的行为\nstudent.correcting &lt;- function(x) print(\"帮助老师批改作业\")\n\n# 辅助变量用于设置初始值\nchar0 = character(0)\n\n# 实现继承关系\ncreate &lt;- function(classes=char0, parents=char0) {\n     mro &lt;- c(classes)\n     for (name in parents) {\n         mro &lt;- c(mro, name)\n         ancestors &lt;- attr(get(name),'type')\n         mro &lt;- c(mro, ancestors[ancestors != name])\n     }\n     return(mro)\n}\n\n# 定义构造函数，创建对象\nNewInstance &lt;- function(value=0, classes=char0, parents=char0) {\n     obj &lt;- value\n     attr(obj,'type') &lt;- create(classes, parents)\n     attr(obj,'class') &lt;- c('homework','correcting','exam')\n     return(obj)\n }\n\n# 创建父对象实例\nStudentObj &lt;- NewInstance()\n\n# 创建子对象实例\ns1 &lt;- NewInstance('普通同学',classes='normal', parents='StudentObj')\ns2 &lt;- NewInstance('课代表',classes='leader', parents='StudentObj')\n\n# 给课代表，增加批改作业的行为\nattr(s2,'class') &lt;- c(attr(s2,'class'),'correcting')\n\n# 查看普通同学的对象实例\ns1\n#&gt; [1] \"普通同学\"\n#&gt; attr(,\"type\")\n#&gt; [1] \"normal\"     \"StudentObj\"\n#&gt; attr(,\"class\")\n#&gt; [1] \"homework\"   \"correcting\" \"exam\"\nattr(s1,\"type\")\n#&gt; [1] \"normal\"     \"StudentObj\"\n\nattr(s1,\"class\")\n#&gt; [1] \"homework\"   \"correcting\" \"exam\"\n\n\n# 查看课代表的对象实例\ns2\n#&gt; [1] \"课代表\"\n#&gt; attr(,\"type\")\n#&gt; [1] \"leader\"     \"StudentObj\"\n#&gt; attr(,\"class\")\n#&gt; [1] \"homework\"   \"correcting\" \"exam\"       \"correcting\"\nattr(s2,\"type\")\n#&gt; [1] \"leader\"     \"StudentObj\"\nattr(s2,\"class\")\n#&gt; [1] \"homework\"   \"correcting\" \"exam\"       \"correcting\"",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>面向对象编程</span>"
    ]
  },
  {
    "objectID": "object_oriented_programming.html#多态",
    "href": "object_oriented_programming.html#多态",
    "title": "\n24  面向对象编程\n",
    "section": "\n24.6 多态",
    "text": "24.6 多态\n\nShow the code# 创建优等生和次等生，两个实例\ne1 &lt;- NewInstance('优等生',classes='excellent', parents='StudentObj')\ne2 &lt;- NewInstance('次等生',classes='poor', parents='StudentObj')\n\n# 修改同学考试的行为，大于85分结果为优秀，小于70分结果为及格\nstudent.exam &lt;- function(x,score) {\n     p&lt;-\"考试\"\n     if(score&gt;85) print(paste(p,\"优秀\",sep=\"\"))\n     if(score&lt;70) print(paste(p,\"及格\",sep=\"\"))\n}\n\n# 执行优等生的考试行为，并输入分数为90\nattr(e1,'class') &lt;- 'exam'\nstudent(e1,90)\n#&gt; [1] \"考试优秀\"\n\n\n# 执行次等生的考试行为，并输入分数为66\nattr(e2,'class') &lt;- 'exam'\nstudent(e2,66)\n#&gt; [1] \"考试及格\"",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>面向对象编程</span>"
    ]
  },
  {
    "objectID": "object_oriented_programming.html#s3类",
    "href": "object_oriented_programming.html#s3类",
    "title": "\n24  面向对象编程\n",
    "section": "\n24.7 S3类",
    "text": "24.7 S3类\n构造S3类的三原则\n\n命名 new_class_name()\nbase object 有一个参数，每个属性有一个参数。\n检查base object的类型和每个属性的类型\n\nhttp://blog.fens.me/r-class-s3/\nS3 对象是至少具有一个属性（其他属性可用于存储其他数据）的base type( 有mode属性)。\n\nShow the codef &lt;- factor(c(\"a\", \"b\", \"c\"))\n\n# 基本类型\ntypeof(f)\n#&gt; [1] \"integer\"\n\n# 其他属性\nattributes(f)\n#&gt; $levels\n#&gt; [1] \"a\" \"b\" \"c\"\n#&gt; \n#&gt; $class\n#&gt; [1] \"factor\"\n\n\n剥离类属性，保留其他属性\n\nShow the codeunclass(f)\n#&gt; [1] 1 2 3\n#&gt; attr(,\"levels\")\n#&gt; [1] \"a\" \"b\" \"c\"\n\n\n查看方法调度，generic.class()\n\nShow the codelibrary(sloop)\ns3_dispatch(print(f))\n#&gt; =&gt; print.factor\n#&gt;  * print.default\n\n\n\n24.7.1 创建S3类和实例\n要使对象成为S3 类的实例，您只需设置类属性即可。\n\nShow the codex &lt;- structure(list(), class = \"custom_class\")\n\n# 或者\nx &lt;- list()\nclass(x) &lt;- \"custom_class\"\n\n\n\nShow the codeclass(x)\n#&gt; [1] \"custom_class\"\n\ninherits(x, \"custom_class\")\n#&gt; [1] TRUE\n\n\nDate 类\n\nShow the codenew_Date &lt;- function(x = double()) {\n  stopifnot(is.double(x))\n  structure(x, class = \"Date\")\n}\nnew_Date(c(-1, 0, 1))\n#&gt; [1] \"1969-12-31\" \"1970-01-01\" \"1970-01-02\"\n\n\ndifftime 类\n\nShow the codenew_difftime &lt;- function(x = double(), units = \"secs\") {\n  stopifnot(is.double(x))\n  units &lt;- match.arg(units, c(\"secs\", \"mins\", \"hours\", \"days\", \"weeks\"))\n\n  structure(x,\n    class = \"difftime\",\n    units = units\n  )\n}\nnew_difftime(52, \"weeks\")\n#&gt; Time difference of 52 weeks\n\n\n有效性验证\n\nShow the codenew_factor &lt;- function(x = integer(), levels = character()) {\n  stopifnot(is.integer(x))\n  stopifnot(is.character(levels))\n\n  structure(\n    x,\n    levels = levels,\n    class = \"factor\"\n  )\n}\n\nnew_factor(1:5, \"a\")\n#&gt; Error in as.character.factor(x): malformed factor\nnew_factor(0:1, \"a\")\n#&gt; Error in as.character.factor(x): malformed factor\n\n\n\nShow the codevalidate_factor &lt;- function(x) {\n  values &lt;- unclass(x)\n  levels &lt;- attr(x, \"levels\")\n\n  if (!all(!is.na(values) & values &gt; 0)) {\n    stop(\n      \"All `x` values must be non-missing and greater than zero\",\n      call. = FALSE\n    )\n  }\n\n  if (length(levels) &lt; max(values)) {\n    stop(\n      \"There must be at least as many `levels` as possible values in `x`\",\n      call. = FALSE\n    )\n  }\n\n  x\n}\nvalidate_factor(new_factor(1:5, \"a\"))\n#&gt; Error: There must be at least as many `levels` as possible values in `x`\nvalidate_factor(new_factor(0:1, \"a\"))\n#&gt; Error: All `x` values must be non-missing and greater than zero\n\n\n如果希望用户从类中构造对象，还应该提供一个帮助程序方法\n\n强制类型转换\n\n\nShow the codedifftime &lt;- function(x = double(), units = \"secs\") {\n  x &lt;- as.double(x)\n  new_difftime(x, units = units)\n}\n\ndifftime(1:10)\n#&gt; Time differences in secs\n#&gt;  [1]  1  2  3  4  5  6  7  8  9 10\n\n\n\n复杂对象字符串表示\n\n\nShow the codefactor &lt;- function(x = character(), levels = unique(x)) {\n  ind &lt;- match(x, levels)\n  validate_factor(new_factor(ind, levels))\n}\n\nfactor(c(\"a\", \"a\", \"b\"))\n#&gt; [1] a a b\n#&gt; Levels: a b\n\n\n\n复杂对象由多个简单组件指定\n\n\nShow the codePOSIXct &lt;- function(year = integer(), \n                    month = integer(), \n                    day = integer(), \n                    hour = 0L, \n                    minute = 0L, \n                    sec = 0, \n                    tzone = \"\") {\n  ISOdatetime(year, month, day, hour, minute, sec, tz = tzone)\n}\n\nPOSIXct(2020, 1, 1, tzone = \"Asia/Shanghai\")\n#&gt; [1] \"2020-01-01 CST\"\n\n\n\n24.7.2 泛型函数和方法调度\n泛型函数（generic function）\n\nShow the codemy_new_generic &lt;- function(x) {\n  UseMethod(\"my_new_generic\")\n}\n\n\n\nShow the codelibrary(\"sloop\")\nx &lt;- matrix(1:10, nrow = 2)\ns3_dispatch(mean(x))\n#&gt;    mean.matrix\n#&gt;    mean.integer\n#&gt;    mean.numeric\n#&gt; =&gt; mean.default\n\n\n=&gt;指示调用的方法\n*指示此处已定义但未调用的方法，“default”类是一个特殊的伪类。这不是一个真正的类，但包含它是为了可以定义一个标准回退，每当特定于类的方法不可用时，就会找到该回退。\n\nShow the codemean\n#&gt; function (x, ...) \n#&gt; UseMethod(\"mean\")\n#&gt; &lt;bytecode: 0x000002089db94298&gt;\n#&gt; &lt;environment: namespace:base&gt;\ns3_methods_generic(\"mean\")\n\n\n\n\ngeneric\nclass\nvisible\nsource\n\n\n\nmean\nDate\nTRUE\nbase\n\n\nmean\ndefault\nTRUE\nbase\n\n\nmean\ndifftime\nTRUE\nbase\n\n\nmean\nPOSIXct\nTRUE\nbase\n\n\nmean\nPOSIXlt\nTRUE\nbase\n\n\nmean\nquosure\nFALSE\nregistered S3method\n\n\nmean\nvctrs_vctr\nFALSE\nregistered S3method\n\n\n\n\n\nShow the codes3_methods_class(\"ordered\")\n\n\n\n\ngeneric\nclass\nvisible\nsource\n\n\n\nas.data.frame\nordered\nTRUE\nbase\n\n\nOps\nordered\nTRUE\nbase\n\n\nrelevel\nordered\nFALSE\nregistered S3method\n\n\nscale_type\nordered\nFALSE\nregistered S3method\n\n\nSummary\nordered\nTRUE\nbase\n\n\ntype_sum\nordered\nFALSE\nregistered S3method\n\n\n\n\n\n\n\n24.7.3 示例\n\nShow the code# S3 方法示例\ngeneric_function &lt;- function(x, y) {\n  UseMethod(\"generic_function\")\n}\n\n# 为numeric类定义方法\ngeneric_function.numeric &lt;- function(x, y) {\n  print(x + y)\n}\n\n# 为character类定义方法\ngeneric_function.character &lt;- function(x, y, sep = \" \" ) {\n  print(paste(x, y, sep = sep))\n}\n\n# 调用函数\ngeneric_function(1, 2)  # 输出 3\n#&gt; [1] 3\ngeneric_function(\"Hello\", \"World\")  # 输出 \"HelloWorld\"\n#&gt; [1] \"Hello World\"\n\n\n# + 多态 示例\n`+` &lt;- function(x, y) {\n  UseMethod(\"+\")\n}\n\n# 为character类定义方法\n`+.character`&lt;- function(x, y) {\n  print(paste0(x, y))\n}\n\n\"a\"+\"b\"+\"c\"\n#&gt; [1] \"ab\"\n#&gt; [1] \"abc\"",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>面向对象编程</span>"
    ]
  },
  {
    "objectID": "object_oriented_programming.html#s4类",
    "href": "object_oriented_programming.html#s4类",
    "title": "\n24  面向对象编程\n",
    "section": "\n24.8 S4类",
    "text": "24.8 S4类\n创建类 setClass() ，创建泛型函数 setGeneric() ，创建方法 setMethod()\nhttp://blog.fens.me/r-class-s4/\n此外，S4 提供多重继承（即一个类可以有多个父级）和多重调度（即方法调度可以使用多个参数的类）\nS4 的一个重要新组件是 slot，它是对象的命名组件，使用专用子集运算符 @（发音为 at）进行访问。 accessor functions @\nbioconductor S4类和方法\n\nShow the codelibrary(methods)\n\n\n\n24.8.1 创建类、实例化、泛型函数和方法\n\nShow the codesetClass(\n    #类名\n    \"Person\",\n    \n    # 名称和类的命名字符向量\n    slots = c(name = \"character\", age = \"numeric\"),\n    \n    # 默认值列表\n    prototype = list(name = NA_character_, age = NA_real_)\n)\n\n# 实例化\nx &lt;- new(\"Person\", name = \"XXX\",age=24)\n\nstr(x)\n#&gt; Formal class 'Person' [package \".GlobalEnv\"] with 2 slots\n#&gt;   ..@ name: chr \"XXX\"\n#&gt;   ..@ age : num 24\n\nx@name\n#&gt; [1] \"XXX\"\nslot(x,\"age\")\n#&gt; [1] 24\n\n\n# 泛型函数 ： 定义\n\nsetGeneric(\"age\", function(x) standardGeneric(\"age\"))\n#&gt; [1] \"age\"\nsetGeneric(\"age&lt;-\", function(x, value) standardGeneric(\"age&lt;-\"))\n#&gt; [1] \"age&lt;-\"\n\nsetGeneric(\"name\", function(x) standardGeneric(\"name\"))\n#&gt; [1] \"name\"\nsetGeneric(\"name&lt;-\", function(x, value) standardGeneric(\"name&lt;-\"))\n#&gt; [1] \"name&lt;-\"\n\n# 方法 ： 实现\nsetMethod(\"age\", \"Person\", function(x) x@age)\nsetMethod(\"age&lt;-\", \"Person\", function(x, value) {\n  x@age &lt;- value\n  x\n})\nage(x)\n#&gt; [1] 24\nage(x) &lt;- 13\nage(x)\n#&gt; [1] 13\n\nsetMethod(\"show\", \"Person\", function(object) {\n  cat(is(object)[[1]], \"\\n\",\n      \"  Name: \", object@name, \"\\n\",\n      \"  Age:  \", object@age, \"\\n\",\n      sep = \"\"\n  )\n})\nsloop::otype(x)\n#&gt; [1] \"S4\"\nsloop::ftype(age)\n#&gt; [1] \"S4\"      \"generic\"\n\nx\n#&gt; Person\n#&gt;   Name: XXX\n#&gt;   Age:  13\n\n\nsetMethod(\"name\", \"Person\", function(x) x@name)\nname(x)\n#&gt; [1] \"XXX\"\n\nsetMethod(\"name&lt;-\", \"Person\", function(x, value) {\n  x@name &lt;- value\n  validObject(x)\n  x\n})\nname(x) &lt;- \"Lily\"\nname(x)\n#&gt; [1] \"Lily\"\n\n\n\n24.8.2 继承\n\nShow the codesetClass(\"Employee\", \n  contains = \"Person\", \n  slots = c(\n    boss = \"Person\"\n  ),\n  prototype = list(\n    boss = new(\"Person\")\n  )\n)\n\nstr(new(\"Employee\"))\n#&gt; Formal class 'Employee' [package \".GlobalEnv\"] with 3 slots\n#&gt;   ..@ boss:Formal class 'Person' [package \".GlobalEnv\"] with 2 slots\n#&gt;   .. .. ..@ name: chr NA\n#&gt;   .. .. ..@ age : num NA\n#&gt;   ..@ name: chr NA\n#&gt;   ..@ age : num NA\n\n\n\nShow the codeis(x, \"Person\")\n#&gt; [1] TRUE\nis(new(\"Person\"))\n#&gt; [1] \"Person\"\nis(new(\"Employee\"))\n#&gt; [1] \"Employee\" \"Person\"\n\n\n\n24.8.3 多重继承和多重调度\n。。。",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>面向对象编程</span>"
    ]
  },
  {
    "objectID": "object_oriented_programming.html#原型类",
    "href": "object_oriented_programming.html#原型类",
    "title": "\n24  面向对象编程\n",
    "section": "\n24.9 原型类",
    "text": "24.9 原型类\nOOP风格又分为两种风格：一种是基于对象的编程（Object-Based Programming），也称原型编程（Prototype Programming）；另一种是基于类的编程（Class-Based Programming）。proto工具包采用的是前者。因为没有“类”的概念，原型编程可以更自由地定义对象。\nlibrary(proto)\nproto对象的元素分为两类：一类称为属性（field），在R中就是变量（variable），如oo中的x；另一类称为方法（method），在R中就是函数（function）\n\n24.9.1 ggproto\n参考 ggplot2-book.org/internals#sec-ggproto\n\nShow the codeNewObject &lt;- ggproto(\n  `_class` = NULL, \n  `_inherits` = NULL\n)\nNewObject \n#&gt; &lt;ggproto object: Class gg&gt;\n#&gt;     _inherits: NULL\n\n\n\nShow the code# 新类\nNewClass &lt;- ggproto(\"NewClass\", NULL,\n                    # fields     默认值 \n                    geom=NA,\n                    # methods\n                    \n                    )\nNewClass\n#&gt; &lt;ggproto object: Class NewClass, gg&gt;\n#&gt;     geom: NA\n\n\n\nShow the code# 实例\ninstance &lt;- ggproto(NULL, NewClass,\n                    # 字段赋值\n                    geom=\"point\"\n                    )\ninstance\n#&gt; &lt;ggproto object: Class NewClass, gg&gt;\n#&gt;     geom: point\n#&gt;     super:  &lt;ggproto object: Class NewClass, gg&gt;\n\n\n\nShow the code# 继承\nNewSubClass &lt;- ggproto(\"NewSubClass\", NewClass)\nNewSubClass\n#&gt; &lt;ggproto object: Class NewSubClass, NewClass, gg&gt;\n#&gt;     geom: NA\n#&gt;     super:  &lt;ggproto object: Class NewClass, gg&gt;",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>面向对象编程</span>"
    ]
  },
  {
    "objectID": "object_oriented_programming.html#r6-类",
    "href": "object_oriented_programming.html#r6-类",
    "title": "\n24  面向对象编程\n",
    "section": "\n24.10 R6 类",
    "text": "24.10 R6 类\nR6::R6Class(classname = NULL，public = list)\nhttp://blog.fens.me/r-class-r6/\n\n\nShow the codelibrary(R6)\nlibrary(R6)\n\nBook &lt;- R6Class(\n    \"Book\",\n    # 定义私有变量\n    private = list(\n        title = NA,\n        price = NA,\n        category = NA\n    ),\n    # 定义公共方法\n    public = list(\n        initialize = function(title, price, category) {\n            private$title &lt;- title\n            private$price &lt;- price\n            private$category &lt;- category\n        },\n        getPrice = function() {\n            private$price\n        }\n    )\n)\n\nBook\n#&gt; &lt;Book&gt; object generator\n#&gt;   Public:\n#&gt;     initialize: function (title, price, category) \n#&gt;     getPrice: function () \n#&gt;     clone: function (deep = FALSE) \n#&gt;   Private:\n#&gt;     title: NA\n#&gt;     price: NA\n#&gt;     category: NA\n#&gt;   Parent env: &lt;environment: R_GlobalEnv&gt;\n#&gt;   Locked objects: TRUE\n#&gt;   Locked class: FALSE\n#&gt;   Portable: TRUE\nR &lt;- R6Class(\"R\", # 子类R图书\n             inherit = Book)\nJava &lt;- R6Class(\"JAVA\", # 子类JAVA图书\n                inherit = Book)\nPhp &lt;- R6Class(\"PHP\", # 子类PHP图书\n               inherit = Book)\n\n\n\nShow the coder1&lt;-R$new(\"R的极客理想-工具篇\",59,\"R\")\nr1$getPrice()\n#&gt; [1] 59\n\nj1&lt;-Java$new(\"Java编程思想\",108,\"JAVA\")\n\n j1$getPrice()\n#&gt; [1] 108\n \n p1&lt;-Java$new(\"Head First PHP & MySQL\",98,\"PHP\")\n p1$getPrice()\n#&gt; [1] 98\n\n\n\nShow the codeBook &lt;- R6Class(\n    \"Book\",\n    private = list(\n        title = NA,\n        price = NA,\n        category = NA\n    ),\n    public = list(\n        initialize = function(title, price, category) {\n            private$title &lt;- title\n            private$price &lt;- price\n            private$category &lt;- category\n        },\n        getPrice = function() {\n            p &lt;- private$price * self$discount()\n            print(paste(\"Price:\", private$price, \", Sell out:\", p, sep = \"\"))\n        },\n        discount = function() {\n            0.9\n        }\n    )\n)\n\n\n\nShow the code# 继承\nJava &lt;- R6Class(\"JAVA\",\n                inherit = Book,\n                public = list(\n                    discount = function() {\n                        0.7\n                    }\n                ))\n\nR &lt;- R6Class(\"R\",\n             inherit = Book,\n             public = list(\n                 discount = function() {\n                     super$discount() * 0.7\n                 }\n             ))\n\nPhp &lt;- R6Class(\"PHP\", inherit = Book)\n\n\n\nShow the coder1&lt;-R$new(\"R的极客理想-工具篇\",59,\"R\")\nr1$getPrice()\n#&gt; [1] \"Price:59, Sell out:37.17\"\n\nj1&lt;-Java$new(\"Java编程思想\",108,\"JAVA\")\n\n j1$getPrice()\n#&gt; [1] \"Price:108, Sell out:75.6\"\n \n p1&lt;-Java$new(\"Head First PHP & MySQL\",98,\"PHP\")\n p1$getPrice()\n#&gt; [1] \"Price:98, Sell out:68.6\"",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>面向对象编程</span>"
    ]
  },
  {
    "objectID": "meta_programming.html",
    "href": "meta_programming.html",
    "title": "\n25  元编程\n",
    "section": "",
    "text": "25.1 表达式\n元编程（meta programming）是一种认为代码是可以通过编程检查和修改的数据（R代码可以描述为树，abstract syntax tree）的概念。例如，在最基本的层面，它允许你 library(purrr) 而无需library(\"purrr\")；在更深层次，允许使用表达式y ~ x1 + x2代表一个模型，等等。\n与元编程紧密相关的是非标准求值（non-standard evaluations，NSE），不遵循通常的求值规则，而是捕获键入的表达式并以自定义的方式对其进行求值。\n整洁求值( tidy evaluation)\nconstant scalars, symbols, call objects, and pairlists",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>25</span>  <span class='chapter-title'>元编程</span>"
    ]
  },
  {
    "objectID": "meta_programming.html#表达式",
    "href": "meta_programming.html#表达式",
    "title": "\n25  元编程\n",
    "section": "",
    "text": "25.1.1 常量\n数值型，字符型，逻辑型\n\nShow the code# constant\nnum &lt;- expr(123)\nstring &lt;- expr(\"Variable\")\n\nclass(num)\n#&gt; [1] \"numeric\"\nclass(string)\n#&gt; [1] \"character\"\nexpr(TRUE) %&gt;% class()\n#&gt; [1] \"logical\"\n\n\n\n25.1.2 符号\nsymbol表示对象的名称（name）\n\nShow the code# 字符串转换名称\nexpr(x) == rlang::sym(\"x\")\n#&gt; [1] TRUE\n\nchar &lt;- \"Variable\"\n# symbol  name\nsbl &lt;- sym(char)\nsbl\n#&gt; Variable\n\nclass(sbl)\n#&gt; [1] \"name\"\nsbl |&gt; as_string()\n#&gt; [1] \"Variable\"\n\n# 字符串与符号\n\nas_string(expr(x))\n#&gt; [1] \"x\"\nstr(expr(x))\n#&gt;  symbol x\nis.symbol(expr(x))\n#&gt; [1] TRUE\n\n\n符号的长度始终为1，多个符号使用rlang::syms()\n\n25.1.3 调用\n\nShow the code# call\n\ncall2(\"mean\", x = expr(x), na.rm = TRUE)\n#&gt; mean(x = x, na.rm = TRUE)\ncall2(expr(base::mean), x = expr(x), na.rm = TRUE)\n#&gt; base::mean(x = x, na.rm = TRUE)\ncall2(\"&lt;-\", expr(x), 10)\n#&gt; x &lt;- 10\n\ncall &lt;- call2(\"+\", 1, call2(\"*\", 2, 3))\n\ncall\n#&gt; 1 + 2 * 3\n\nclass(call)\n#&gt; [1] \"call\"\n\n\n调用对象是一种特殊类型的列表，其中第一个组件指定要调用的函数名称（通常为符号），其余元素是该函数调用的参数。\n\nShow the codelobstr::ast(read.table(file = \"important.csv\", row.names = FALSE))\n#&gt; █─read.table \n#&gt; ├─file = \"important.csv\" \n#&gt; └─row.names = FALSE\n\nx &lt;- expr(read.table(file = \"important.csv\", row.names = FALSE))\n\nx\n#&gt; read.table(file = \"important.csv\", row.names = FALSE)\n\ntypeof(x)\n#&gt; [1] \"language\"\n\n\n\nShow the codex[[1]]\n#&gt; read.table\nis.symbol(x[[1]])\n#&gt; [1] TRUE\nas.list(x[-1])\n#&gt; $file\n#&gt; [1] \"important.csv\"\n#&gt; \n#&gt; $row.names\n#&gt; [1] FALSE\nx$header &lt;- TRUE\nx\n#&gt; read.table(file = \"important.csv\", row.names = FALSE, header = TRUE)\n\n\n由于 R 灵活的参数匹配规则，从调用中提取特定参数具有挑战性：它可能位于任何位置，具有全名、缩写名称或无名称。若要解决此问题，可以使用 rlang::call_standardise()标准化所有参数来使用全名。\n\nShow the coderlang::call_standardise(x)\n#&gt; read.table(file = \"important.csv\", header = TRUE, row.names = FALSE)\n\n\n\n25.1.3.1 函数位置\n\nShow the codelobstr::ast(\"foo\"())\n#&gt; █─foo\nlobstr::ast(foo())\n#&gt; █─foo\nlobstr::ast(pkg::foo(1))\n#&gt; █─█─`::` \n#&gt; │ ├─pkg \n#&gt; │ └─foo \n#&gt; └─1\nlobstr::ast(foo(1)(2))\n#&gt; █─█─foo \n#&gt; │ └─1 \n#&gt; └─2\n\n\n\n25.1.4 配对列表\n\nShow the codef &lt;- expr(function(x, y = 10) x + y)\n\nargs &lt;- f[[2]]\nargs\n#&gt; $x\n#&gt; \n#&gt; \n#&gt; $y\n#&gt; [1] 10\ntypeof(args)\n#&gt; [1] \"pairlist\"\npl &lt;- pairlist(x = 1, y = 2)\nlength(pl)\n#&gt; [1] 2\npl$x\n#&gt; [1] 1\n\n\n\n25.1.5 缺失参数\n空符号，empty symbol，表示缺失的参数\n\nShow the codemissing_arg()\ntypeof(missing_arg())\nis_missing(missing_arg())\n\n\n\n25.1.6 ...\n\n\nShow the codeg &lt;- expr(function(...) list(...))\ng\n#&gt; function(...) list(...)\nargs &lt;- g[[2]]\nargs \n#&gt; $...\nis_missing(args[[1]])\n#&gt; [1] TRUE\n\n\n\n25.1.7 表达式向量\n\nShow the codeexp1 &lt;- parse(text = c(\"\nx &lt;- 4\nx\n\"))\nexp2 &lt;- expression(x &lt;- 4, x)\n\ntypeof(exp1)\n#&gt; [1] \"expression\"\ntypeof(exp2)\n#&gt; [1] \"expression\"\n\nexp1\n#&gt; expression(x &lt;- 4, x)\nexp2\n#&gt; expression(x &lt;- 4, x)\n\n\n表达式向量的行为也类似于列表\n\nShow the codeexp1[[1]]\n#&gt; x &lt;- 4",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>25</span>  <span class='chapter-title'>元编程</span>"
    ]
  },
  {
    "objectID": "meta_programming.html#解析表达式",
    "href": "meta_programming.html#解析表达式",
    "title": "\n25  元编程\n",
    "section": "\n25.2 解析表达式",
    "text": "25.2 解析表达式\n\nShow the code# 字符串\nx1 &lt;- \"y &lt;- x + 10\"\nx1\n#&gt; [1] \"y &lt;- x + 10\"\nis.call(x1)\n#&gt; [1] FALSE\n\n\nas.formula(\"y~ x1+x2\")\n#&gt; y ~ x1 + x2\n\n# 表达式\nx2 &lt;- rlang::parse_expr(x1)\nx2\n#&gt; y &lt;- x + 10\nis.call(x2)\n#&gt; [1] TRUE",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>25</span>  <span class='chapter-title'>元编程</span>"
    ]
  },
  {
    "objectID": "meta_programming.html#捕获代码结构-expression",
    "href": "meta_programming.html#捕获代码结构-expression",
    "title": "\n25  元编程\n",
    "section": "\n25.3 捕获代码结构 expression\n",
    "text": "25.3 捕获代码结构 expression\n\n表达式 （expression ）指 捕获的代码结构 ，包括四种类型（调用call、符号symbol、常量constant或配对列表pairlist）。\n\n25.3.1 expr() 和 enexpr()\n\n\nShow the coderlang::expr(mean(x, na.rm = TRUE))\n#&gt; mean(x, na.rm = TRUE)\n\n\n\nShow the codecapture_it &lt;- function(x) {\n  expr(x)\n}\ncapture_it(a + b + c)\n#&gt; x\n\n\n捕获用户输入的函数参数\n\nShow the codecapture_it &lt;- function(x) {\n  enexpr(x)\n}\n\ncapture_it(mtcars$mpg)\n#&gt; mtcars$mpg\n\n\n\n25.3.2 增删改操作\n捕获表达式后，可以检查和修改它，方法与列表类似。\n捕获的表达式分为两个部分\n\n第一个元素为函数调用call\n其他部分为位置参数或嵌套调用\n\n\nShow the codef &lt;- expr(fn &lt;- anystrings(x = 1, y = 2))\nexpr(`&lt;-`(fn,anystrings(x = 1, y = 2)))\n#&gt; fn &lt;- anystrings(x = 1, y = 2)\nf[[1]]\n#&gt; `&lt;-`\nf[[2]]\n#&gt; fn\nf[[3]]\n#&gt; anystrings(x = 1, y = 2)\n\n\nf[[3]][[1]]\n#&gt; anystrings\nf[[3]]$x\n#&gt; [1] 1\nf[[3]]$z &lt;- 3\nf\n#&gt; fn &lt;- anystrings(x = 1, y = 2, z = 3)\n\n\nf[[3]][[2]] &lt;- NULL\nf\n#&gt; fn &lt;- anystrings(y = 2, z = 3)",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>25</span>  <span class='chapter-title'>元编程</span>"
    ]
  },
  {
    "objectID": "meta_programming.html#执行表达式",
    "href": "meta_programming.html#执行表达式",
    "title": "\n25  元编程\n",
    "section": "\n25.4 执行表达式",
    "text": "25.4 执行表达式\n将代码的结构描述expression和执行evaluate分开。\n\nShow the codez &lt;- rlang::expr(y &lt;- x * 10)\nz\n#&gt; y &lt;- x * 10\nx &lt;- 8\neval(z)\ny\n#&gt; [1] 80\n\n\n\nShow the codebase::eval(expr(x + y), env(x = 1, y = 10))\n#&gt; [1] 11\n\n\n如果省略环境，将使用当前环境\n\nShow the codex &lt;- 10\ny &lt;- 100\neval(expr(x + y))\n#&gt; [1] 110",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>25</span>  <span class='chapter-title'>元编程</span>"
    ]
  },
  {
    "objectID": "meta_programming.html#函数自定义求值",
    "href": "meta_programming.html#函数自定义求值",
    "title": "\n25  元编程\n",
    "section": "\n25.5 函数自定义求值",
    "text": "25.5 函数自定义求值\nRebinding functions，改变函数内部的变量绑定\n\nShow the code\n# 字符串的加法和乘法 多态\nstring_math &lt;- function(x) {\n  e &lt;- env(\n    caller_env(),\n    `+` = function(x, y) paste0(x, y),\n    `*` = function(x, y) strrep(x, y)\n  )\n\n  eval(enexpr(x), e)\n}\n\nname &lt;- \"Hadley\"\nstring_math(\"Hello \" + name)\n#&gt; [1] \"Hello Hadley\"\nstring_math((\"x\" * 2 + \"-y\") * 3)\n#&gt; [1] \"xx-yxx-yxx-y\"\n\n\ndplyr将这个想法发挥到了极致，在生成 SQL 以在远程数据库中执行的环境中运行代码：\n\nShow the codelibrary(dplyr)\ncon &lt;- DBI::dbConnect(RSQLite::SQLite(), filename = \":memory:\")\nmtcars_db &lt;- copy_to(con, mtcars)\n\nmtcars_db %&gt;%\n  filter(cyl &gt; 2) %&gt;%\n  select(mpg:hp) %&gt;%\n  head(10) %&gt;%\n  show_query()\n#&gt; &lt;SQL&gt;\n#&gt; SELECT `mpg`, `cyl`, `disp`, `hp`\n#&gt; FROM `mtcars`\n#&gt; WHERE (`cyl` &gt; 2.0)\n#&gt; LIMIT 10\n\nDBI::dbDisconnect(con)",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>25</span>  <span class='chapter-title'>元编程</span>"
    ]
  },
  {
    "objectID": "meta_programming.html#数据自定义求值",
    "href": "meta_programming.html#数据自定义求值",
    "title": "\n25  元编程\n",
    "section": "\n25.6 数据自定义求值",
    "text": "25.6 数据自定义求值\n在数据处理和分析中，“data masking”（数据掩蔽）是一种技术，用于隐藏或保护敏感信息，同时保留数据集中的模式和结构，以供分析使用。\n\n替换：将敏感数据替换为假数据或占位符。\n加密：对数据进行加密处理，只有拥有密钥的人才能访问原始数据。\n扰动：对数据进行小的随机变化，以保护数据的统计特性，同时避免识别出原始数据。\n\n使用数据掩码进行求值是交互式分析的有用技术，因为它允许您编写 x + y而不是df$x + df$y .然而，这种便利是有代价的：模棱两可\n\nShow the codeset.seed(10)\ndf &lt;- data.frame(x = 1:5, y = sample(5))\n\ndf\n\n\n\n\nx\ny\n\n\n\n1\n3\n\n\n2\n1\n\n\n3\n2\n\n\n4\n5\n\n\n5\n4\n\n\n\n\n\nShow the codeeval_tidy(expr(x + y), df)\n#&gt; [1] 4 3 5 9 9\n\n\nbase::with\n\nShow the codewith2 &lt;- function(df, expr) {\n  eval_tidy(enexpr(expr), df)\n}\n\nwith2(df, x + y)\n#&gt; [1] 4 3 5 9 9",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>25</span>  <span class='chapter-title'>元编程</span>"
    ]
  },
  {
    "objectID": "meta_programming.html#抽象语法树",
    "href": "meta_programming.html#抽象语法树",
    "title": "\n25  元编程\n",
    "section": "\n25.7 抽象语法树",
    "text": "25.7 抽象语法树\n表达式（expressions） 也称为抽象语法树（ abstract syntax trees ，ASTs）。\n\n25.7.1 树结构\n\n实际运行代码，橙色矩形是分支，紫色符号是函数调用，白色是函数参数\n渲染成书后，灰色矩形是分支，右连函数调用，下连子项参数或函数\n\n\nShow the codelibrary(rlang)\nlibrary(lobstr)\nlobstr::ast(f(g(1, 2), h(3, 4, i())))\n#&gt; █─f \n#&gt; ├─█─g \n#&gt; │ ├─1 \n#&gt; │ └─2 \n#&gt; └─█─h \n#&gt;   ├─3 \n#&gt;   ├─4 \n#&gt;   └─█─i\n\n\n\n25.7.2 空格和注释\n\nShow the codeast(\n  f(x,  y)  # important!\n)\n#&gt; █─f \n#&gt; ├─x \n#&gt; └─y\n\nlobstr::ast(y &lt;-  x)\n#&gt; █─`&lt;-` \n#&gt; ├─y \n#&gt; └─x\n\nlobstr::ast(y &lt; -x)\n#&gt; █─`&lt;` \n#&gt; ├─y \n#&gt; └─█─`-` \n#&gt;   └─x\n\n\n\n25.7.3 中缀调用\n\nShow the codex &lt;- 4\n`&lt;-`(y,x)\n`&lt;-`(y, `*`(x, 10))\nexpr(`&lt;-`(y, `*`(x, 10)))\n#&gt; y &lt;- x * 10\nlobstr::ast(y &lt;- x * 10)\n#&gt; █─`&lt;-` \n#&gt; ├─y \n#&gt; └─█─`*` \n#&gt;   ├─x \n#&gt;   └─10\n\n\n\nShow the codex3 &lt;- \"a &lt;- 1; a + 1\"\nrlang::parse_exprs(x3)\n#&gt; [[1]]\n#&gt; a &lt;- 1\n#&gt; \n#&gt; [[2]]\n#&gt; a + 1\n\n\n\nShow the codez &lt;- expr(y &lt;- x + 10)\nexpr_text(z)\n#&gt; [1] \"y &lt;- x + 10\"",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>25</span>  <span class='chapter-title'>元编程</span>"
    ]
  },
  {
    "objectID": "meta_programming.html#quosure",
    "href": "meta_programming.html#quosure",
    "title": "\n25  元编程\n",
    "section": "\n25.8 quosure",
    "text": "25.8 quosure\n\nShow the codewith2 &lt;- function(df, expr) {\n  a &lt;- 1000\n  eval_tidy(enexpr(expr), df)\n}\n\ndf &lt;- data.frame(x = 1:3)\na &lt;- 10\nwith2(df, x + a)\n#&gt; [1] 1001 1002 1003\n\n\n将表达式与环境捆绑在一起的 quosure 数据结构,每当使用数据掩码时，必须始终使用enquo() 而不是enexpr()\n\nShow the codewith2 &lt;- function(df, expr) {\n  a &lt;- 1000\n  eval_tidy(enexpr(expr), df)\n}\n\nwith2(df, x + a)\n#&gt; [1] 1001 1002 1003",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>25</span>  <span class='chapter-title'>元编程</span>"
    ]
  },
  {
    "objectID": "meta_programming.html#取消引用",
    "href": "meta_programming.html#取消引用",
    "title": "\n25  元编程\n",
    "section": "\n25.9 取消引用",
    "text": "25.9 取消引用\nunquote operator !!（发音为 bang-bang）\n\nShow the code\n# call\nxx &lt;- expr(x + x)\nyy &lt;- expr(y + y)\n\nexpr(!!xx / !!yy)\n#&gt; (x + x)/(y + y)\n\n\n\nShow the code# 变异系数\ncv &lt;- function(var) {\n  var &lt;- enexpr(var)\n  expr(sd(!!var) / mean(!!var))\n}\n\ncv(x)\n#&gt; sd(x)/mean(x)\ncv(x + y)\n#&gt; sd(x + y)/mean(x + y)",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>25</span>  <span class='chapter-title'>元编程</span>"
    ]
  },
  {
    "objectID": "quasiquotation.html",
    "href": "quasiquotation.html",
    "title": "\n26  Quasiquotation\n",
    "section": "",
    "text": "26.1 引用\n准引用 Quasiquotation\n拟引函数 quasiquoting functions\n引用（quotation）是捕获未评估表达式的行为\n取消引用（unquotation）!! (发音为bang-bang)是选择性地评估引用的表达式的部分，告诉引用函数删除隐式引号\n准引用（Quasiquotation）使得创建将函数作者编写的代码与函数用户编写的代码相结合的函数变得容易\n取消引用（unquotation）!! (发音为bang-bang)告诉引用函数删除隐式引号",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>26</span>  <span class='chapter-title'>Quasiquotation</span>"
    ]
  },
  {
    "objectID": "quasiquotation.html#引用",
    "href": "quasiquotation.html#引用",
    "title": "\n26  Quasiquotation\n",
    "section": "",
    "text": "26.1.1 捕获表达式\n空格和注释不是表达式的一部分\n捕获（开发人员）形参的表达式，函数主体中\n\nShow the codeexpr(x + y)\n#&gt; x + y\nexpr(1 / 2 / 3)\n#&gt; 1/2/3\n\nexprs(x = x ^ 2, y = y ^ 3, z = z ^ 4)\n#&gt; $x\n#&gt; x^2\n#&gt; \n#&gt; $y\n#&gt; y^3\n#&gt; \n#&gt; $z\n#&gt; z^4\n\n\nf1 &lt;- function(x) expr(x)\nf1(a + b + c)\n#&gt; x\n\n\n捕获用户作为参数传入的表达式，通过传参提供\n\nShow the codef2 &lt;- function(x) enexpr(x)\nf2(a + b + c)\n#&gt; a + b + c\n\n# 捕获多个表达式\nf &lt;- function(...) enexprs(...)\nf(x = 1, y = 10 * z)\n#&gt; $x\n#&gt; [1] 1\n#&gt; \n#&gt; $y\n#&gt; 10 * z\n\nf(mtcars$mpg)\n#&gt; [[1]]\n#&gt; mtcars$mpg\n\n\n\n26.1.2 捕获 symbol\nensym()\nensyms()\n\nShow the codef &lt;- function(...) ensyms(...)\nf(x)\n#&gt; [[1]]\n#&gt; x\nf(\"x\")\n#&gt; [[1]]\n#&gt; x\n\n\n\n26.1.3 替换\n\nShow the codef4 &lt;- function(x) substitute(x * 2)\nf4(a + b + c)\n#&gt; (a + b + c) * 2",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>26</span>  <span class='chapter-title'>Quasiquotation</span>"
    ]
  },
  {
    "objectID": "quasiquotation.html#取消引用",
    "href": "quasiquotation.html#取消引用",
    "title": "\n26  Quasiquotation\n",
    "section": "\n26.2 取消引用",
    "text": "26.2 取消引用\n\n26.2.1 取消引用一个参数\n\nShow the codex &lt;- expr(-1)\nexpr(f(!!x, y))\n#&gt; f(-1, y)\n\na &lt;- sym(\"y\")\nb &lt;- 1\nexpr(f(!!a, !!b))\n#&gt; f(y, 1)\n\n\n右边是函数调用，评估并插入结果\n\nShow the codemean_rm &lt;- function(var) {\n  var &lt;- ensym(var)\n  expr(mean(!!var, na.rm = TRUE))\n}\n\n\nexpr(mean_rm(x) + mean_rm(y))\n#&gt; mean_rm(x) + mean_rm(y)\n\nexpr(!!mean_rm(x) + !!mean_rm(y))\n#&gt; mean(x, na.rm = TRUE) + mean(y, na.rm = TRUE)\n\n\n保留运算符的优先级\n\nShow the codex1 &lt;- expr(x + 1)\nx2 &lt;- expr(x + 2)\n\nexpr(!!x1 / !!x2)\n#&gt; (x + 1)/(x + 2)\n\n\n\n26.2.2 取消引用函数\n\nShow the codef &lt;- expr(pkg::foo)\nf\n#&gt; pkg::foo\nexpr((!!f)(x, y))\n#&gt; pkg::foo(x, y)\n\ncall2(f, expr(x), expr(y))\n#&gt; pkg::foo(x, y)\n\n\n\n26.2.3 取消引用缺失的参数\n\nShow the code\narg &lt;- missing_arg()\n\nexpr(foo(!!arg, !!arg))\n#&gt; Error in eval(expr, envir, enclos): argument \"arg\" is missing, with no default\n\nexpr(foo(!!maybe_missing(arg), !!maybe_missing(arg)))\n#&gt; foo(, )\n\n\n\n26.2.4 取消引用特殊形式函数参数\n\nShow the codex &lt;- expr(mpg)\nexpr(`$`(mtcars, !!x))\n#&gt; mtcars$mpg\n\n\n\n26.2.5 取消引用多个参数\nunquote-splice !!! ，发音为 bang-bang-bang，一对多的替换插入\n\nShow the codexs &lt;- exprs(1, a, -b)\nexpr(f(!!!xs, y))\n#&gt; f(1, a, -b, y)\n\n\n# Or with names\nys &lt;- set_names(xs, c(\"a\", \"b\", \"c\"))\nexpr(f(!!!ys, d = 4))\n#&gt; f(a = 1, b = a, c = -b, d = 4)\n\n\ncall2(\"f\", !!!xs, expr(y))\n#&gt; f(1, a, -b, y)\n\n\n\n26.2.6 点-点-点 ...\n\n与 Python 中的 args 和 kwarg（star-star-kwargs） 密切相关\n\nShow the codedfs &lt;- list(\n  a = data.frame(x = 1, y = 2),\n  b = data.frame(x = 3, y = 4)\n)\n\ndplyr::bind_rows(!!!dfs)\n\n\n\n\nx\ny\n\n\n\n1\n2\n\n\n3\n4\n\n\n\n\n\nShow the code\ndo.call(\"rbind\", dfs)\n\n\n\n\n\nx\ny\n\n\n\na\n1\n2\n\n\nb\n3\n4\n\n\n\n\n\n\n间接提供参数名称，:= 发音为 colon-equals\n\nShow the codevar &lt;- \"x\"\nval &lt;- c(4, 3, 9)\n\ntibble::tibble(!!var := val)\n\n\n\n\nx\n\n\n\n4\n\n\n3\n\n\n9\n\n\n\n\n\nShow the code\nargs &lt;- list(val)\nnames(args) &lt;- var\n\ndo.call(\"data.frame\", args)\n\n\n\n\nx\n\n\n\n4\n\n\n3\n\n\n9",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>26</span>  <span class='chapter-title'>Quasiquotation</span>"
    ]
  },
  {
    "objectID": "evaluation.html",
    "href": "evaluation.html",
    "title": "\n27  Evaluation\n",
    "section": "",
    "text": "27.1 非标准求值\n“Evaluation”（求值）是指执行代码并计算表达式的值的过程。",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>27</span>  <span class='chapter-title'>Evaluation</span>"
    ]
  },
  {
    "objectID": "evaluation.html#整洁求值",
    "href": "evaluation.html#整洁求值",
    "title": "\n27  Evaluation\n",
    "section": "\n27.2 整洁求值",
    "text": "27.2 整洁求值\nTidy Evaluation (Tidy Eval) 是一个非标准评估的框架，也叫延迟评估。\n\nquasiquotation\nquosures\ndata masking\n\n\nShow the codelibrary(tidyverse)\nlibrary(rlang)\nlibrary(purrr)",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>27</span>  <span class='chapter-title'>Evaluation</span>"
    ]
  },
  {
    "objectID": "evaluation.html#quosure",
    "href": "evaluation.html#quosure",
    "title": "\n27  Evaluation\n",
    "section": "\n27.3 Quosure",
    "text": "27.3 Quosure\n\nShow the codex &lt;- mtcars$mpg\nenquo(x)\n#&gt; &lt;quosure&gt;\n#&gt; expr: ^&lt;dbl: 21, 21, 22.8, 21.4, 18.7, ...&gt;\n#&gt; env:  empty\nenquo(mtcars)\n#&gt; &lt;quosure&gt;\n#&gt; expr: ^&lt;df[,11]&gt;\n#&gt; env:  empty\n\nmutate(mtcars,!!\"cyl\") %&gt;% head()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n“cyl”\n\n\n\nMazda RX4\n21.0\n6\n160\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\ncyl\n\n\nMazda RX4 Wag\n21.0\n6\n160\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\ncyl\n\n\nDatsun 710\n22.8\n4\n108\n93\n3.85\n2.320\n18.61\n1\n1\n4\n1\ncyl\n\n\nHornet 4 Drive\n21.4\n6\n258\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\ncyl\n\n\nHornet Sportabout\n18.7\n8\n360\n175\n3.15\n3.440\n17.02\n0\n0\n3\n2\ncyl\n\n\nValiant\n18.1\n6\n225\n105\n2.76\n3.460\n20.22\n1\n0\n3\n1\ncyl\n\n\n\n\n\n\n\nShow the codegrouped_mean &lt;- function(data, summary_var, ...) {\n  summary_var &lt;- enquo(summary_var)\n    group_var &lt;- enquos(...)\n \n  data %&gt;%\n    group_by(!!!group_var) %&gt;%   ### 准引用  unquote-splice !!! ，发音为 bang-bang-bang，取消引用多个参数\n    summarise(mean = mean(!!summary_var))\n}\n\ngrouped_mean(mtcars, cyl, mpg)\n\n\n\n\nmpg\nmean\n\n\n\n10.4\n8\n\n\n13.3\n8\n\n\n14.3\n8\n\n\n14.7\n8\n\n\n15.0\n8\n\n\n15.2\n8\n\n\n15.5\n8\n\n\n15.8\n8\n\n\n16.4\n8\n\n\n17.3\n8\n\n\n17.8\n6\n\n\n18.1\n6\n\n\n18.7\n8\n\n\n19.2\n7\n\n\n19.7\n6\n\n\n21.0\n6\n\n\n21.4\n5\n\n\n21.5\n4\n\n\n22.8\n4\n\n\n24.4\n4\n\n\n26.0\n4\n\n\n27.3\n4\n\n\n30.4\n4\n\n\n32.4\n4\n\n\n33.9\n4\n\n\n\n\n\n\n\nShow the codegrouped_mean &lt;- function(data, group_var, summary_var) {\n  data %&gt;%\n    group_by({{group_var}}) %&gt;%\n    summarise(mean = mean({{summary_var}}))\n}\n\ngrouped_mean(mtcars, cyl, mpg)\n\n\n\n\ncyl\nmean\n\n\n\n4\n26.66364\n\n\n6\n19.74286\n\n\n8\n15.10000",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>27</span>  <span class='chapter-title'>Evaluation</span>"
    ]
  },
  {
    "objectID": "evaluation.html#data-masking",
    "href": "evaluation.html#data-masking",
    "title": "\n27  Evaluation\n",
    "section": "\n27.4 Data masking",
    "text": "27.4 Data masking\ndata masking\n\n环境变量(env-variables) ，一般你在Rstuido右上角的Environment中发现它。比如n &lt;- 10这里的n\n数据变量(data-variables)，一般指数据框的某个变量。比如data &lt;- data.frame(x = 1, n = 2)中的data$n\n\ngrouped_mean(mtcars, cyl, mpg)\ncyl和mpg是打算传递的参数，是环境变量，但我们期望他们在函数中当作mtcars中的数据变量，即当做mtcars的一个列的名字来使用， 那么要完成这个角色转换，就需要引用(quote)和解引用(unquote)两个工序：\n\n第一步，用 enquo()把用户传递过来的参数引用起来\n第二步，用 !! 取消引用，然后使用参数的内容\n\n这个quote-unquote的过程让环境变量名变成了数据变量，也可以理解为在函数评估过程中，数据变量（data-variable）遮盖了环境变量（env-variable），即数据遮盖（data masking），看到cyl，正常情况下，本来应该是到环境变量里去找这个cyl对应的值，然而，数据遮盖机制，插队了，让代码去数据变量中去找cyl以及对应的值。\n我们通过rlang::qq_show()看看这个quote-unquote机制是怎么工作的\n先看看qq_show()\n\nShow the code  group_var &lt;-  quote(cyl)\nsummary_var &lt;-  quote(mpg)\n    \nrlang::qq_show( \n    data %&gt;%\n    group_by(!!group_var) %&gt;%\n    summarise(mean = mean(!!summary_var))\n)\n#&gt; data %&gt;% group_by(cyl) %&gt;% summarise(mean = mean(mpg))",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>27</span>  <span class='chapter-title'>Evaluation</span>"
    ]
  },
  {
    "objectID": "evaluation.html#名称注入",
    "href": "evaluation.html#名称注入",
    "title": "\n27  Evaluation\n",
    "section": "\n27.5 名称注入",
    "text": "27.5 名称注入\n\n27.5.1 glue 语法\n\nShow the codename &lt;- \"susan\" \ntibble(\"{name}\" := 2)\n\n\n\n\nsusan\n\n\n2\n\n\n\n\n\n\n27.5.2 embracing 语法\n\nShow the codemy_summarise4 &lt;- function(data,by, expr) {   \n    data %&gt;% \n        summarise(     \"mean_{{expr}}\" := mean({{ expr }}),   #embracing拥抱 {{}}     \n                       \"sum_{{expr}}\" := sum({{ expr }}), #拥抱变量会告诉 dplyr使用存储在参数中的值，而不是将参数作为文本变量名称     \n                       \"n_{{expr}}\" := n(),   # 海象运算符（walrus） :=     \n                       .by ={{by}}   ) }   \n\nmy_summarise4(mpg,by = cyl, expr = displ)\n\n\n\n\ncyl\nmean_displ\nsum_displ\nn_displ\n\n\n\n4\n2.145679\n173.8\n81\n\n\n6\n3.408861\n269.3\n79\n\n\n8\n5.132857\n359.3\n70\n\n\n5\n2.500000\n10.0\n4\n\n\n\n\n\n\n何时使用{{}}\n\nData-masking: arrange()filter()summarize() compute with variables\nTidy-selection：select()relocate()rename() select variables\n\n\nShow the coderr &lt;- function(dt, oldName, newName) { \n rename(dt, !!rlang::sym(newName) := !! rlang::sym(oldName))\n      }\n\nrr(dt = as_tibble(iris), oldName = 'Petal.Width', newName = 'petal') %&gt;%\n      head(., 2)\n\n\n\n\nSepal.Length\nSepal.Width\nPetal.Length\npetal\nSpecies\n\n\n\n5.1\n3.5\n1.4\n0.2\nsetosa\n\n\n4.9\n3.0\n1.4\n0.2\nsetosa",
    "crumbs": [
      "编程",
      "<span class='chapter-number'>27</span>  <span class='chapter-title'>Evaluation</span>"
    ]
  }
]