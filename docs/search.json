[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "数据科学与编程",
    "section": "",
    "text": "推荐阅读",
    "crumbs": [
      "推荐阅读"
    ]
  },
  {
    "objectID": "index.html#数据科学",
    "href": "index.html#数据科学",
    "title": "数据科学与编程",
    "section": "数据科学",
    "text": "数据科学\n\nR for data science\ntidyverse.org\nbookdown.org\ndata.table\narrow.apache.R\nPandoc",
    "crumbs": [
      "推荐阅读"
    ]
  },
  {
    "objectID": "index.html#可视化",
    "href": "index.html#可视化",
    "title": "数据科学与编程",
    "section": "可视化",
    "text": "可视化\n\nggplot2: Elegant Graphics for Data Analysis (3e)\nhttps://exts.ggplot2.tidyverse.org/gallery/\nhttps://www.datanovia.com/en/blog/tag/ggpubr/\n现代统计图形（2）\nR Graphics Cookbook, 2nd edition",
    "crumbs": [
      "推荐阅读"
    ]
  },
  {
    "objectID": "index.html#编程",
    "href": "index.html#编程",
    "title": "数据科学与编程",
    "section": "编程",
    "text": "编程\n\nAdvanced R\nEfficient R programming\nR Packages(2e)",
    "crumbs": [
      "推荐阅读"
    ]
  },
  {
    "objectID": "type_class.html",
    "href": "type_class.html",
    "title": "\n1  基本数据类型和数据结构\n",
    "section": "",
    "text": "1.1 基本数据类型\n基本数据类型（mode） 是指数据最基本的存储格式。在R中有5 种最基本的数据存储格式，分别是numeric（integer，double），character，logical，complex 和 raw。\n强制类型转换： 逻辑 -&gt; 整数 -&gt; 浮点数 -&gt; 字符",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>基本数据类型和数据结构</span>"
    ]
  },
  {
    "objectID": "type_class.html#基本数据类型",
    "href": "type_class.html#基本数据类型",
    "title": "\n1  基本数据类型和数据结构\n",
    "section": "",
    "text": "1.1.1 numeric\n\n1.1.1.1 integer\n\n\nShow the codemode(2024L)\n#&gt; [1] \"numeric\"\ntypeof(2024L)\n#&gt; [1] \"integer\"\n\n\n\n1.1.1.2 double\n\n十进制decimal ()，科学计数法scientific () ，十六进制hexadecimal ()\n\nShow the codemode(1.1)\n#&gt; [1] \"numeric\"\ntypeof(1.1)\n#&gt; [1] \"double\"\n0.1234\n#&gt; [1] 0.1234\n1.23e4\n#&gt; [1] 12300\n0x111   # 16^2×1+ 16^1×1 + 16^0×1\n#&gt; [1] 273\n\n\n浮点标准定义的特殊值\n\n\nInfinity 无穷大\n\nShow the codemode(-Inf)\n#&gt; [1] \"numeric\"\nInf\n#&gt; [1] Inf\n\n\n\n\nNaN，Not a Number，非数字\n\nShow the codeNaN\n#&gt; [1] NaN\n0 / 0\n#&gt; [1] NaN\nis.nan(0 / 0)\n#&gt; [1] TRUE\nmode(0 / 0)\n#&gt; [1] \"numeric\"\n\n\n\n\n1.1.2 character\n\nShow the codetypeof(\"R language\")\n#&gt; [1] \"character\"\n\n\n\n1.1.3 logical\n比较运算符 ?Comparison\n逻辑运算符?Logic\n\nShow the codetypeof(TRUE)\n#&gt; [1] \"logical\"\nx &lt;- c(T,F,T)\ny &lt;- c(T,T,F)\n\n# 非\n!x\n#&gt; [1] FALSE  TRUE FALSE\n\n# 与\nx&y\n#&gt; [1]  TRUE FALSE FALSE\nT&&F\n#&gt; [1] FALSE\n# 或\nx|y\n#&gt; [1] TRUE TRUE TRUE\nT||F\n#&gt; [1] TRUE\n\n# 异或  不同为TRUE 或 1\nxor(x,y)\n#&gt; [1] FALSE  TRUE  TRUE\n\n\n\n1.1.4 complex\n\nShow the codez &lt;- 2+3i\ntypeof(z) \n#&gt; [1] \"complex\"\n\nis.complex(z)\n#&gt; [1] TRUE\n# 获取实部\nRe(z)\n#&gt; [1] 2\n\n# 获取虚部\nIm(z)\n#&gt; [1] 3\n\n# 模\nMod(z)\n#&gt; [1] 3.605551\n\n# 共轭\nConj(z)\n#&gt; [1] 2-3i\n\n\n\n1.1.5 raw\n\nShow the codecharToRaw(\"abcde12345\") #每个字符的原始二进制表示（ASCII码）转换成16进制输出\n#&gt;  [1] 61 62 63 64 65 31 32 33 34 35\ntypeof(charToRaw(\"abcde12345\")) \n#&gt; [1] \"raw\"\n\n\n\n1.1.6 NA\nNA，Not Available，不可用\n实际上，每种原子类型有一个缺失值：NA_logical_、NA_integer_、NA_double_、NA_character_。\n\nShow the codemode(NA_character_)\n#&gt; [1] \"character\"\ntypeof(NA_complex_)\n#&gt; [1] \"complex\"\nNA_integer_\n#&gt; [1] NA\nis.na(NA)\n#&gt; [1] TRUE",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>基本数据类型和数据结构</span>"
    ]
  },
  {
    "objectID": "type_class.html#数据结构",
    "href": "type_class.html#数据结构",
    "title": "\n1  基本数据类型和数据结构\n",
    "section": "\n1.2 数据结构",
    "text": "1.2 数据结构\nR中的数据结构包括 原子向量（atomic vector）和泛型向量（generic vector）。\n\n原子向量是基本数据类型（numeric，character，logical，complex，raw）的数组（一维vector，二维matrix，多维array）。\n泛型向量是原子向量的集合，即列表list。\n\n\n1.2.1 属性\n在R中任何一个object都具有两个最基本的属性：基本数据类型 “mode” 和 长度”length”，可以通过调用mode()（或 typeof()）和length() 查看，但无法通过 attributes() 查看。\n对于vector，其mode与class属性一致。\n对于由vector构建出来的其他更复杂的数据结构，其存储结构mode由其存储的最基本的数据类型决定。如matrix可以用于存储数值型数据，也可以用于存储字符串型数据。\n在R中有多种方式查看object的属性，\n\n\nclass()函数，查看object的属性主要是站在面向对象编程的角度，因为知道object的属性后就可以查找相应的generic function对其操作。知道其为matrix后我们可以通过methods函数查找支持对matrix操作的generic function,\n\nShow the codem1 &lt;- matrix(1:6,nrow = 2)\nm1\n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]    1    3    5\n#&gt; [2,]    2    4    6\nclass(m1)\n#&gt; [1] \"matrix\" \"array\"\nmethods(class=\"matrix\")\n#&gt;  [1] anyDuplicated as.data.frame as.raster     as_tibble     boxplot      \n#&gt;  [6] coerce        determinant   duplicated    edit          head         \n#&gt; [11] initialize    isSymmetric   Math          Math2         Ops          \n#&gt; [16] relist        subset        summary       tail          unique       \n#&gt; see '?methods' for accessing help and source code\n\n\n\n\nattributes() 主要是用于列出object所有已有的属性。\n\nShow the codeattributes(m1)\n#&gt; $dim\n#&gt; [1] 2 3\n\nattr(x = m1,which = \"dim\") &lt;- c(3,2)\nm1\n#&gt;      [,1] [,2]\n#&gt; [1,]    1    4\n#&gt; [2,]    2    5\n#&gt; [3,]    3    6\n\n# 或者\na &lt;- structure(\n  m1, \n  dim=c(1,6)\n)\nstr(attributes(a))\n#&gt; List of 1\n#&gt;  $ dim: int [1:2] 1 6\na\n#&gt;      [,1] [,2] [,3] [,4] [,5] [,6]\n#&gt; [1,]    1    2    3    4    5    6\n\n\n\n\ntypeof() 主要站在R的角度查看object的属性，大多数情况下其返回值与mode一样。\n\nShow the codetypeof(m1)\n#&gt; [1] \"integer\"\nmode(m1)\n#&gt; [1] \"numeric\"\n\n\n\n\n大多数操作都会丢失大多数属性。\n只有两个属性是例行保留的：\n\n\n“names”，一个字符向量，为每个元素命名。\n\nShow the code# When creating it: \nx &lt;- c(a = 1, b = 2, c = 3)\nattributes(x)\n#&gt; $names\n#&gt; [1] \"a\" \"b\" \"c\"\nnames(x)\n#&gt; [1] \"a\" \"b\" \"c\"\n\n# By assigning a character vector to names()\nx &lt;- 1:3\nnames(x) &lt;- c(\"a\", \"b\", \"c\")\n\n# Inline, with setNames():\nx &lt;- setNames(1:3, c(\"a\", \"b\", \"c\"))\n\n\n\n\n“dim”，dimensions 的缩写，整数向量，用于将向量转换为矩阵或数组。\n对于原子向量，dimension 属性通常用于创建矩阵或数组。\n\nShow the codez &lt;- 1:6\ndim(z) &lt;- c(3, 2, 1)\nz\n#&gt; , , 1\n#&gt; \n#&gt;      [,1] [,2]\n#&gt; [1,]    1    4\n#&gt; [2,]    2    5\n#&gt; [3,]    3    6\nclass(z)\n#&gt; [1] \"array\"\nattributes(z)\n#&gt; $dim\n#&gt; [1] 3 2 1\ndim(z)\n#&gt; [1] 3 2 1\n\n\n对于列表，dimension 属性可用于创建列表矩阵或列表数组：\n\nShow the codel &lt;- list(1:5, \"a\", TRUE, 1.0)\ndim(l) &lt;- c(2, 2)\nl\n#&gt;      [,1]      [,2]\n#&gt; [1,] integer,5 TRUE\n#&gt; [2,] \"a\"       1\nclass(l)\n#&gt; [1] \"matrix\" \"array\"\nattributes(l)\n#&gt; $dim\n#&gt; [1] 2 2\nl[[1,1]]\n#&gt; [1] 1 2 3 4 5\n\n\n\n\n向量\n矩阵\n数组\n\n\n\nnames()\nrownames(),colnames()\ndimnames()\n\n\nlength()\nnrow(),ncol()\ndim()\n\n\nc()\nrbind(),cbind()\nabind::abind()\n\n\n—\nt()\naperm()\n\n\nis.null(dim(x))\nis.matrix()\nis.array()\n\n\n\n\n\n1.2.2 atomic vectors\n\n\n\n\n\n1.2.2.1 vector\n\nShow the code# 单元素向量\n\"a\" == c(\"a\")\n#&gt; [1] TRUE\nis.vector(\"a\")\n#&gt; [1] TRUE\n\n# 函数c()  Combine Values into a Vector or List\n\nc(\"a\",\"b\",\"c\")\n#&gt; [1] \"a\" \"b\" \"c\"\nc(list(1),list(T)) |&gt; is.vector()\n#&gt; [1] TRUE\n\n\n\n1.2.2.2 matrix\n矩阵是一个具有维度属性（dim）的原子向量，所有元素必须是同一类型。\nmatrix(data= ,nrow=1  ,ncol=1  ,byrow=FALSE ,dimnames=list(rnames,cnames) ,...)\n\nShow the codenum&lt;-c(16,22,24,28)\nrnames&lt;-c(\"R1\",\"R2\")\ncnames&lt;-c(\"C1\",\"C2\")\nm&lt;-matrix(num,nrow=2,ncol=2,byrow=TRUE,dimnames=list(rnames,cnames))\nm\n#&gt;    C1 C2\n#&gt; R1 16 22\n#&gt; R2 24 28\nclass(m)\n#&gt; [1] \"matrix\" \"array\"\nattributes(m)\n#&gt; $dim\n#&gt; [1] 2 2\n#&gt; \n#&gt; $dimnames\n#&gt; $dimnames[[1]]\n#&gt; [1] \"R1\" \"R2\"\n#&gt; \n#&gt; $dimnames[[2]]\n#&gt; [1] \"C1\" \"C2\"\ndim(m)\n#&gt; [1] 2 2\nrownames(m)\n#&gt; [1] \"R1\" \"R2\"\ncolnames(m)\n#&gt; [1] \"C1\" \"C2\"\n\n\n\n1.2.2.3 array\n数组也是一个具有维度属性（dim）的原子向量，所有元素必须是同一类型。\narray(data,dim_numeric_vector=c(...),dimnames = list(dim1,dim2,...),...)\n\nShow the codev&lt;-1:24 \ndim1&lt;-c(\"A1\",\"A2\",\"A3\") \ndim2&lt;-c(\"B1\",\"B2\",\"B3\",\"B4\")\ndim3&lt;-c(\"C1\",\"C2\") \narray_3d&lt;-array(v,c(3,4,2),dimnames = list(dim1,dim2,dim3)) \narray_3d\n#&gt; , , C1\n#&gt; \n#&gt;    B1 B2 B3 B4\n#&gt; A1  1  4  7 10\n#&gt; A2  2  5  8 11\n#&gt; A3  3  6  9 12\n#&gt; \n#&gt; , , C2\n#&gt; \n#&gt;    B1 B2 B3 B4\n#&gt; A1 13 16 19 22\n#&gt; A2 14 17 20 23\n#&gt; A3 15 18 21 24\n\nclass(array_3d)\n#&gt; [1] \"array\"\nattributes(array_3d)\n#&gt; $dim\n#&gt; [1] 3 4 2\n#&gt; \n#&gt; $dimnames\n#&gt; $dimnames[[1]]\n#&gt; [1] \"A1\" \"A2\" \"A3\"\n#&gt; \n#&gt; $dimnames[[2]]\n#&gt; [1] \"B1\" \"B2\" \"B3\" \"B4\"\n#&gt; \n#&gt; $dimnames[[3]]\n#&gt; [1] \"C1\" \"C2\"\ndim(array_3d)\n#&gt; [1] 3 4 2\ndimnames(array_3d)\n#&gt; [[1]]\n#&gt; [1] \"A1\" \"A2\" \"A3\"\n#&gt; \n#&gt; [[2]]\n#&gt; [1] \"B1\" \"B2\" \"B3\" \"B4\"\n#&gt; \n#&gt; [[3]]\n#&gt; [1] \"C1\" \"C2\"\n\n\n要保留其他属性，需要创建S3 类。\n\n1.2.3 S3类原子向量\nbase R 中使用的四个重要的 S3类原子向量：\n\n分类数据，其中值来自factor向量中记录的一组固定水平。\n日期（具有日期分辨率），记录在Date向量中。\n日期时间（具有秒或亚秒分辨率），存储在 POSIXct 向量中。\n持续时间，存储在difftime向量中。\n\n\n\n\n\n\n1.2.3.1 factor\n因子，分类变量，建立在具有两个属性（class，levels）的 integer向量之上。\nfactor(vector,ordered=FALSE,levels=c(v1,v2,…),labels= ,...) ，在内存中以整数向量c(1,2,3,...,k)存储。\n\nShow the code# 存储形式\nx &lt;- factor(c(\"a\", \"b\", \"b\", \"a\"))\nx\n#&gt; [1] a b b a\n#&gt; Levels: a b\ntypeof(x)\n#&gt; [1] \"integer\"\nattributes(x)\n#&gt; $levels\n#&gt; [1] \"a\" \"b\"\n#&gt; \n#&gt; $class\n#&gt; [1] \"factor\"\nlevels(x)\n#&gt; [1] \"a\" \"b\"\nclass(x)\n#&gt; [1] \"factor\"\n\n\n# 名义变量 nominal variable\ndiabetes&lt;-c(\"t1\",\"t2\",\"t1\",\"t1\") \nattributes(diabetes)\n#&gt; NULL\ndiabetes&lt;-factor(diabetes)\nattributes(diabetes)\n#&gt; $levels\n#&gt; [1] \"t1\" \"t2\"\n#&gt; \n#&gt; $class\n#&gt; [1] \"factor\"\n\n\n# 顺序变量 ordinal variable     默认水平根据字母顺序而定\nstatus&lt;-c(\"poor\",\"better\",\"best\",\"poor\")\nstatus&lt;-factor(status,ordered = TRUE) \nstr(status) \n#&gt;  Ord.factor w/ 3 levels \"best\"&lt;\"better\"&lt;..: 3 2 1 3\nstatus&lt;-factor(status,ordered =TRUE,levels = c(\"poor\",\"better\",\"best\")) \nstr(status) \n#&gt;  Ord.factor w/ 3 levels \"poor\"&lt;\"better\"&lt;..: 1 2 3 1\n\n\n#改变外在标签\nsex&lt;-c(1,2,2,1)\nsex\n#&gt; [1] 1 2 2 1\nsex&lt;-factor(sex,levels=c(1,2),labels = c(\"男\",\"女\")) \nstr(sex) \n#&gt;  Factor w/ 2 levels \"男\",\"女\": 1 2 2 1\nsex\n#&gt; [1] 男 女 女 男\n#&gt; Levels: 男 女\n\nleadership &lt;- read_csv(\"data/leadership.txt\") |&gt; column_to_rownames(var = \"id\")\n# 连续型变量→因子\nleadership$agecat&lt;-cut(leadership$age,\n                    breaks = c(0,18,45,65,Inf),\n                    labels=c(\"minor\",\"young\",\"middle_age\",\"elder\"),\n                    include.lowest = TRUE,\n                    right = TRUE\n                    )\nleadership$agecat\n#&gt; [1] young young young elder elder\n#&gt; Levels: minor young middle_age elder\n\n\n\n1.2.3.2 Date\n日期向量建立在 double 向量之上，具有class \"Date\"属性。\n日期 默认格式：\"%Y-%m-%d\" xxxx-xx-xx,例如：2023-03-15\n\nShow the codetoday &lt;- Sys.Date()\ntoday\n#&gt; [1] \"2024-06-11\"\ntypeof(today)\n#&gt; [1] \"double\"\nattributes(today)\n#&gt; $class\n#&gt; [1] \"Date\"\nclass(today)\n#&gt; [1] \"Date\"\n\nas.Date(c(\"02 14-2002\",\"01 04-2013\"),\"%m %d-%Y\") #以\"%m %d-%Y\"格式读入\n#&gt; [1] \"2002-02-14\" \"2013-01-04\"\nformat(Sys.Date(),\"%Y/%m/%d\") #以\"%Y/%m/%d\"格式输出\n#&gt; [1] \"2024/06/11\"\n\n\n# 双精度值（通过剥离类来查看）表示自 1970 年 1 月 1 日以来的天数\ndate &lt;- as.Date(\"1970-02-01\")\nunclass(date)\n#&gt; [1] 31\n\n\n\n1.2.3.3 Datetime\nPOSIXct 和 POSIXlt\n“POSIX”是可移植操作系统接口（ Portable Operating System Interface）的缩写，这是一个跨平台标准系列。“ct”代表calendar time（C 中的类型），“lt”代表local time（C 中的类型）。\nPOSIXct 向量建立在 double向量之上，其中值表示自 1970-01-01 以来的秒数\n\nShow the codenow_ct &lt;- as.POSIXct(\"2024-04-20 15:45\", tz = \"Asia/Shanghai\")\nnow_ct\n#&gt; [1] \"2024-04-20 15:45:00 CST\"\ntypeof(now_ct)\n#&gt; [1] \"double\"\nattributes(now_ct)\n#&gt; $class\n#&gt; [1] \"POSIXct\" \"POSIXt\" \n#&gt; \n#&gt; $tzone\n#&gt; [1] \"Asia/Shanghai\"\nclass(now_ct)\n#&gt; [1] \"POSIXct\" \"POSIXt\"\n\n\n\n1.2.3.4 Durations\n持续时间（表示日期对或日期时间对之间的时间量）存储在difftimes中。Difftimes 建立在 double 之上，并且具有确定整数应如何解释的属性。\n\nShow the codeunits_1 &lt;- as.difftime(1, units = \"weeks\")  #units = c(\"auto\", \"secs\", \"mins\", \"hours\",\"days\", \"weeks\"))\n\nunits_1\n#&gt; Time difference of 1 weeks\ntypeof(units_1)\n#&gt; [1] \"double\"\nattributes(units_1)\n#&gt; $class\n#&gt; [1] \"difftime\"\n#&gt; \n#&gt; $units\n#&gt; [1] \"weeks\"\nclass(units_1)\n#&gt; [1] \"difftime\"\nunits(units_1)\n#&gt; [1] \"weeks\"\nunits(units_1) &lt;- \"days\"\n\nattributes(units_1)\n#&gt; $units\n#&gt; [1] \"days\"\n#&gt; \n#&gt; $class\n#&gt; [1] \"difftime\"\n\n\n\n1.2.4 泛型向量（列表）\n从技术上讲，列表的每个元素实际上是相同的类型，因为每个元素实际上是对另一个对象的引用 Figure 1.1 ，该对象可以是任何类型。\n\n1.2.4.1 list\n列表不存储值本身，而是存储对它们的引用：\n\nShow the codel1 &lt;- list(1,2,3)\ntypeof(l1)\n#&gt; [1] \"list\"\n\n\n\n\n\n\n\nFigure 1.1\n\n\n列表，list(name1=object1,name2=object2,...)\n\nShow the codelist1&lt;-list(title=\"My list\",\n             matr=matrix(c(\"a1\",\"b1\",\"a2\",\"b2\"),nrow=2,ncol=2,byrow=TRUE,\n                           dimnames = list(c(\"X1\",\"X2\"),c(\"Y1\",\"Y2\"))\n                         ),\n             df=data.frame(id=matrix(c(\"Lisa\",\"BOb\",\"John\",\"Jule\"),\n                                     nrow=4,ncol=1,byrow=TRUE\n                                     ),\n                           int=c(3,5,7,9),\n                           TF=c(T,T,T,F)\n                           ),\n             list=list(a=c(1,2,3),b=c(\"A\",\"B\"))\n             )\nlist1\n#&gt; $title\n#&gt; [1] \"My list\"\n#&gt; \n#&gt; $matr\n#&gt;    Y1   Y2  \n#&gt; X1 \"a1\" \"b1\"\n#&gt; X2 \"a2\" \"b2\"\n#&gt; \n#&gt; $df\n#&gt;     id int    TF\n#&gt; 1 Lisa   3  TRUE\n#&gt; 2  BOb   5  TRUE\n#&gt; 3 John   7  TRUE\n#&gt; 4 Jule   9 FALSE\n#&gt; \n#&gt; $list\n#&gt; $list$a\n#&gt; [1] 1 2 3\n#&gt; \n#&gt; $list$b\n#&gt; [1] \"A\" \"B\"\ntypeof(list1)\n#&gt; [1] \"list\"\nattributes(list1)\n#&gt; $names\n#&gt; [1] \"title\" \"matr\"  \"df\"    \"list\"\nclass(list1)\n#&gt; [1] \"list\"\nnames(list1)\n#&gt; [1] \"title\" \"matr\"  \"df\"    \"list\"\n\n\n\n1.2.4.2 data frame/tibble\n建立在\"list\"之上的两个最重要的 S3 类是data.frame 和 tibble\n\n\n\n\n数据框是列向量具有 names，row.names ，class”data.frame” 属性的命名列表，是一种特殊的列表，每个原子向量的长度必须相同。\n\nShow the codeid&lt;-c(001231,001241,001413,001244) \nage&lt;-c(21,14,52,15) \ndiabetes&lt;-c(\"t1\",\"t2\",\"t1\",\"t1\") \nstatus&lt;-c(\"poor\",\"better\",\"best\",\"poor\") \ndf1&lt;-data.frame(patientID=id,age,diabetes,status,row.names = c(1,2,3,4),\n                stringsAsFactors = FALSE) # 4个列向量组成数据框 \ndf1\n\n\n\n\npatientID\nage\ndiabetes\nstatus\n\n\n\n1231\n21\nt1\npoor\n\n\n1241\n14\nt2\nbetter\n\n\n1413\n52\nt1\nbest\n\n\n1244\n15\nt1\npoor\n\n\n\n\n\nShow the codetypeof(df1)\n#&gt; [1] \"list\"\nattributes(df1)\n#&gt; $names\n#&gt; [1] \"patientID\" \"age\"       \"diabetes\"  \"status\"   \n#&gt; \n#&gt; $class\n#&gt; [1] \"data.frame\"\n#&gt; \n#&gt; $row.names\n#&gt; [1] \"1\" \"2\" \"3\" \"4\"\nclass(df1)\n#&gt; [1] \"data.frame\"\nnames(df1)\n#&gt; [1] \"patientID\" \"age\"       \"diabetes\"  \"status\"\ncolnames(df1)\n#&gt; [1] \"patientID\" \"age\"       \"diabetes\"  \"status\"\nrow.names(df1)\n#&gt; [1] \"1\" \"2\" \"3\" \"4\"\nrownames(df1)\n#&gt; [1] \"1\" \"2\" \"3\" \"4\"\n\n\ntibblle与data frame共享相同的结构。区别是class属性更多,不会自动进行强制类型转换，不会自动转换非法名称（自动反引号非法名称）， tibbles 只能循环较短的长度为 1 的向量，允许引用在构造过程中创建的变量。\n\nShow the codelibrary(tibble)\ndf2 &lt;- tibble(x = 1:3, y = letters[1:3])\ntypeof(df2)\n#&gt; [1] \"list\"\nattributes(df2)\n#&gt; $class\n#&gt; [1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n#&gt; \n#&gt; $row.names\n#&gt; [1] 1 2 3\n#&gt; \n#&gt; $names\n#&gt; [1] \"x\" \"y\"\n\n\nnames(tibble(`1` = 1))\n#&gt; [1] \"1\"\n\ntibble(x = 1:4, y = 1)\n\n\n\n\nx\ny\n\n\n\n1\n1\n\n\n2\n1\n\n\n3\n1\n\n\n4\n1\n\n\n\n\n\nShow the codetibble(x = 1:4, y = 1:2)\n#&gt; Error in `tibble()`:\n#&gt; ! Tibble columns must have compatible sizes.\n#&gt; • Size 4: Existing data.\n#&gt; • Size 2: Column `y`.\n#&gt; ℹ Only values of size one are recycled.\n\ntibble(\n  x = 1:3,\n  y = x * 2\n)\n\n\n\n\nx\ny\n\n\n\n1\n2\n\n\n2\n4\n\n\n3\n6\n\n\n\n\n\n\n\n1.2.4.3 行名→列\n\nShow the codedf3 &lt;- data.frame(\n  age = c(35, 27, 18),\n  hair = c(\"blond\", \"brown\", \"black\"),\n  row.names = c(\"Bob\", \"Susan\", \"Sam\")\n)\ndf3 |&gt; rownames_to_column(var = \"name\")\n\n\n\n\nname\nage\nhair\n\n\n\nBob\n35\nblond\n\n\nSusan\n27\nbrown\n\n\nSam\n18\nblack\n\n\n\n\n\nShow the codeas_tibble(df3, rownames = \"name\")\n\n\n\n\nname\nage\nhair\n\n\n\nBob\n35\nblond\n\n\nSusan\n27\nbrown\n\n\nSam\n18\nblack\n\n\n\n\n\nShow the code\n\nis_tibble(df2)\n#&gt; [1] TRUE\nis_tibble(df3)\n#&gt; [1] FALSE\nas_tibble(df3)\n\n\n\n\nage\nhair\n\n\n\n35\nblond\n\n\n27\nbrown\n\n\n18\nblack\n\n\n\n\n\n\n\n1.2.4.4 列表列\n\nShow the codedf &lt;- data.frame(x = 1:3)\ndf$y &lt;- list(1:2, 1:3, 1:4)\ndf\n\n\n\n\nx\ny\n\n\n\n1\n1, 2\n\n\n2\n1, 2, 3\n\n\n3\n1, 2, 3, 4\n\n\n\n\n\nShow the code\ndata.frame(\n  x = 1:3, \n  y = I(list(1:2, 1:3, 1:4))\n)\n\n\n\n\nx\ny\n\n\n\n1\n1, 2\n\n\n2\n1, 2, 3\n\n\n3\n1, 2, 3, 4\n\n\n\n\n\nShow the code\ntibble(\n  x = 1:3, \n  y = list(1:2, 1:3, 1:4)\n)\n\n\n\n\nx\ny\n\n\n\n1\n1, 2\n\n\n2\n1, 2, 3\n\n\n3\n1, 2, 3, 4\n\n\n\n\n\n\n\n1.2.4.5 矩阵和数据框列\n行数必须相等\n\nShow the codedfm &lt;- data.frame(\n  x = 1:3 * 10\n)\ndfm$y &lt;- matrix(1:9, nrow = 3)\ndfm$z &lt;- data.frame(a = 3:1, b = letters[1:3], stringsAsFactors = FALSE)\n\ndfm\n\n\n\n\nx\ny\nz\n\n\n\n10\n1\n3\n\n\n20\n2\n2\n\n\n30\n3\n1",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>基本数据类型和数据结构</span>"
    ]
  },
  {
    "objectID": "type_class.html#null",
    "href": "type_class.html#null",
    "title": "\n1  基本数据类型和数据结构\n",
    "section": "\n1.3 NULL\n",
    "text": "1.3 NULL\n\n长度始终为零，并且没有属性。\n\nShow the codetypeof(NULL)\n#&gt; [1] \"NULL\"\nlength(NULL)\n#&gt; [1] 0\nis.null(NULL)\n#&gt; [1] TRUE\nc()\n#&gt; NULL",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>基本数据类型和数据结构</span>"
    ]
  },
  {
    "objectID": "read_write.html",
    "href": "read_write.html",
    "title": "\n2  读入和写出\n",
    "section": "",
    "text": "2.1 Import\nShow the codetibble(\n  x = c(1, 2, 5), \n  y = c(\"h\", \"m\", \"g\"),\n  z = c(0.08, 0.83, 0.60)\n)\n\n\n\n\nx\ny\nz\n\n\n\n1\nh\n0.08\n\n\n2\nm\n0.83\n\n\n5\ng\n0.60\nShow the codetribble(\n  ~x, ~y, ~z,\n  1, \"h\", 0.08,\n  2, \"m\", 0.83,\n  5, \"g\", 0.60\n)\n\n\n\n\nx\ny\nz\n\n\n\n1\nh\n0.08\n\n\n2\nm\n0.83\n\n\n5\ng\n0.60",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>读入和写出</span>"
    ]
  },
  {
    "objectID": "read_write.html#import",
    "href": "read_write.html#import",
    "title": "\n2  读入和写出\n",
    "section": "",
    "text": "2.1.1 文本文件\n常用的分隔符如逗号, ，制表符\\t，分号;，空格space，…… 等。\n\n2.1.1.1 utils::\n\nutilities,a piece of computer software that performs a particular task\nread.table() read.csv() read.csv2\n\nShow the code# 列名(第1行),行标识符 (第1列)\nutils::read.table(\"data/leadership.txt\",header = TRUE,sep=\",\",row.names = 1)\n\n\n\n\n\ndate\ncountry\ngender\nage\nq1\nq2\nq3\nq4\nq5\n\n\n\nBob\n10/24/14\nUS\nM\n29\n5\n4\n5\n5\n5\n\n\nMary\n10/28/14\nUS\nF\n44\n3\n5\n2\n5\n5\n\n\nLily\n10/01/14\nUK\nF\n45\n3\n5\n5\n5\n2\n\n\nJuly\n10/12/14\nUK\nM\n68\n3\n3\n4\nNA\nNA\n\n\nFrank\n05/01/14\nUK\nF\n99\n2\n2\n1\n2\n1\n\n\n\n\n\nShow the codex &lt;- read.csv(\"data/leadership.txt\",header = TRUE,sep=\",\",row.names = 1)\nread.table(\"data/leadership.txt\",header = TRUE,sep=\",\",row.names = \"id\") \n\n\n\n\n\ndate\ncountry\ngender\nage\nq1\nq2\nq3\nq4\nq5\n\n\n\nBob\n10/24/14\nUS\nM\n29\n5\n4\n5\n5\n5\n\n\nMary\n10/28/14\nUS\nF\n44\n3\n5\n2\n5\n5\n\n\nLily\n10/01/14\nUK\nF\n45\n3\n5\n5\n5\n2\n\n\nJuly\n10/12/14\nUK\nM\n68\n3\n3\n4\nNA\nNA\n\n\nFrank\n05/01/14\nUK\nF\n99\n2\n2\n1\n2\n1\n\n\n\n\n\n\n\n2.1.1.2 readr::\n\nread_csv() read_tsv() read_delim()\n\nShow the codereadr::read_csv(\"data/leadership.txt\",col_names = TRUE,id=\"file_path\") |&gt; \n    column_to_rownames(var = \"id\")\n\n\n\n2.1.1.3 批量读取\n\nShow the codesales_files &lt;- c(\"data/01-sales.csv\",\n                 \"data/02-sales.csv\",\n                 \"data/03-sales.csv\")\nread_csv(sales_files, id = \"file_path\")\n\n\n\n\nfile_path\nmonth\nyear\nbrand\nitem\nn\n\n\n\ndata/01-sales.csv\nJanuary\n2019\n1\n1234\n3\n\n\ndata/01-sales.csv\nJanuary\n2019\n1\n8721\n9\n\n\ndata/01-sales.csv\nJanuary\n2019\n1\n1822\n2\n\n\ndata/01-sales.csv\nJanuary\n2019\n2\n3333\n1\n\n\ndata/01-sales.csv\nJanuary\n2019\n2\n2156\n9\n\n\ndata/01-sales.csv\nJanuary\n2019\n2\n3987\n6\n\n\ndata/01-sales.csv\nJanuary\n2019\n2\n3827\n6\n\n\ndata/02-sales.csv\nFebruary\n2019\n1\n1234\n8\n\n\ndata/02-sales.csv\nFebruary\n2019\n1\n8721\n2\n\n\ndata/02-sales.csv\nFebruary\n2019\n1\n1822\n3\n\n\ndata/02-sales.csv\nFebruary\n2019\n2\n3333\n1\n\n\ndata/02-sales.csv\nFebruary\n2019\n2\n2156\n3\n\n\ndata/02-sales.csv\nFebruary\n2019\n2\n3987\n6\n\n\ndata/03-sales.csv\nMarch\n2019\n1\n1234\n3\n\n\ndata/03-sales.csv\nMarch\n2019\n1\n3627\n1\n\n\ndata/03-sales.csv\nMarch\n2019\n1\n8820\n3\n\n\ndata/03-sales.csv\nMarch\n2019\n2\n7253\n1\n\n\ndata/03-sales.csv\nMarch\n2019\n2\n8766\n3\n\n\ndata/03-sales.csv\nMarch\n2019\n2\n8288\n6\n\n\n\n\n\n\n\n2.1.2 Excel\n\nShow the codelibrary(readxl)\n#read_xls()\n#read_xlsx()\nread_excel(path = \"data/example.xlsx\",sheet = 1,range = \"A1:D11\")\n\n\n\n\n姓名\n数学\n科学\n英语\n\n\n\nJ.D\n502\n95\n25\n\n\nA.W\n600\n99\n22\n\n\nB.M\n412\n80\n18\n\n\nD.J\n358\n82\n15\n\n\nJ.M\n495\n75\n20\n\n\nC.C\n512\n85\n28\n\n\nR.y\n410\n80\n15\n\n\nG.K\n625\n95\n30\n\n\nJ.E\n573\n89\n27\n\n\nM.R\n522\n86\n18\n\n\n\n\n\nShow the coderead_excel(\"data/example.xlsx\",2)\n\n\n\n\nID\nTime\nX1\nX2\n\n\n\n1\n1\n5\n6\n\n\n1\n2\n3\n5\n\n\n2\n1\n6\n1\n\n\n2\n2\n2\n4\n\n\n\n\n\n\n\n2.1.2.1 多个Excel 合并导入\n\nShow the codecombine_sheets &lt;- function(excel_file_path) {\n    df &lt;- excel_file_path %&gt;%\n        excel_sheets() %&gt;%\n        set_names() %&gt;%\n        map_df(.f = ~read_excel(path = excel_file_path, sheet = ..1)\n               ,.id = \"sheet\"\n        )\n    return(df)\n}\n\nexcel_file_paths &lt;- list.files(path = \".\",pattern = \".xlsx\",recursive = T)\n\nexcel_file_paths\n#&gt; [1] \"data/deaths.xlsx\"       \"data/deathsA5_F15.xlsx\" \"data/example.xlsx\"     \n#&gt; [4] \"data/penguins.xlsx\"     \"data/students.xlsx\"\ncombine_workbooks &lt;- map_dfr(excel_file_paths, combine_sheets)\n\n\n\n2.1.3 脚本载入\n\nShow the codesource(\"data/add_function.R\")\nadd(c(1,24,4),4)\n#&gt; [1]  5 28  8\n\n\n\n\n\n\n\n\nNote\n\n\n\nadd_function\n\nShow the codeadd &lt;- function(x,y){\n  return(x+y)\n}\n\n\n\n\n\n2.1.4 二进制文件\nRDS,R’s custom binary format called RDS\nread_rds()\n\nShow the codewrite_rds(x,file = \"data/leadership.parquet\")\nread_rds(\"data/leadership.rds\")\n\n\n\n\n\ndate\ncountry\ngender\nage\nq1\nq2\nq3\nq4\nq5\n\n\n\nBob\n10/24/14\nUS\nM\n29\n5\n4\n5\n5\n5\n\n\nMary\n10/28/14\nUS\nF\n44\n3\n5\n2\n5\n5\n\n\nLily\n10/01/14\nUK\nF\n45\n3\n5\n5\n5\n2\n\n\nJuly\n10/12/14\nUK\nM\n68\n3\n3\n4\nNA\nNA\n\n\nFrank\n05/01/14\nUK\nF\n99\n2\n2\n1\n2\n1\n\n\n\n\n\n\nParquet,a fast binary and columnar storage file format(列式存储文件)\n\nShow the codelibrary(arrow)\nwrite_parquet(x,sink = \"data/leadership.parquet\")\nread_parquet(file = \"data/leadership.parquet\" )\n\n\n\n\ndate\ncountry\ngender\nage\nq1\nq2\nq3\nq4\nq5\n\n\n\n10/24/14\nUS\nM\n29\n5\n4\n5\n5\n5\n\n\n10/28/14\nUS\nF\n44\n3\n5\n2\n5\n5\n\n\n10/01/14\nUK\nF\n45\n3\n5\n5\n5\n2\n\n\n10/12/14\nUK\nM\n68\n3\n3\n4\nNA\nNA\n\n\n05/01/14\nUK\nF\n99\n2\n2\n1\n2\n1\n\n\n\n\n\n\n\n2.1.5 数据库\n\nShow the codelibrary(DBI)\nlibrary(dbplyr)\n\n\n\n2.1.6 等宽格式\nreadr 包提供的 read_fwf()\n\nShow the code' First     Last  Sex Number\n Currer     Bell    F      2\n    Dr.    Seuss    M     49\n    \"\"   Student   NA     21' |&gt; read_fwf()\n\n\n\n\nX1\nX2\nX3\n\n\n\nFirst\nLast\nSex Number\n\n\nCurrer\nBell\nF 2\n\n\nDr.\nSeuss\nM 49\n\n\n“”\nStudent\nNA 21\n\n\n\n\n\n\n\n2.1.7 Internet Datasets\n\nShow the codeurl = \"https://www.monetdb.org/sites/default/files/voc_tsvs.zip\"\ndownload.file(url, \"voc_tsvs.zip\") # download file\nunzip(\"voc_tsvs.zip\", exdir = \"data\") # unzip files\nfile.remove(\"voc_tsvs.zip\") # tidy up by removing the zip file\n\nurl = \"https://vincentarelbundock.github.io/Rdatasets/csv/datasets/co2.csv\"\ndownload.file(url, \"extdata/co2.csv\")\ndf_co2 = read_csv(\"extdata/co2.csv\")\n\n\n\n2.1.8 Datasets in library\n\nShow the code#|eval: false\ndata(package = \"dplyr\")\n#&gt; Data sets in package ‘dplyr’:\n#&gt; \n#&gt; band_instruments               Band membership\n#&gt; band_instruments2              Band membership\n#&gt; band_members                   Band membership\n#&gt; starwars                       Starwars characters\n#&gt; storms                         Storm tracks data\n\n\n\n2.1.9 JSON\njavascript object notation\n\nShow the codelibrary(jsonlite)\nread_json(path = \"data/3龙门币3赤金.json\",simplifyVector = TRUE)\n#&gt; $author\n#&gt; [1] \"wal\"\n#&gt; \n#&gt; $description\n#&gt; [1] \"\"\n#&gt; \n#&gt; $id\n#&gt; [1] 1.71086e+15\n#&gt; \n#&gt; $title\n#&gt; [1] \"3龙门币3赤金\"\n#&gt; \n#&gt; $buildingType\n#&gt; [1] 243\n#&gt; \n#&gt; $planTimes\n#&gt; [1] \"3班\"\n#&gt; \n#&gt; $plans\n#&gt;    name description Fiammetta.enable Fiammetta.target Fiammetta.order\n#&gt; 1 A白班                         TRUE             巫恋             pre\n#&gt; 2 B夜班                         TRUE           龙舌兰             pre\n#&gt;   drones.room drones.index drones.enable drones.order\n#&gt; 1     trading            1          TRUE          pre\n#&gt; 2     trading            1          TRUE          pre\n#&gt;                                                                                                                                      rooms.trading\n#&gt; 1         FALSE, FALSE, FALSE, LMD, LMD, LMD, 巫恋, 龙舌兰, 柏喙, 孑, 银灰, 琳琅诗怀雅, 空弦, 但书, 伺夜, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE\n#&gt; 2 FALSE, FALSE, FALSE, LMD, LMD, LMD, 巫恋, 龙舌兰, 卡夫卡, 能天使, 德克萨斯, 拉普兰德, 黑键, 慕斯, 石英, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE\n#&gt;                                                                                                                                              rooms.manufacture\n#&gt; 1         FALSE, FALSE, FALSE, Pure Gold, Pure Gold, Pure Gold, 槐琥, 至简, 清流, 苍苔, 斑点, 夜烟, 温蒂, 森蚺, 异客, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE\n#&gt; 2 FALSE, FALSE, FALSE, Pure Gold, Pure Gold, Pure Gold, 淬羽赫默, 多萝西, 白面鸮, 砾, 迷迭香, 香草, 火神, 贝娜, 泡泡, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE\n#&gt;                                                                               rooms.power\n#&gt; 1 FALSE, FALSE, FALSE, 承曦格雷伊, 澄闪, 格雷伊, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE\n#&gt; 2       FALSE, FALSE, FALSE, 缪尔赛思, 雷蛇, 黍, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE\n#&gt;                                                                                  rooms.dormitory\n#&gt; 1 FALSE, FALSE, FALSE, FALSE, 菲亚梅塔, 重岳, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE\n#&gt; 2 FALSE, FALSE, FALSE, FALSE, 菲亚梅塔, 塑心, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE\n#&gt;                                                     rooms.control\n#&gt; 1 FALSE, 阿米娅, 麒麟R夜刀, 火龙S黑角, 灵知, 玛恩纳, FALSE, FALSE\n#&gt; 2             FALSE, 重岳, 诗怀雅, 凯尔希, 令, 琴柳, FALSE, FALSE\n#&gt;                       rooms.meeting                    rooms.hire\n#&gt; 1     FALSE, 陈, 白雪, FALSE, FALSE FALSE, 艾雅法拉, FALSE, FALSE\n#&gt; 2 FALSE, 远山, 塞雷娅, FALSE, FALSE     FALSE, 絮雨, FALSE, FALSE\n#&gt;          rooms.processing                     period\n#&gt; 1     FALSE, FALSE, FALSE               07:00, 21:59\n#&gt; 2 FALSE, 年, FALSE, FALSE 22:00, 00:00, 23:59, 06:59\n#&gt; \n#&gt; $scheduleType\n#&gt; $scheduleType$planTimes\n#&gt; [1] 2\n#&gt; \n#&gt; $scheduleType$trading\n#&gt; [1] 3\n#&gt; \n#&gt; $scheduleType$manufacture\n#&gt; [1] 3\n#&gt; \n#&gt; $scheduleType$power\n#&gt; [1] 3\n#&gt; \n#&gt; $scheduleType$dormitory\n#&gt; [1] 4\n\n\n\n2.1.10 SPSS/SAS/stata DTA\n\nShow the codelibrary(haven)\nread_spss(file)\nread_sav(file)\nread_sas(file)\nread_dta(file)\nread_stata(file)\n\n\n\n2.1.11 键盘输入\n\nShow the codedf &lt;- data.frame(id=character(0),age=numeric(0),sex=character(0))\ndf &lt;- edit(df)\n\nfix(df)\n\n\n\n2.1.12 逐行键入数据\n\nShow the codereadline(\"输入年龄：\")",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>读入和写出</span>"
    ]
  },
  {
    "objectID": "read_write.html#write",
    "href": "read_write.html#write",
    "title": "\n2  读入和写出\n",
    "section": "\n2.2 Write",
    "text": "2.2 Write\n\n2.2.1 文本输出\n\nShow the codewrite_csv()\nwrite_xlsx()\nwrite_rds()\nwrite_parquet()\n\n\n\nShow the codesink(\"data/sink_output.txt\",append = F,split = T)  # split =T 输出到控制台和文件\nletters\n#&gt;  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n#&gt; [20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\"\nsink(NULL)\n\n\n\n2.2.2 图片输出\nRstudio 直接 Export save as Image/PDF，copy to clipboard\n\nShow the codepdf(file = \"data/pdf_output.pdf\")       # bmp,jpeg,png，SVG\nplot(1:25,1:25,pch=1:25,col=\"green\",bg=\"red\",type = \"b\")\nwhile(!is.null(dev.list()))  dev.off()",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>读入和写出</span>"
    ]
  },
  {
    "objectID": "useful_function.html",
    "href": "useful_function.html",
    "title": "\n3  实用函数\n",
    "section": "",
    "text": "3.1 安装与更新\nShow the code# CRAN \ninstall.packages(\"package_name\")  \n# 本地 \ninstall.packages(\"H:/压缩包/GenomeInfoDbData_1.2.12.tar.gz\", repos = NULL, type = \"source\")\n# Bioconductor \ninstall.packages(\"BiocManager\") \nBiocManager::install()  \n# Github \nremotes::install_github(\"tidyverse/ggplot2\")\nremotes::update_packages()",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "useful_function.html#查看加载的包",
    "href": "useful_function.html#查看加载的包",
    "title": "\n3  实用函数\n",
    "section": "\n3.2 查看加载的包",
    "text": "3.2 查看加载的包\n\nShow the codesearch()\n#&gt;  [1] \".GlobalEnv\"          \"package:MASS\"        \"package:BiocManager\"\n#&gt;  [4] \"package:stats\"       \"package:graphics\"    \"package:grDevices\"  \n#&gt;  [7] \"package:utils\"       \"package:datasets\"    \".conflicts\"         \n#&gt; [10] \"package:writexl\"     \"package:readxl\"      \"package:patchwork\"  \n#&gt; [13] \"package:lubridate\"   \"package:forcats\"     \"package:stringr\"    \n#&gt; [16] \"package:dplyr\"       \"package:purrr\"       \"package:readr\"      \n#&gt; [19] \"package:tidyr\"       \"package:tibble\"      \"package:ggplot2\"    \n#&gt; [22] \"package:tidyverse\"   \"package:conflicted\"  \"package:showtext\"   \n#&gt; [25] \"package:showtextdb\"  \"package:sysfonts\"    \"package:methods\"    \n#&gt; [28] \"Autoloads\"           \"package:base\"\nsessionInfo()\n#&gt; R version 4.4.1 (2024-06-14 ucrt)\n#&gt; Platform: x86_64-w64-mingw32/x64\n#&gt; Running under: Windows 10 x64 (build 19045)\n#&gt; \n#&gt; Matrix products: default\n#&gt; \n#&gt; \n#&gt; locale:\n#&gt; [1] LC_COLLATE=Chinese (Simplified)_China.utf8 \n#&gt; [2] LC_CTYPE=Chinese (Simplified)_China.utf8   \n#&gt; [3] LC_MONETARY=Chinese (Simplified)_China.utf8\n#&gt; [4] LC_NUMERIC=C                               \n#&gt; [5] LC_TIME=Chinese (Simplified)_China.utf8    \n#&gt; \n#&gt; time zone: America/New_York\n#&gt; tzcode source: internal\n#&gt; \n#&gt; attached base packages:\n#&gt; [1] stats     graphics  grDevices utils     datasets  methods   base     \n#&gt; \n#&gt; other attached packages:\n#&gt;  [1] MASS_7.3-61         BiocManager_1.30.23 writexl_1.5.0      \n#&gt;  [4] readxl_1.4.3        patchwork_1.2.0     lubridate_1.9.3    \n#&gt;  [7] forcats_1.0.0       stringr_1.5.1       dplyr_1.1.4        \n#&gt; [10] purrr_1.0.2         readr_2.1.5         tidyr_1.3.1        \n#&gt; [13] tibble_3.2.1        ggplot2_3.5.1       tidyverse_2.0.0    \n#&gt; [16] conflicted_1.2.0    showtext_0.9-7      showtextdb_3.0     \n#&gt; [19] sysfonts_0.8.9     \n#&gt; \n#&gt; loaded via a namespace (and not attached):\n#&gt;  [1] utf8_1.2.4        generics_0.1.3    stringi_1.8.4     hms_1.1.3        \n#&gt;  [5] digest_0.6.36     magrittr_2.0.3    evaluate_0.24.0   grid_4.4.1       \n#&gt;  [9] timechange_0.3.0  fastmap_1.2.0     jsonlite_1.8.8    cellranger_1.1.0 \n#&gt; [13] fansi_1.0.6       scales_1.3.0      cli_3.6.3         rlang_1.1.4      \n#&gt; [17] munsell_0.5.1     withr_3.0.0       cachem_1.1.0      tools_4.4.1      \n#&gt; [21] tzdb_0.4.0        memoise_2.0.1     colorspace_2.1-0  vctrs_0.6.5      \n#&gt; [25] R6_2.5.1          lifecycle_1.0.4   htmlwidgets_1.6.4 pkgconfig_2.0.3  \n#&gt; [29] pillar_1.9.0      gtable_0.3.5      glue_1.7.0        xfun_0.45        \n#&gt; [33] tidyselect_1.2.1  rstudioapi_0.16.0 knitr_1.47        htmltools_0.5.8.1\n#&gt; [37] rmarkdown_2.27    compiler_4.4.1\ndevtools::session_info()\n#&gt; ─ Session info ───────────────────────────────────────────────────────────────\n#&gt;  setting  value\n#&gt;  version  R version 4.4.1 (2024-06-14 ucrt)\n#&gt;  os       Windows 10 x64 (build 19045)\n#&gt;  system   x86_64, mingw32\n#&gt;  ui       RTerm\n#&gt;  language en\n#&gt;  collate  Chinese (Simplified)_China.utf8\n#&gt;  ctype    Chinese (Simplified)_China.utf8\n#&gt;  tz       America/New_York\n#&gt;  date     2024-07-14\n#&gt;  pandoc   3.1.11 @ D:/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n#&gt; \n#&gt; ─ Packages ───────────────────────────────────────────────────────────────────\n#&gt;  package     * version date (UTC) lib source\n#&gt;  BiocManager * 1.30.23 2024-05-04 [1] CRAN (R 4.4.1)\n#&gt;  cachem        1.1.0   2024-05-16 [1] CRAN (R 4.4.1)\n#&gt;  cellranger    1.1.0   2016-07-27 [1] CRAN (R 4.4.1)\n#&gt;  cli           3.6.3   2024-06-21 [1] CRAN (R 4.4.1)\n#&gt;  colorspace    2.1-0   2023-01-23 [1] CRAN (R 4.4.1)\n#&gt;  conflicted  * 1.2.0   2023-02-01 [1] CRAN (R 4.4.1)\n#&gt;  devtools      2.4.5   2022-10-11 [1] CRAN (R 4.4.1)\n#&gt;  digest        0.6.36  2024-06-23 [1] CRAN (R 4.4.1)\n#&gt;  dplyr       * 1.1.4   2023-11-17 [1] CRAN (R 4.4.1)\n#&gt;  ellipsis      0.3.2   2021-04-29 [1] CRAN (R 4.4.1)\n#&gt;  evaluate      0.24.0  2024-06-10 [1] CRAN (R 4.4.1)\n#&gt;  fansi         1.0.6   2023-12-08 [1] CRAN (R 4.4.1)\n#&gt;  fastmap       1.2.0   2024-05-15 [1] CRAN (R 4.4.1)\n#&gt;  forcats     * 1.0.0   2023-01-29 [1] CRAN (R 4.4.1)\n#&gt;  fs            1.6.4   2024-04-25 [1] CRAN (R 4.4.1)\n#&gt;  generics      0.1.3   2022-07-05 [1] CRAN (R 4.4.1)\n#&gt;  ggplot2     * 3.5.1   2024-04-23 [1] CRAN (R 4.4.1)\n#&gt;  glue          1.7.0   2024-01-09 [1] CRAN (R 4.4.1)\n#&gt;  gtable        0.3.5   2024-04-22 [1] CRAN (R 4.4.1)\n#&gt;  hms           1.1.3   2023-03-21 [1] CRAN (R 4.4.1)\n#&gt;  htmltools     0.5.8.1 2024-04-04 [1] CRAN (R 4.4.1)\n#&gt;  htmlwidgets   1.6.4   2023-12-06 [1] CRAN (R 4.4.1)\n#&gt;  httpuv        1.6.15  2024-03-26 [1] CRAN (R 4.4.1)\n#&gt;  jsonlite      1.8.8   2023-12-04 [1] CRAN (R 4.4.1)\n#&gt;  knitr         1.47    2024-05-29 [1] CRAN (R 4.4.1)\n#&gt;  later         1.3.2   2023-12-06 [1] CRAN (R 4.4.1)\n#&gt;  lifecycle     1.0.4   2023-11-07 [1] CRAN (R 4.4.1)\n#&gt;  lubridate   * 1.9.3   2023-09-27 [1] CRAN (R 4.4.1)\n#&gt;  magrittr      2.0.3   2022-03-30 [1] CRAN (R 4.4.1)\n#&gt;  MASS        * 7.3-61  2024-06-13 [1] CRAN (R 4.4.1)\n#&gt;  memoise       2.0.1   2021-11-26 [1] CRAN (R 4.4.1)\n#&gt;  mime          0.12    2021-09-28 [1] CRAN (R 4.4.0)\n#&gt;  miniUI        0.1.1.1 2018-05-18 [1] CRAN (R 4.4.1)\n#&gt;  munsell       0.5.1   2024-04-01 [1] CRAN (R 4.4.1)\n#&gt;  patchwork   * 1.2.0   2024-01-08 [1] CRAN (R 4.4.1)\n#&gt;  pillar        1.9.0   2023-03-22 [1] CRAN (R 4.4.1)\n#&gt;  pkgbuild      1.4.4   2024-03-17 [1] CRAN (R 4.4.1)\n#&gt;  pkgconfig     2.0.3   2019-09-22 [1] CRAN (R 4.4.1)\n#&gt;  pkgload       1.4.0   2024-06-28 [1] CRAN (R 4.4.1)\n#&gt;  profvis       0.3.8   2023-05-02 [1] CRAN (R 4.4.1)\n#&gt;  promises      1.3.0   2024-04-05 [1] CRAN (R 4.4.1)\n#&gt;  purrr       * 1.0.2   2023-08-10 [1] CRAN (R 4.4.1)\n#&gt;  R6            2.5.1   2021-08-19 [1] CRAN (R 4.4.1)\n#&gt;  Rcpp          1.0.12  2024-01-09 [1] CRAN (R 4.4.1)\n#&gt;  readr       * 2.1.5   2024-01-10 [1] CRAN (R 4.4.1)\n#&gt;  readxl      * 1.4.3   2023-07-06 [1] CRAN (R 4.4.1)\n#&gt;  remotes       2.5.0   2024-03-17 [1] CRAN (R 4.4.1)\n#&gt;  rlang         1.1.4   2024-06-04 [1] CRAN (R 4.4.1)\n#&gt;  rmarkdown     2.27    2024-05-17 [1] CRAN (R 4.4.1)\n#&gt;  rstudioapi    0.16.0  2024-03-24 [1] CRAN (R 4.4.1)\n#&gt;  scales        1.3.0   2023-11-28 [1] CRAN (R 4.4.1)\n#&gt;  sessioninfo   1.2.2   2021-12-06 [1] CRAN (R 4.4.1)\n#&gt;  shiny         1.8.1.1 2024-04-02 [1] CRAN (R 4.4.1)\n#&gt;  showtext    * 0.9-7   2024-03-02 [1] CRAN (R 4.4.1)\n#&gt;  showtextdb  * 3.0     2020-06-04 [1] CRAN (R 4.4.1)\n#&gt;  stringi       1.8.4   2024-05-06 [1] CRAN (R 4.4.0)\n#&gt;  stringr     * 1.5.1   2023-11-14 [1] CRAN (R 4.4.1)\n#&gt;  sysfonts    * 0.8.9   2024-03-02 [1] CRAN (R 4.4.1)\n#&gt;  tibble      * 3.2.1   2023-03-20 [1] CRAN (R 4.4.1)\n#&gt;  tidyr       * 1.3.1   2024-01-24 [1] CRAN (R 4.4.1)\n#&gt;  tidyselect    1.2.1   2024-03-11 [1] CRAN (R 4.4.1)\n#&gt;  tidyverse   * 2.0.0   2023-02-22 [1] CRAN (R 4.4.1)\n#&gt;  timechange    0.3.0   2024-01-18 [1] CRAN (R 4.4.1)\n#&gt;  tzdb          0.4.0   2023-05-12 [1] CRAN (R 4.4.1)\n#&gt;  urlchecker    1.0.1   2021-11-30 [1] CRAN (R 4.4.1)\n#&gt;  usethis       2.2.3   2024-02-19 [1] CRAN (R 4.4.1)\n#&gt;  utf8          1.2.4   2023-10-22 [1] CRAN (R 4.4.1)\n#&gt;  vctrs         0.6.5   2023-12-01 [1] CRAN (R 4.4.1)\n#&gt;  withr         3.0.0   2024-01-16 [1] CRAN (R 4.4.1)\n#&gt;  writexl     * 1.5.0   2024-02-09 [1] CRAN (R 4.4.1)\n#&gt;  xfun          0.45    2024-06-16 [1] CRAN (R 4.4.1)\n#&gt;  xtable        1.8-4   2019-04-21 [1] CRAN (R 4.4.1)\n#&gt; \n#&gt;  [1] D:/R-4.4.1/library\n#&gt; \n#&gt; ──────────────────────────────────────────────────────────────────────────────",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "useful_function.html#文件操作",
    "href": "useful_function.html#文件操作",
    "title": "\n3  实用函数\n",
    "section": "\n3.3 文件操作",
    "text": "3.3 文件操作\n\nShow the codefile.create(\"create.R\")\n#&gt; [1] TRUE\nfile.remove(\"create.R\")\n#&gt; [1] TRUE\nsystem.file(\"data\",package = \"MatrixEQTL\")\n#&gt; [1] \"D:/R-4.4.1/library/MatrixEQTL/data\"\n\nfile.path(system.file(\"data\",package = \"MatrixEQTL\"),\"exprsData.txt\")\n#&gt; [1] \"D:/R-4.4.1/library/MatrixEQTL/data/exprsData.txt\"\n\nlist.files(path = \"data/\",pattern = \"\\\\.xlsx$\", full.names = TRUE, recursive =T)\n#&gt; [1] \"data/deaths.xlsx\"       \"data/deathsA5_F15.xlsx\" \"data/example.xlsx\"     \n#&gt; [4] \"data/penguins.xlsx\"     \"data/students.xlsx\"",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "useful_function.html#索引",
    "href": "useful_function.html#索引",
    "title": "\n3  实用函数\n",
    "section": "\n3.4 索引",
    "text": "3.4 索引\n\nShow the code1:length(mtcars$mpg)\n#&gt;  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n#&gt; [26] 26 27 28 29 30 31 32\nseq_along(mtcars$mpg)\n#&gt;  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n#&gt; [26] 26 27 28 29 30 31 32\n\nx &lt;- c(1,3,6,4,0,7)\n# 返回值为TRUE的索引\nwhich(x&gt;2)\n#&gt; [1] 2 3 4 6\nwhich.max(x)\n#&gt; [1] 6\nwhich.min(x)\n#&gt; [1] 5\n\n# 返回值\nx[x&gt;2]\n#&gt; [1] 3 6 4 7\nx[which(x&gt;2)]\n#&gt; [1] 3 6 4 7\n\n# 包含\n# match(x, table, nomatch = NA_integer_, incomparables = NULL)\n# x %in% table\n1:10 %in% c(1,3,5,9)\n#&gt;  [1]  TRUE FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE FALSE\n\nmatch(1:10, c(1,3,5,9))\n#&gt;  [1]  1 NA  2 NA  3 NA NA NA  4 NA\n\nall(colnames(mpg)==colnames(mpg))\n#&gt; [1] TRUE\nany(colnames(mpg)==colnames(mtcars))\n#&gt; [1] FALSE\n\n\nx &lt;- c(9:20, 1:5, 3:7, 0:8)\nduplicated(x)\n#&gt;  [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n#&gt; [13] FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE\n#&gt; [25]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE\n\nxu &lt;- x[!duplicated(x)]\nxu\n#&gt;  [1]  9 10 11 12 13 14 15 16 17 18 19 20  1  2  3  4  5  6  7  0  8",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "useful_function.html#子集运算",
    "href": "useful_function.html#子集运算",
    "title": "\n3  实用函数\n",
    "section": "\n3.5 子集运算",
    "text": "3.5 子集运算\n[，$，[[\nS4 对象： @ slot\n\n3.5.1 [ ]\n\n\nShow the codex &lt;- c(2.1, 4.2, 3.3, 5.4)\n\nx[c(3, 1)]\n#&gt; [1] 3.3 2.1\n\nx[-c(3, 1)]\n#&gt; [1] 4.2 5.4\n\nx[c(TRUE, TRUE, FALSE, FALSE)]\n#&gt; [1] 2.1 4.2\nx[x &gt; 3]\n#&gt; [1] 4.2 3.3 5.4\n\nx[c(TRUE, FALSE)] # recycling rules 循环\n#&gt; [1] 2.1 3.3\n\nx[]\n#&gt; [1] 2.1 4.2 3.3 5.4\n\nx[0]\n#&gt; numeric(0)\n\n\n\n3.5.2 $, [[ ]]\n\n$是一个简写运算符, x$y大致相当于 x[[\"y\"]] ,从左到右部分匹配\n\nShow the codex &lt;- list(abc = 1)\nx$a\n#&gt; [1] 1\n\nx[[\"a\"]]\n#&gt; NULL\n\noptions(warnPartialMatchDollar = TRUE)\nx$a\n#&gt; [1] 1",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "useful_function.html#生成数值序列",
    "href": "useful_function.html#生成数值序列",
    "title": "\n3  实用函数\n",
    "section": "\n3.6 生成数值序列",
    "text": "3.6 生成数值序列\n\nShow the codeseq(from=1,to=30,by=3)  # 生成一个序列\n#&gt;  [1]  1  4  7 10 13 16 19 22 25 28\nseq(from=1,to=30,length=10) \n#&gt;  [1]  1.000000  4.222222  7.444444 10.666667 13.888889 17.111111 20.333333\n#&gt;  [8] 23.555556 26.777778 30.000000\n\nsequence(30,by=3)\n#&gt;  [1]  1  4  7 10 13 16 19 22 25 28 31 34 37 40 43 46 49 52 55 58 61 64 67 70 73\n#&gt; [26] 76 79 82 85 88\n\n\nrep(x = c(\"A\",1,\"B\",2),times = 3)           #重复序列\n#&gt;  [1] \"A\" \"1\" \"B\" \"2\" \"A\" \"1\" \"B\" \"2\" \"A\" \"1\" \"B\" \"2\"\nrep(x = c(\"A\",1,\"B\",2),times = c(1,2,3,4))\n#&gt;  [1] \"A\" \"1\" \"1\" \"B\" \"B\" \"B\" \"2\" \"2\" \"2\" \"2\"\nrep(x = c(\"A\",1,\"B\",2),each = 3,times = 2)\n#&gt;  [1] \"A\" \"A\" \"A\" \"1\" \"1\" \"1\" \"B\" \"B\" \"B\" \"2\" \"2\" \"2\" \"A\" \"A\" \"A\" \"1\" \"1\" \"1\" \"B\"\n#&gt; [20] \"B\" \"B\" \"2\" \"2\" \"2\"",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "useful_function.html#排序",
    "href": "useful_function.html#排序",
    "title": "\n3  实用函数\n",
    "section": "\n3.7 排序",
    "text": "3.7 排序\n\nShow the codex &lt;- c(\"b\", \"c\", \"a\")\norder(x)\n#&gt; [1] 3 1 2\nx[order(x)]\n#&gt; [1] \"a\" \"b\" \"c\"\n\n\n\nShow the codesort()\ndplyr::arrange()\n\n# 分配秩次\nrank()",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "useful_function.html#asis-i",
    "href": "useful_function.html#asis-i",
    "title": "\n3  实用函数\n",
    "section": "\n3.8 AsIs I()",
    "text": "3.8 AsIs I()\nI()函数来自于stats包，它是as.is函数的别名。I()函数用于改变对象的类别，指示R在进行操作时应该将该对象视为其原始形式，不对它进行任何转换。\n\nShow the code\nsummary(mtcars$mpg) |&gt; as_tibble()\n#&gt; Error in dimnames(x) &lt;- dnx: 'dimnames' applied to non-array\n\nlapply(summary(mtcars$mpg), I) \n#&gt; $Min.\n#&gt; [1] 10.4\n#&gt; \n#&gt; $`1st Qu.`\n#&gt; [1] 15.425\n#&gt; \n#&gt; $Median\n#&gt; [1] 19.2\n#&gt; \n#&gt; $Mean\n#&gt; [1] 20.09062\n#&gt; \n#&gt; $`3rd Qu.`\n#&gt; [1] 22.8\n#&gt; \n#&gt; $Max.\n#&gt; [1] 33.9\nlapply(summary(mtcars$mpg), I) |&gt; as_tibble()\n\n\n\n\nMin.\n1st Qu.\nMedian\nMean\n3rd Qu.\nMax.\n\n\n10.4\n15.425\n19.2\n20.090625\n22.8\n33.9\n\n\n\n\nShow the code\nsapply(summary(mtcars$mpg), I, simplify = F) \n#&gt; $Min.\n#&gt; [1] 10.4\n#&gt; \n#&gt; $`1st Qu.`\n#&gt; [1] 15.425\n#&gt; \n#&gt; $Median\n#&gt; [1] 19.2\n#&gt; \n#&gt; $Mean\n#&gt; [1] 20.09062\n#&gt; \n#&gt; $`3rd Qu.`\n#&gt; [1] 22.8\n#&gt; \n#&gt; $Max.\n#&gt; [1] 33.9\nsapply(summary(mtcars$mpg), I, simplify = F) |&gt; as_tibble()\n\n\n\n\nMin.\n1st Qu.\nMedian\nMean\n3rd Qu.\nMax.\n\n\n10.4\n15.425\n19.2\n20.090625\n22.8\n33.9",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "useful_function.html#数学函数",
    "href": "useful_function.html#数学函数",
    "title": "\n3  实用函数\n",
    "section": "\n3.9 数学函数",
    "text": "3.9 数学函数\n\nShow the codex&lt;-c(25,-4,3.66,3.42,-5.99)\nabs(x)                       #绝对值\n#&gt; [1] 25.00  4.00  3.66  3.42  5.99\nsqrt(x)                      #平方根\n#&gt; [1] 5.000000      NaN 1.913113 1.849324      NaN\nceiling(x)                   #向上取整\n#&gt; [1] 25 -4  4  4 -5\nfloor(x)                     #向下取整\n#&gt; [1] 25 -4  3  3 -6\ntrunc(x)                     #整数部分\n#&gt; [1] 25 -4  3  3 -5\nround(x,digits = 2)          #四舍五入，保留2位小数\n#&gt; [1] 25.00 -4.00  3.66  3.42 -5.99\nsignif(x,digits = 2)         #四舍五入，保留2有效数字\n#&gt; [1] 25.0 -4.0  3.7  3.4 -6.0\nlog(x,base=4)                #对x取以base为底的对数\n#&gt; [1] 2.3219281       NaN 0.9359218 0.8869982       NaN\nlog(x)                          #自然对数\n#&gt; [1] 3.218876      NaN 1.297463 1.229641      NaN\nlog10(x)                        #常用对数\n#&gt; [1] 1.3979400       NaN 0.5634811 0.5340261       NaN\nexp(x)                       #e指数函数\n#&gt; [1] 7.200490e+10 1.831564e-02 3.886134e+01 3.056942e+01 2.503664e-03",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "useful_function.html#统计函数",
    "href": "useful_function.html#统计函数",
    "title": "\n3  实用函数\n",
    "section": "\n3.10 统计函数",
    "text": "3.10 统计函数\n\nShow the codemean(x,trim = 0.05,na.rm = TRUE)     #算术平均值\n#&gt; [1] 4.418\nmedian(x)                            #中位数\n#&gt; [1] 3.42\nsd(x)                                #标准差\n#&gt; [1] 12.29206\nvar(x)                               #方差\n#&gt; [1] 151.0946\nmad(x)                               #绝对中位差\n#&gt; [1] 11.00089\nquantile(x,probs = c(0,0.25,0.5,0.75,1))     #分位数\n#&gt;    0%   25%   50%   75%  100% \n#&gt; -5.99 -4.00  3.42  3.66 25.00\nrange(x)                             # 值域\n#&gt; [1] -5.99 25.00\nscale(x,center = TRUE,scale = TRUE)  #标准化（均值为0、标准差为1）\n#&gt;             [,1]\n#&gt; [1,]  1.67441487\n#&gt; [2,] -0.68483259\n#&gt; [3,] -0.06166585\n#&gt; [4,] -0.08119065\n#&gt; [5,] -0.84672578\n#&gt; attr(,\"scaled:center\")\n#&gt; [1] 4.418\n#&gt; attr(,\"scaled:scale\")\n#&gt; [1] 12.29206\nscale(x,center = TRUE,scale =FALSE)  #中心化：减去均值\n#&gt;         [,1]\n#&gt; [1,]  20.582\n#&gt; [2,]  -8.418\n#&gt; [3,]  -0.758\n#&gt; [4,]  -0.998\n#&gt; [5,] -10.408\n#&gt; attr(,\"scaled:center\")\n#&gt; [1] 4.418\n\n\nx &lt;- c(1,3,5,7,9,11,13)\n# Find the \"previous\" (lag()) or \"next\" (lead()) values in a vector\ndplyr::lag(x,n=2)                      # n阶滞后\n#&gt; [1] NA NA  1  3  5  7  9\ndplyr::lead(x,n=2)                     # n阶前移\n#&gt; [1]  5  7  9 11 13 NA NA\n\n# 滞后差分  lag阶滞后  difference阶差分\ndiff(x,lag = 1,difference=1)     # 隔0个值后位减前位，进行1次\n#&gt; [1] 2 2 2 2 2 2\ndiff(x,lag = 1,difference=2)     ## 隔0个值后位减前位，进行2次\n#&gt; [1] 0 0 0 0 0\ndiff(x,lag = 1,difference=3)     # 隔0个值后位减前位，进行3次\n#&gt; [1] 0 0 0 0\n\ndiff(x,lag = 2,difference=1)  # 隔1个值后位减前位，进行1次\n#&gt; [1] 4 4 4 4 4\ndiff(x,lag = 2,difference=2) ## 隔1个值后位减前位，进行2次\n#&gt; [1] 0 0 0",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "useful_function.html#字符串函数",
    "href": "useful_function.html#字符串函数",
    "title": "\n3  实用函数\n",
    "section": "\n3.11 字符串函数",
    "text": "3.11 字符串函数\n\nShow the code\n# 匹配\ndata &lt;- data.frame(\n  name = c(\"Alice\", \"Bob\", \"Carol\", \"Dave\", \"Eve\"),\n  description = c(\"Software developer\", \"Data analyst\", \"UX designer\", \"Project manager\", \"Data scientist\")\n)\ndata\n\n\n\n\nname\ndescription\n\n\n\nAlice\nSoftware developer\n\n\nBob\nData analyst\n\n\nCarol\nUX designer\n\n\nDave\nProject manager\n\n\nEve\nData scientist\n\n\n\n\n\nShow the code\ndata$has_data_analyst &lt;- str_detect(data$description, \"Data analyst\")\nprint(data)\n#&gt;    name        description has_data_analyst\n#&gt; 1 Alice Software developer            FALSE\n#&gt; 2   Bob       Data analyst             TRUE\n#&gt; 3 Carol        UX designer            FALSE\n#&gt; 4  Dave    Project manager            FALSE\n#&gt; 5   Eve     Data scientist            FALSE\n\ndata$has_data_grepl &lt;- grepl(\"Data\", data$description)\nprint(data)\n#&gt;    name        description has_data_analyst has_data_grepl\n#&gt; 1 Alice Software developer            FALSE          FALSE\n#&gt; 2   Bob       Data analyst             TRUE           TRUE\n#&gt; 3 Carol        UX designer            FALSE          FALSE\n#&gt; 4  Dave    Project manager            FALSE          FALSE\n#&gt; 5   Eve     Data scientist            FALSE           TRUE\n\n\n\nShow the code#子串\nsubstr(x=\"qwertyyuio\",start = 2,stop=4)   \n#&gt; [1] \"wer\"\nstr_sub(string = \"qwertyyuio\",start = 2,end = 4)\n#&gt; [1] \"wer\"\n#查找替换\nsub(pattern = \" \",replacement = \".\",\n    x=\"hello world hello !\",ignore.case = FALSE,fixed = FALSE)  \n#&gt; [1] \"hello.world hello !\"\n\nstr_replace_all(\"hello world hello !\",\" \",replacement = \".\")\n#&gt; [1] \"hello.world.hello.!\"\n# 查找,返回下标\ngrep(pattern = \"v\",x=c(\"a\",\"v\",\"D\",\"A\",\"f\",\"J\"),ignore.case = FALSE,fixed = FALSE)   \n#&gt; [1] 2\n\n # 分隔，\\\\转义字符\nstrsplit(x=\"a.fa.fag\",split = \"\\\\.\",fixed = FALSE) \n#&gt; [[1]]\n#&gt; [1] \"a\"   \"fa\"  \"fag\"\n\n\n#连接\npaste(\"x\",c(\"a\",\"b\"),sep=\"\",collapse = \"?\")  \n#&gt; [1] \"xa?xb\"\npaste0(\"x\",c(\"A\",\"B\"),collapse=\"?\")\n#&gt; [1] \"xA?xB\"\n\ncat(\"hello\",\"BOb\",\"\\b\\n\",\"\\bIsn\\' R\",\"\\t\",\"GREAT?\\n\",sep = \" \" )\n#&gt; hello BOb \n#&gt;  Isn' R      GREAT?\n\n#\ntoupper(\"abc\")              #大写转换\n#&gt; [1] \"ABC\"\ntolower(\"aaAGEErg\")         #小写转换\n#&gt; [1] \"aaageerg\"",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "useful_function.html#打印函数-sprintf",
    "href": "useful_function.html#打印函数-sprintf",
    "title": "\n3  实用函数\n",
    "section": "\n3.12 打印函数 sprintf()\n",
    "text": "3.12 打印函数 sprintf()\n\n\nShow the codea &lt;- \"string\"\nsprintf(\"This is where a %s goes.\", a)\n#&gt; [1] \"This is where a string goes.\"\n\nx &lt;- 8\nsprintf(\"Regular:%04d\", x)\n#&gt; [1] \"Regular:0008\"\n\nsprintf(\"%f\", pi)         # \"3.141593\"\n#&gt; [1] \"3.141593\"\nsprintf(\"%.3f\", pi)       # \"3.142\"\n#&gt; [1] \"3.142\"\nsprintf(\"%1.0f\", pi)      # \"3\"\n#&gt; [1] \"3\"\nsprintf(\"%5.1f\", pi)      # \"  3.1\"\n#&gt; [1] \"  3.1\"\nsprintf(\"%05.1f\", pi)     # \"003.1\"\n#&gt; [1] \"003.1\"\nsprintf(\"%+f\", pi)        # \"+3.141593\"\n#&gt; [1] \"+3.141593\"\nsprintf(\"% f\", pi)        # \" 3.141593\"\n#&gt; [1] \" 3.141593\"\nsprintf(\"%-10f\", pi)      # \"3.141593  \"   (left justified)\n#&gt; [1] \"3.141593  \"\nsprintf(\"%e\", pi)         #\"3.141593e+00\"\n#&gt; [1] \"3.141593e+00\"\nsprintf(\"%E\", pi)         # \"3.141593E+00\"\n#&gt; [1] \"3.141593E+00\"\nsprintf(\"%g\", pi)         # \"3.14159\"\n#&gt; [1] \"3.14159\"\nsprintf(\"%g\",   1e6 * pi) # \"3.14159e+06\"  (exponential)\n#&gt; [1] \"3.14159e+06\"\nsprintf(\"%.9g\", 1e6 * pi) # \"3141592.65\"   (\"fixed\")\n#&gt; [1] \"3141592.65\"\nsprintf(\"%G\", 1e-6 * pi)  # \"3.14159E-06\"\n#&gt; [1] \"3.14159E-06\"\n\n\nx &lt;- \"string\"\nsprintf(\"Substitute in multiple strings: %s %s\", x, \"string2\")\n#&gt; [1] \"Substitute in multiple strings: string string2\"\n\nsprintf(\"A single percent sign here： %%\")\n#&gt; [1] \"A single percent sign here： %\"",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "useful_function.html#apply函数簇",
    "href": "useful_function.html#apply函数簇",
    "title": "\n3  实用函数\n",
    "section": "\n3.13 apply函数簇",
    "text": "3.13 apply函数簇\n\n3.13.1 apply()\n\n\nShow the codeapply(X = mtcars, MARGIN = 2, FUN = mean)\n#&gt;        mpg        cyl       disp         hp       drat         wt       qsec \n#&gt;  20.090625   6.187500 230.721875 146.687500   3.596563   3.217250  17.848750 \n#&gt;         vs         am       gear       carb \n#&gt;   0.437500   0.406250   3.687500   2.812500\n\n\n\n3.13.2 aggregate()\n\n\nShow the codeaggregate(x = mtcars,\n          by = list(am=mtcars$am,cyl=mtcars$cyl),\n          FUN = mean)  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nam\ncyl\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n0\n4\n22.90000\n4\n135.8667\n84.66667\n3.770000\n2.935000\n20.97000\n1.000\n0\n3.666667\n1.666667\n\n\n1\n4\n28.07500\n4\n93.6125\n81.87500\n4.183750\n2.042250\n18.45000\n0.875\n1\n4.250000\n1.500000\n\n\n0\n6\n19.12500\n6\n204.5500\n115.25000\n3.420000\n3.388750\n19.21500\n1.000\n0\n3.500000\n2.500000\n\n\n1\n6\n20.56667\n6\n155.0000\n131.66667\n3.806667\n2.755000\n16.32667\n0.000\n1\n4.333333\n4.666667\n\n\n0\n8\n15.05000\n8\n357.6167\n194.16667\n3.120833\n4.104083\n17.14250\n0.000\n0\n3.000000\n3.083333\n\n\n1\n8\n15.40000\n8\n326.0000\n299.50000\n3.880000\n3.370000\n14.55000\n0.000\n1\n5.000000\n6.000000\n\n\n\n\n\nShow the codeaggregate(.~am+cyl,\n          data = mtcars,\n          FUN = mean)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nam\ncyl\nmpg\ndisp\nhp\ndrat\nwt\nqsec\nvs\ngear\ncarb\n\n\n\n0\n4\n22.90000\n135.8667\n84.66667\n3.770000\n2.935000\n20.97000\n1.000\n3.666667\n1.666667\n\n\n1\n4\n28.07500\n93.6125\n81.87500\n4.183750\n2.042250\n18.45000\n0.875\n4.250000\n1.500000\n\n\n0\n6\n19.12500\n204.5500\n115.25000\n3.420000\n3.388750\n19.21500\n1.000\n3.500000\n2.500000\n\n\n1\n6\n20.56667\n155.0000\n131.66667\n3.806667\n2.755000\n16.32667\n0.000\n4.333333\n4.666667\n\n\n0\n8\n15.05000\n357.6167\n194.16667\n3.120833\n4.104083\n17.14250\n0.000\n3.000000\n3.083333\n\n\n1\n8\n15.40000\n326.0000\n299.50000\n3.880000\n3.370000\n14.55000\n0.000\n5.000000\n6.000000\n\n\n\n\n\nShow the codeaggregate(mpg~am+cyl,\n          data = mtcars,\n          FUN = summary)\n\n\n\n\nam\ncyl\nmpg\n\n\n\n0\n4\n21.50000\n\n\n1\n4\n21.40000\n\n\n0\n6\n17.80000\n\n\n1\n6\n19.70000\n\n\n0\n8\n10.40000\n\n\n1\n8\n15.00000\n\n\n\n\n\n\n\n3.13.3 by(), tapply()\n\nby()是应用于数据框的tapply的面向对象包装器。\n\nShow the codeby(data = mtcars[,1:3],\n   INDICES = list(cyl=mtcars$cyl),\n   FUN = summary)\n#&gt; cyl: 4\n#&gt;       mpg             cyl         disp       \n#&gt;  Min.   :21.40   Min.   :4   Min.   : 71.10  \n#&gt;  1st Qu.:22.80   1st Qu.:4   1st Qu.: 78.85  \n#&gt;  Median :26.00   Median :4   Median :108.00  \n#&gt;  Mean   :26.66   Mean   :4   Mean   :105.14  \n#&gt;  3rd Qu.:30.40   3rd Qu.:4   3rd Qu.:120.65  \n#&gt;  Max.   :33.90   Max.   :4   Max.   :146.70  \n#&gt; ------------------------------------------------------------ \n#&gt; cyl: 6\n#&gt;       mpg             cyl         disp      \n#&gt;  Min.   :17.80   Min.   :6   Min.   :145.0  \n#&gt;  1st Qu.:18.65   1st Qu.:6   1st Qu.:160.0  \n#&gt;  Median :19.70   Median :6   Median :167.6  \n#&gt;  Mean   :19.74   Mean   :6   Mean   :183.3  \n#&gt;  3rd Qu.:21.00   3rd Qu.:6   3rd Qu.:196.3  \n#&gt;  Max.   :21.40   Max.   :6   Max.   :258.0  \n#&gt; ------------------------------------------------------------ \n#&gt; cyl: 8\n#&gt;       mpg             cyl         disp      \n#&gt;  Min.   :10.40   Min.   :8   Min.   :275.8  \n#&gt;  1st Qu.:14.40   1st Qu.:8   1st Qu.:301.8  \n#&gt;  Median :15.20   Median :8   Median :350.5  \n#&gt;  Mean   :15.10   Mean   :8   Mean   :353.1  \n#&gt;  3rd Qu.:16.25   3rd Qu.:8   3rd Qu.:390.0  \n#&gt;  Max.   :19.20   Max.   :8   Max.   :472.0\n\nby(data = mtcars[,1:3],\n   INDICES = factor(mtcars$cyl),\n   FUN = function(x) lm( disp ~ mpg, data = x))\n#&gt; factor(mtcars$cyl): 4\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = disp ~ mpg, data = x)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)          mpg  \n#&gt;     233.067       -4.798  \n#&gt; \n#&gt; ------------------------------------------------------------ \n#&gt; factor(mtcars$cyl): 6\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = disp ~ mpg, data = x)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)          mpg  \n#&gt;     125.122        2.947  \n#&gt; \n#&gt; ------------------------------------------------------------ \n#&gt; factor(mtcars$cyl): 8\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = disp ~ mpg, data = x)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)          mpg  \n#&gt;      560.87       -13.76\n\ntapply(X = mtcars[,1:3],\n       INDEX = list(cyl=mtcars$cyl),\n       FUN = summary)\n#&gt; $`4`\n#&gt;       mpg             cyl         disp       \n#&gt;  Min.   :21.40   Min.   :4   Min.   : 71.10  \n#&gt;  1st Qu.:22.80   1st Qu.:4   1st Qu.: 78.85  \n#&gt;  Median :26.00   Median :4   Median :108.00  \n#&gt;  Mean   :26.66   Mean   :4   Mean   :105.14  \n#&gt;  3rd Qu.:30.40   3rd Qu.:4   3rd Qu.:120.65  \n#&gt;  Max.   :33.90   Max.   :4   Max.   :146.70  \n#&gt; \n#&gt; $`6`\n#&gt;       mpg             cyl         disp      \n#&gt;  Min.   :17.80   Min.   :6   Min.   :145.0  \n#&gt;  1st Qu.:18.65   1st Qu.:6   1st Qu.:160.0  \n#&gt;  Median :19.70   Median :6   Median :167.6  \n#&gt;  Mean   :19.74   Mean   :6   Mean   :183.3  \n#&gt;  3rd Qu.:21.00   3rd Qu.:6   3rd Qu.:196.3  \n#&gt;  Max.   :21.40   Max.   :6   Max.   :258.0  \n#&gt; \n#&gt; $`8`\n#&gt;       mpg             cyl         disp      \n#&gt;  Min.   :10.40   Min.   :8   Min.   :275.8  \n#&gt;  1st Qu.:14.40   1st Qu.:8   1st Qu.:301.8  \n#&gt;  Median :15.20   Median :8   Median :350.5  \n#&gt;  Mean   :15.10   Mean   :8   Mean   :353.1  \n#&gt;  3rd Qu.:16.25   3rd Qu.:8   3rd Qu.:390.0  \n#&gt;  Max.   :19.20   Max.   :8   Max.   :472.0\n\n\n\n3.13.4 lapply(), sapply()\n\nlapply() returns a list of the same length as X,\nsapply() is a user-friendly version and wrapper of lapply() by default returning a vector or matrix\n\nShow the codex &lt;- list(a = 1:10, beta = exp(-3:3), logic = c(TRUE,FALSE,FALSE,TRUE))\nlapply(X = x,FUN = quantile)\n#&gt; $a\n#&gt;    0%   25%   50%   75%  100% \n#&gt;  1.00  3.25  5.50  7.75 10.00 \n#&gt; \n#&gt; $beta\n#&gt;          0%         25%         50%         75%        100% \n#&gt;  0.04978707  0.25160736  1.00000000  5.05366896 20.08553692 \n#&gt; \n#&gt; $logic\n#&gt;   0%  25%  50%  75% 100% \n#&gt;  0.0  0.0  0.5  1.0  1.0\n\nsapply(x, quantile)\n#&gt;          a        beta logic\n#&gt; 0%    1.00  0.04978707   0.0\n#&gt; 25%   3.25  0.25160736   0.0\n#&gt; 50%   5.50  1.00000000   0.5\n#&gt; 75%   7.75  5.05366896   1.0\n#&gt; 100% 10.00 20.08553692   1.0\n\n\n\n3.13.5 vapply\n\n\nShow the codeby_cyl &lt;- split(mtcars, mtcars$cyl)\nmodels &lt;- lapply(by_cyl, function(data) lm(mpg ~ wt, data = data))\nmodels\n#&gt; $`4`\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = mpg ~ wt, data = data)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)           wt  \n#&gt;      39.571       -5.647  \n#&gt; \n#&gt; \n#&gt; $`6`\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = mpg ~ wt, data = data)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)           wt  \n#&gt;       28.41        -2.78  \n#&gt; \n#&gt; \n#&gt; $`8`\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = mpg ~ wt, data = data)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)           wt  \n#&gt;      23.868       -2.192\nvapply(models, function(x) coef(x)[[2]], double(1))\n#&gt;         4         6         8 \n#&gt; -5.647025 -2.780106 -2.192438",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "useful_function.html#矩阵运算",
    "href": "useful_function.html#矩阵运算",
    "title": "\n3  实用函数\n",
    "section": "\n3.14 矩阵运算",
    "text": "3.14 矩阵运算\n\nShow the codeX &lt;- matrix(data = 1:9,ncol = 3,nrow = 3)\nX\n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]    1    4    7\n#&gt; [2,]    2    5    8\n#&gt; [3,]    3    6    9\n\ndiag(X)\n#&gt; [1] 1 5 9\ndet(X)\n#&gt; [1] 0\neigen(X)\n#&gt; eigen() decomposition\n#&gt; $values\n#&gt; [1]  1.611684e+01 -1.116844e+00 -5.700691e-16\n#&gt; \n#&gt; $vectors\n#&gt;            [,1]       [,2]       [,3]\n#&gt; [1,] -0.4645473 -0.8829060  0.4082483\n#&gt; [2,] -0.5707955 -0.2395204 -0.8164966\n#&gt; [3,] -0.6770438  0.4038651  0.4082483\n\nX\n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]    1    4    7\n#&gt; [2,]    2    5    8\n#&gt; [3,]    3    6    9\n# 协方差矩阵\ncov(X)\n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]    1    1    1\n#&gt; [2,]    1    1    1\n#&gt; [3,]    1    1    1\n\n# 相关系数矩阵\ncor(X)\n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]    1    1    1\n#&gt; [2,]    1    1    1\n#&gt; [3,]    1    1    1",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "useful_function.html#统计分布函数",
    "href": "useful_function.html#统计分布函数",
    "title": "\n3  实用函数\n",
    "section": "\n3.15 统计分布函数",
    "text": "3.15 统计分布函数\n形如[dpqr]distribution_abbreviation，其中密度函数d，分布函数p，分位数函数q，随机数生成函数r\n\nShow the code### 正态分布\ndnorm(3,0,2)  #N(0,4)在 3 处的密度值\n#&gt; [1] 0.0647588\npnorm(1:3,0,2)#N(0,4)在1，2，3处的分布概率值\n#&gt; [1] 0.6914625 0.8413447 0.9331928\nqnorm(1-0.025,0,1)# N(0,1)的上0.025分位数\n#&gt; [1] 1.959964\nrnorm(5,3,3)  # 生成5个服从N(3,9)的随机数\n#&gt; [1] -1.8448051 -1.4085171  8.3801820  0.7243782 -0.3447853\n\n\n### 二项分布\n1-sum(dbinom(0:1,400,0.02))# 命中率为0.02，独立射击400次，至少击中2次的概率\n#&gt; [1] 0.9971655\nggplot()\n\n\n\n\n\n\nShow the code\n\n\n### 多元正态分布\nmean&lt;-c(230.7,146.7,3.6)\nsigma&lt;-matrix(c(15360.8,6721.2,-47.1,\n                6721.2,4700.9,-16.5,\n                -47.1,16.5,0.3),nrow = 3,ncol = 3)\nlibrary(MASS)\nmulti &lt;- mvrnorm(500,mean,sigma)\nhead(multi)\n#&gt;           [,1]     [,2]     [,3]\n#&gt; [1,] 269.74014 213.5011 3.385236\n#&gt; [2,] 194.57474 111.4398 3.907742\n#&gt; [3,] 312.78478 194.8270 3.412123\n#&gt; [4,]  84.85801 120.0852 4.463349\n#&gt; [5,] 206.64354 157.2725 3.544710\n#&gt; [6,] 142.50429 159.3249 3.828885",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "logical_vector.html",
    "href": "logical_vector.html",
    "title": "\n4  逻辑向量\n",
    "section": "",
    "text": "4.1 逻辑比较",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>逻辑向量</span>"
    ]
  },
  {
    "objectID": "logical_vector.html#逻辑比较",
    "href": "logical_vector.html#逻辑比较",
    "title": "\n4  逻辑向量\n",
    "section": "",
    "text": "4.1.1 浮点比较\n\nShow the codex &lt;- c(1 / 49 * 49, sqrt(2) ^ 2)\nx\n#&gt; [1] 1 2\nx == c(1, 2)\n#&gt; [1] FALSE FALSE\nprint(x, digits = 16)\n#&gt; [1] 0.9999999999999999 2.0000000000000004\nnear(x, c(1, 2))\n#&gt; [1] TRUE TRUE\n\n\n\n4.1.2 缺失值\n\nShow the code# “contagious”\nNA == NA\n#&gt; [1] NA\nis.na(c(TRUE, NA, FALSE))\n#&gt; [1] FALSE  TRUE FALSE",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>逻辑向量</span>"
    ]
  },
  {
    "objectID": "logical_vector.html#布尔代数",
    "href": "logical_vector.html#布尔代数",
    "title": "\n4  逻辑向量\n",
    "section": "\n4.2 布尔代数",
    "text": "4.2 布尔代数\n\n\n\n\n\nShow the code(x1 &lt;- 1:10 %% 2 == 0)\n#&gt;  [1] FALSE  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE\n(y1 &lt;- 1:10 %% 5 == 0)\n#&gt;  [1] FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE\n\n(x2 &lt;- which(x1))\n#&gt; [1]  2  4  6  8 10\n(y2 &lt;- which(y1))\n#&gt; [1]  5 10\n# 交集\nx1 & y1\n#&gt;  [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE\nbase::intersect(x2, y2)\n#&gt; [1] 10\n\n# 并集\nx1 | y1\n#&gt;  [1] FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE\nbase::union(x2,y2)\n#&gt; [1]  2  4  6  8 10  5\n\n# 差集\nx1 & !y1\n#&gt;  [1] FALSE  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE FALSE FALSE\nbase::setdiff(x2, y2)\n#&gt; [1] 2 4 6 8\n\n# 只有一个为真\nxor(x1, y1)\n#&gt;  [1] FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE\nbase::setdiff(base::union(x2, y2), base::intersect(x2, y2))\n#&gt; [1] 2 4 6 8 5\n\n\n\n4.2.1 缺失值\n\nShow the codedf &lt;- tibble(x = c(TRUE, FALSE, NA))\n\ndf |&gt; \n  mutate(\n    and = x & NA,  #  A & B   A为TRUE，返回B ；A为FALSE,返回A\n    or = x | NA    #  A | B   A为TRUE，返回A ；A为FALSE,返回B\n  )\n\n\n\n\nx\nand\nor\n\n\n\nTRUE\nNA\nTRUE\n\n\nFALSE\nFALSE\nNA\n\n\nNA\nNA\nNA",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>逻辑向量</span>"
    ]
  },
  {
    "objectID": "logical_vector.html#in",
    "href": "logical_vector.html#in",
    "title": "\n4  逻辑向量\n",
    "section": "\n4.3 %in%\n",
    "text": "4.3 %in%\n\n\nShow the code1:12 %in% c(1, 5, 11)\n#&gt;  [1]  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE\n\nc(1, 2, NA) %in% NA\n#&gt; [1] FALSE FALSE  TRUE",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>逻辑向量</span>"
    ]
  },
  {
    "objectID": "logical_vector.html#条件转换",
    "href": "logical_vector.html#条件转换",
    "title": "\n4  逻辑向量\n",
    "section": "\n4.4 条件转换",
    "text": "4.4 条件转换\n\n4.4.1 if_else()\n\n\nShow the codex &lt;- c(-3:3, NA)\n\nif_else(x &gt; 0, \"+ve\", \"-ve\", missing = \"???\")\n#&gt; [1] \"-ve\" \"-ve\" \"-ve\" \"-ve\" \"+ve\" \"+ve\" \"+ve\" \"???\"\nif_else(x == 0,\n        \"0\", \n        if_else(x &lt; 0, \"-ve\", \"+ve\"), \"???\")\n#&gt; [1] \"-ve\" \"-ve\" \"-ve\" \"0\"   \"+ve\" \"+ve\" \"+ve\" \"???\"\n\n\n\nShow the codex1 &lt;- c(NA, 1, 2, NA)\ny1 &lt;- c(3, NA, 4, 6)\nif_else(is.na(x1), y1, x1)\n#&gt; [1] 3 1 2 6\n\n\n\n4.4.2 case_when()\n\n\nShow the codex &lt;- c(-3:3, NA)\ncase_when(\n  x == 0   ~ \"0\",\n  x &lt; 0    ~ \"-ve\", \n  x &gt; 0    ~ \"+ve\",\n  is.na(x) ~ \"???\"\n)\n#&gt; [1] \"-ve\" \"-ve\" \"-ve\" \"0\"   \"+ve\" \"+ve\" \"+ve\" \"???\"",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>逻辑向量</span>"
    ]
  },
  {
    "objectID": "logical_vector.html#逻辑汇总",
    "href": "logical_vector.html#逻辑汇总",
    "title": "\n4  逻辑向量\n",
    "section": "\n4.5 逻辑汇总",
    "text": "4.5 逻辑汇总\n\nShow the codex&lt;-c(2,3,5,1,4)\nx&gt;2\n#&gt; [1] FALSE  TRUE  TRUE FALSE  TRUE\n\n# 所有\nall(x&gt;2)   \n#&gt; [1] FALSE\n\n# 存在\nany(x&gt;2)\n#&gt; [1] TRUE",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>逻辑向量</span>"
    ]
  },
  {
    "objectID": "number_vector.html",
    "href": "number_vector.html",
    "title": "\n5  数值\n",
    "section": "",
    "text": "5.1 parse_number()\nShow the codex &lt;- c(\"1.2\", \"5.6\", \"1e3\")\nparse_double(x)\n#&gt; [1]    1.2    5.6 1000.0\nparse_number(x)\n#&gt; [1]    1.2    5.6 1000.0",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>数值</span>"
    ]
  },
  {
    "objectID": "number_vector.html#count",
    "href": "number_vector.html#count",
    "title": "\n5  数值\n",
    "section": "\n5.2 count()\n",
    "text": "5.2 count()\n\n\nShow the code\n# 计数\n\nmpg |&gt; \n    count(manufacturer,sort = T)\n\n\n\n\nmanufacturer\nn\n\n\n\ndodge\n37\n\n\ntoyota\n34\n\n\nvolkswagen\n27\n\n\nford\n25\n\n\nchevrolet\n19\n\n\naudi\n18\n\n\nhyundai\n14\n\n\nsubaru\n14\n\n\nnissan\n13\n\n\nhonda\n9\n\n\njeep\n8\n\n\npontiac\n5\n\n\nland rover\n4\n\n\nmercury\n4\n\n\nlincoln\n3\n\n\n\n\n\nShow the code\n\nmpg |&gt; \n    group_by(manufacturer) |&gt; \n    summarise(\n        n=n()\n    ) |&gt; \n    arrange(desc(n))\n\n\n\n\nmanufacturer\nn\n\n\n\ndodge\n37\n\n\ntoyota\n34\n\n\nvolkswagen\n27\n\n\nford\n25\n\n\nchevrolet\n19\n\n\naudi\n18\n\n\nhyundai\n14\n\n\nsubaru\n14\n\n\nnissan\n13\n\n\nhonda\n9\n\n\njeep\n8\n\n\npontiac\n5\n\n\nland rover\n4\n\n\nmercury\n4\n\n\nlincoln\n3\n\n\n\n\n\nShow the code\n\nmpg |&gt; \n    group_by(manufacturer) |&gt; \n    summarise(\n        n=n_distinct(class)\n    ) |&gt; \n    arrange(desc(n))\n\n\n\n\nmanufacturer\nn\n\n\n\ntoyota\n4\n\n\nchevrolet\n3\n\n\ndodge\n3\n\n\nford\n3\n\n\nnissan\n3\n\n\nsubaru\n3\n\n\nvolkswagen\n3\n\n\naudi\n2\n\n\nhyundai\n2\n\n\nhonda\n1\n\n\njeep\n1\n\n\nland rover\n1\n\n\nlincoln\n1\n\n\nmercury\n1\n\n\npontiac\n1\n\n\n\n\n\nShow the code\n\n# 加权求和\n\n\nmpg |&gt; \n    count(manufacturer,wt = hwy,sort = T)\n\n\n\n\nmanufacturer\nn\n\n\n\ntoyota\n847\n\n\nvolkswagen\n789\n\n\ndodge\n664\n\n\nford\n484\n\n\naudi\n476\n\n\nchevrolet\n416\n\n\nhyundai\n376\n\n\nsubaru\n358\n\n\nnissan\n320\n\n\nhonda\n293\n\n\njeep\n141\n\n\npontiac\n132\n\n\nmercury\n72\n\n\nland rover\n66\n\n\nlincoln\n51\n\n\n\n\n\nShow the code\nmpg |&gt; \n    group_by(manufacturer) |&gt; \n    summarise(\n        hwy_sum=sum(hwy)\n    ) |&gt; \n    arrange(desc(hwy_sum))\n\n\n\n\nmanufacturer\nhwy_sum\n\n\n\ntoyota\n847\n\n\nvolkswagen\n789\n\n\ndodge\n664\n\n\nford\n484\n\n\naudi\n476\n\n\nchevrolet\n416\n\n\nhyundai\n376\n\n\nsubaru\n358\n\n\nnissan\n320\n\n\nhonda\n293\n\n\njeep\n141\n\n\npontiac\n132\n\n\nmercury\n72\n\n\nland rover\n66\n\n\nlincoln\n51",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>数值</span>"
    ]
  },
  {
    "objectID": "number_vector.html#pmax-pmin",
    "href": "number_vector.html#pmax-pmin",
    "title": "\n5  数值\n",
    "section": "\n5.3 pmax() pmin()\n",
    "text": "5.3 pmax() pmin()\n\n\nShow the codedf &lt;- tribble(\n  ~x, ~y,\n  1,  3,\n  5,  2,\n  7, NA,\n)\n# 行最大值，行最小值\ndf |&gt; \n  mutate(\n    min = pmin(x, y, na.rm = TRUE),\n    max = pmax(x, y, na.rm = TRUE)\n  )\n\n\n\n\nx\ny\nmin\nmax\n\n\n\n1\n3\n1\n3\n\n\n5\n2\n2\n5\n\n\n7\nNA\n7\n7",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>数值</span>"
    ]
  },
  {
    "objectID": "number_vector.html#模运算",
    "href": "number_vector.html#模运算",
    "title": "\n5  数值\n",
    "section": "\n5.4 模运算",
    "text": "5.4 模运算\n\nShow the code# 整除\n1:10 %/% 3\n#&gt;  [1] 0 0 1 1 1 2 2 2 3 3\n\n# 余数\n1:10 %% 3\n#&gt;  [1] 1 2 0 1 2 0 1 2 0 1",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>数值</span>"
    ]
  },
  {
    "objectID": "number_vector.html#四舍五入",
    "href": "number_vector.html#四舍五入",
    "title": "\n5  数值\n",
    "section": "\n5.5 四舍五入",
    "text": "5.5 四舍五入\n\nShow the codex &lt;- 123.456\nround(x, 2)  # two digits\n#&gt; [1] 123.46\n\nround(x, 1)  # one digit\n#&gt; [1] 123.5\n\nround(x, -1) # round to nearest ten\n#&gt; [1] 120\n\nround(x, -2) # round to nearest hundred\n#&gt; [1] 100\n\n# Round to nearest multiple of 4\nround(x / 4) * 4\n#&gt; [1] 124\n\n\n\nShow the code# 一半到舍入最近的偶数\nround(c(1.5, 2.5,3.5,4.5))\n#&gt; [1] 2 2 4 4\n\n\n\nShow the codefloor(x)\n#&gt; [1] 123\nceiling(x)\n#&gt; [1] 124\n\n# Round up to nearest two digits\nceiling(x / 0.01) * 0.01\n#&gt; [1] 123.46",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>数值</span>"
    ]
  },
  {
    "objectID": "number_vector.html#cut",
    "href": "number_vector.html#cut",
    "title": "\n5  数值\n",
    "section": "\n5.6 cut()\n",
    "text": "5.6 cut()\n\n\nShow the codex &lt;- c(1, 2, 5, 10, 15, 20)\n\n\ncut( x = x, breaks =3)                \n#&gt; [1] (0.981,7.33] (0.981,7.33] (0.981,7.33] (7.33,13.7]  (13.7,20]   \n#&gt; [6] (13.7,20]   \n#&gt; Levels: (0.981,7.33] (7.33,13.7] (13.7,20]\n\ncut(x, breaks = c(0, 5, 10, 15, 20))\n#&gt; [1] (0,5]   (0,5]   (0,5]   (5,10]  (10,15] (15,20]\n#&gt; Levels: (0,5] (5,10] (10,15] (15,20]\ncut(x, \n  breaks = c(0, 5, 10, 15, 20), \n  labels = c(\"sm\", \"md\", \"lg\", \"xl\")  # 注意要少1个\n)\n#&gt; [1] sm sm sm md lg xl\n#&gt; Levels: sm md lg xl\n\n\ncut( x = x, breaks = c(0, 5, 10, 15, 20),include.lowest = TRUE) \n#&gt; [1] [0,5]   [0,5]   [0,5]   (5,10]  (10,15] (15,20]\n#&gt; Levels: [0,5] (5,10] (10,15] (15,20]",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>数值</span>"
    ]
  },
  {
    "objectID": "number_vector.html#累计",
    "href": "number_vector.html#累计",
    "title": "\n5  数值\n",
    "section": "\n5.7 累计",
    "text": "5.7 累计\n\nShow the codex &lt;- 1:10\ncumsum(x)\n#&gt;  [1]  1  3  6 10 15 21 28 36 45 55\ncumprod(x)\n#&gt;  [1]       1       2       6      24     120     720    5040   40320  362880\n#&gt; [10] 3628800\ncummin(x)\n#&gt;  [1] 1 1 1 1 1 1 1 1 1 1\ncummax(x)\n#&gt;  [1]  1  2  3  4  5  6  7  8  9 10\ncummean(x)\n#&gt;  [1] 1.0 1.5 2.0 2.5 3.0 3.5 4.0 4.5 5.0 5.5",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>数值</span>"
    ]
  },
  {
    "objectID": "number_vector.html#连续标识符",
    "href": "number_vector.html#连续标识符",
    "title": "\n5  数值\n",
    "section": "\n5.8 连续标识符",
    "text": "5.8 连续标识符\n\nShow the code# 变量变化时加1\nconsecutive_id(c(TRUE, TRUE, FALSE, FALSE, TRUE, FALSE, NA, NA))\n#&gt; [1] 1 1 2 2 3 4 5 5\nconsecutive_id(c(1, 1, 1, 2, 1, 1, 2, 2))\n#&gt; [1] 1 1 1 2 3 3 4 4\n\n\n\nShow the codedf &lt;- data.frame(x = c(0, 0, 1, 0), y = c(2, 2, 2, 2))\ndf %&gt;% group_by(x, y) %&gt;% summarise(n = n())\n\n\n\n\nx\ny\nn\n\n\n\n0\n2\n3\n\n\n1\n2\n1\n\n\n\n\n\nShow the code\ndf %&gt;% group_by(id = consecutive_id(x, y), x, y) %&gt;% summarise(n = n())\n\n\n\n\nid\nx\ny\nn\n\n\n\n1\n0\n2\n2\n\n\n2\n1\n2\n1\n\n\n3\n0\n2\n1",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>数值</span>"
    ]
  },
  {
    "objectID": "number_vector.html#偏移量-offsets",
    "href": "number_vector.html#偏移量-offsets",
    "title": "\n5  数值\n",
    "section": "\n5.9 偏移量 Offsets",
    "text": "5.9 偏移量 Offsets\n\nShow the codex &lt;- c(2, 5, 11, 11, 19, 35)\ndplyr::lag(x,n=1)\n#&gt; [1] NA  2  5 11 11 19\ndplyr::lead(x,n=2)\n#&gt; [1] 11 11 19 35 NA NA",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>数值</span>"
    ]
  },
  {
    "objectID": "number_vector.html#位置",
    "href": "number_vector.html#位置",
    "title": "\n5  数值\n",
    "section": "\n5.10 位置",
    "text": "5.10 位置\n\nShow the code\nmpg |&gt; \n    group_by(manufacturer,model) |&gt; \n    mutate(\n        first_hwy = first(hwy,na_rm = T),\n        \n        n_hwy = nth(hwy,n=5,na_rm = T),\n        \n        last_hwy = last(hwy,na_rm = T)\n    )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nfirst_hwy\nn_hwy\nlast_hwy\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n29\n26\n27\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n29\n26\n27\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n29\n26\n27\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n29\n26\n27\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n29\n26\n27\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n29\n26\n27\n\n\naudi\na4\n3.1\n2008\n6\nauto(av)\nf\n18\n27\np\ncompact\n29\n26\n27\n\n\naudi\na4 quattro\n1.8\n1999\n4\nmanual(m5)\n4\n18\n26\np\ncompact\n26\n25\n25\n\n\naudi\na4 quattro\n1.8\n1999\n4\nauto(l5)\n4\n16\n25\np\ncompact\n26\n25\n25\n\n\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact\n26\n25\n25\n\n\naudi\na4 quattro\n2.0\n2008\n4\nauto(s6)\n4\n19\n27\np\ncompact\n26\n25\n25\n\n\naudi\na4 quattro\n2.8\n1999\n6\nauto(l5)\n4\n15\n25\np\ncompact\n26\n25\n25\n\n\naudi\na4 quattro\n2.8\n1999\n6\nmanual(m5)\n4\n17\n25\np\ncompact\n26\n25\n25\n\n\naudi\na4 quattro\n3.1\n2008\n6\nauto(s6)\n4\n17\n25\np\ncompact\n26\n25\n25\n\n\naudi\na4 quattro\n3.1\n2008\n6\nmanual(m6)\n4\n15\n25\np\ncompact\n26\n25\n25\n\n\naudi\na6 quattro\n2.8\n1999\n6\nauto(l5)\n4\n15\n24\np\nmidsize\n24\nNA\n23\n\n\naudi\na6 quattro\n3.1\n2008\n6\nauto(s6)\n4\n17\n25\np\nmidsize\n24\nNA\n23\n\n\naudi\na6 quattro\n4.2\n2008\n8\nauto(s6)\n4\n16\n23\np\nmidsize\n24\nNA\n23\n\n\nchevrolet\nc1500 suburban 2wd\n5.3\n2008\n8\nauto(l4)\nr\n14\n20\nr\nsuv\n20\n17\n17\n\n\nchevrolet\nc1500 suburban 2wd\n5.3\n2008\n8\nauto(l4)\nr\n11\n15\ne\nsuv\n20\n17\n17\n\n\nchevrolet\nc1500 suburban 2wd\n5.3\n2008\n8\nauto(l4)\nr\n14\n20\nr\nsuv\n20\n17\n17\n\n\nchevrolet\nc1500 suburban 2wd\n5.7\n1999\n8\nauto(l4)\nr\n13\n17\nr\nsuv\n20\n17\n17\n\n\nchevrolet\nc1500 suburban 2wd\n6.0\n2008\n8\nauto(l4)\nr\n12\n17\nr\nsuv\n20\n17\n17\n\n\nchevrolet\ncorvette\n5.7\n1999\n8\nmanual(m6)\nr\n16\n26\np\n2seater\n26\n24\n24\n\n\nchevrolet\ncorvette\n5.7\n1999\n8\nauto(l4)\nr\n15\n23\np\n2seater\n26\n24\n24\n\n\nchevrolet\ncorvette\n6.2\n2008\n8\nmanual(m6)\nr\n16\n26\np\n2seater\n26\n24\n24\n\n\nchevrolet\ncorvette\n6.2\n2008\n8\nauto(s6)\nr\n15\n25\np\n2seater\n26\n24\n24\n\n\nchevrolet\ncorvette\n7.0\n2008\n8\nmanual(m6)\nr\n15\n24\np\n2seater\n26\n24\n24\n\n\nchevrolet\nk1500 tahoe 4wd\n5.3\n2008\n8\nauto(l4)\n4\n14\n19\nr\nsuv\n19\nNA\n17\n\n\nchevrolet\nk1500 tahoe 4wd\n5.3\n2008\n8\nauto(l4)\n4\n11\n14\ne\nsuv\n19\nNA\n17\n\n\nchevrolet\nk1500 tahoe 4wd\n5.7\n1999\n8\nauto(l4)\n4\n11\n15\nr\nsuv\n19\nNA\n17\n\n\nchevrolet\nk1500 tahoe 4wd\n6.5\n1999\n8\nauto(l4)\n4\n14\n17\nd\nsuv\n19\nNA\n17\n\n\nchevrolet\nmalibu\n2.4\n1999\n4\nauto(l4)\nf\n19\n27\nr\nmidsize\n27\n26\n26\n\n\nchevrolet\nmalibu\n2.4\n2008\n4\nauto(l4)\nf\n22\n30\nr\nmidsize\n27\n26\n26\n\n\nchevrolet\nmalibu\n3.1\n1999\n6\nauto(l4)\nf\n18\n26\nr\nmidsize\n27\n26\n26\n\n\nchevrolet\nmalibu\n3.5\n2008\n6\nauto(l4)\nf\n18\n29\nr\nmidsize\n27\n26\n26\n\n\nchevrolet\nmalibu\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\nr\nmidsize\n27\n26\n26\n\n\ndodge\ncaravan 2wd\n2.4\n1999\n4\nauto(l3)\nf\n18\n24\nr\nminivan\n24\n24\n23\n\n\ndodge\ncaravan 2wd\n3.0\n1999\n6\nauto(l4)\nf\n17\n24\nr\nminivan\n24\n24\n23\n\n\ndodge\ncaravan 2wd\n3.3\n1999\n6\nauto(l4)\nf\n16\n22\nr\nminivan\n24\n24\n23\n\n\ndodge\ncaravan 2wd\n3.3\n1999\n6\nauto(l4)\nf\n16\n22\nr\nminivan\n24\n24\n23\n\n\ndodge\ncaravan 2wd\n3.3\n2008\n6\nauto(l4)\nf\n17\n24\nr\nminivan\n24\n24\n23\n\n\ndodge\ncaravan 2wd\n3.3\n2008\n6\nauto(l4)\nf\n17\n24\nr\nminivan\n24\n24\n23\n\n\ndodge\ncaravan 2wd\n3.3\n2008\n6\nauto(l4)\nf\n11\n17\ne\nminivan\n24\n24\n23\n\n\ndodge\ncaravan 2wd\n3.8\n1999\n6\nauto(l4)\nf\n15\n22\nr\nminivan\n24\n24\n23\n\n\ndodge\ncaravan 2wd\n3.8\n1999\n6\nauto(l4)\nf\n15\n21\nr\nminivan\n24\n24\n23\n\n\ndodge\ncaravan 2wd\n3.8\n2008\n6\nauto(l6)\nf\n16\n23\nr\nminivan\n24\n24\n23\n\n\ndodge\ncaravan 2wd\n4.0\n2008\n6\nauto(l6)\nf\n16\n23\nr\nminivan\n24\n24\n23\n\n\ndodge\ndakota pickup 4wd\n3.7\n2008\n6\nmanual(m6)\n4\n15\n19\nr\npickup\n19\n19\n15\n\n\ndodge\ndakota pickup 4wd\n3.7\n2008\n6\nauto(l4)\n4\n14\n18\nr\npickup\n19\n19\n15\n\n\ndodge\ndakota pickup 4wd\n3.9\n1999\n6\nauto(l4)\n4\n13\n17\nr\npickup\n19\n19\n15\n\n\ndodge\ndakota pickup 4wd\n3.9\n1999\n6\nmanual(m5)\n4\n14\n17\nr\npickup\n19\n19\n15\n\n\ndodge\ndakota pickup 4wd\n4.7\n2008\n8\nauto(l5)\n4\n14\n19\nr\npickup\n19\n19\n15\n\n\ndodge\ndakota pickup 4wd\n4.7\n2008\n8\nauto(l5)\n4\n14\n19\nr\npickup\n19\n19\n15\n\n\ndodge\ndakota pickup 4wd\n4.7\n2008\n8\nauto(l5)\n4\n9\n12\ne\npickup\n19\n19\n15\n\n\ndodge\ndakota pickup 4wd\n5.2\n1999\n8\nmanual(m5)\n4\n11\n17\nr\npickup\n19\n19\n15\n\n\ndodge\ndakota pickup 4wd\n5.2\n1999\n8\nauto(l4)\n4\n11\n15\nr\npickup\n19\n19\n15\n\n\ndodge\ndurango 4wd\n3.9\n1999\n6\nauto(l4)\n4\n13\n17\nr\nsuv\n17\n16\n15\n\n\ndodge\ndurango 4wd\n4.7\n2008\n8\nauto(l5)\n4\n13\n17\nr\nsuv\n17\n16\n15\n\n\ndodge\ndurango 4wd\n4.7\n2008\n8\nauto(l5)\n4\n9\n12\ne\nsuv\n17\n16\n15\n\n\ndodge\ndurango 4wd\n4.7\n2008\n8\nauto(l5)\n4\n13\n17\nr\nsuv\n17\n16\n15\n\n\ndodge\ndurango 4wd\n5.2\n1999\n8\nauto(l4)\n4\n11\n16\nr\nsuv\n17\n16\n15\n\n\ndodge\ndurango 4wd\n5.7\n2008\n8\nauto(l5)\n4\n13\n18\nr\nsuv\n17\n16\n15\n\n\ndodge\ndurango 4wd\n5.9\n1999\n8\nauto(l4)\n4\n11\n15\nr\nsuv\n17\n16\n15\n\n\ndodge\nram 1500 pickup 4wd\n4.7\n2008\n8\nmanual(m6)\n4\n12\n16\nr\npickup\n16\n16\n15\n\n\ndodge\nram 1500 pickup 4wd\n4.7\n2008\n8\nauto(l5)\n4\n9\n12\ne\npickup\n16\n16\n15\n\n\ndodge\nram 1500 pickup 4wd\n4.7\n2008\n8\nauto(l5)\n4\n13\n17\nr\npickup\n16\n16\n15\n\n\ndodge\nram 1500 pickup 4wd\n4.7\n2008\n8\nauto(l5)\n4\n13\n17\nr\npickup\n16\n16\n15\n\n\ndodge\nram 1500 pickup 4wd\n4.7\n2008\n8\nmanual(m6)\n4\n12\n16\nr\npickup\n16\n16\n15\n\n\ndodge\nram 1500 pickup 4wd\n4.7\n2008\n8\nmanual(m6)\n4\n9\n12\ne\npickup\n16\n16\n15\n\n\ndodge\nram 1500 pickup 4wd\n5.2\n1999\n8\nauto(l4)\n4\n11\n15\nr\npickup\n16\n16\n15\n\n\ndodge\nram 1500 pickup 4wd\n5.2\n1999\n8\nmanual(m5)\n4\n11\n16\nr\npickup\n16\n16\n15\n\n\ndodge\nram 1500 pickup 4wd\n5.7\n2008\n8\nauto(l5)\n4\n13\n17\nr\npickup\n16\n16\n15\n\n\ndodge\nram 1500 pickup 4wd\n5.9\n1999\n8\nauto(l4)\n4\n11\n15\nr\npickup\n16\n16\n15\n\n\nford\nexpedition 2wd\n4.6\n1999\n8\nauto(l4)\nr\n11\n17\nr\nsuv\n17\nNA\n18\n\n\nford\nexpedition 2wd\n5.4\n1999\n8\nauto(l4)\nr\n11\n17\nr\nsuv\n17\nNA\n18\n\n\nford\nexpedition 2wd\n5.4\n2008\n8\nauto(l6)\nr\n12\n18\nr\nsuv\n17\nNA\n18\n\n\nford\nexplorer 4wd\n4.0\n1999\n6\nauto(l5)\n4\n14\n17\nr\nsuv\n17\n19\n17\n\n\nford\nexplorer 4wd\n4.0\n1999\n6\nmanual(m5)\n4\n15\n19\nr\nsuv\n17\n19\n17\n\n\nford\nexplorer 4wd\n4.0\n1999\n6\nauto(l5)\n4\n14\n17\nr\nsuv\n17\n19\n17\n\n\nford\nexplorer 4wd\n4.0\n2008\n6\nauto(l5)\n4\n13\n19\nr\nsuv\n17\n19\n17\n\n\nford\nexplorer 4wd\n4.6\n2008\n8\nauto(l6)\n4\n13\n19\nr\nsuv\n17\n19\n17\n\n\nford\nexplorer 4wd\n5.0\n1999\n8\nauto(l4)\n4\n13\n17\nr\nsuv\n17\n19\n17\n\n\nford\nf150 pickup 4wd\n4.2\n1999\n6\nauto(l4)\n4\n14\n17\nr\npickup\n17\n17\n17\n\n\nford\nf150 pickup 4wd\n4.2\n1999\n6\nmanual(m5)\n4\n14\n17\nr\npickup\n17\n17\n17\n\n\nford\nf150 pickup 4wd\n4.6\n1999\n8\nmanual(m5)\n4\n13\n16\nr\npickup\n17\n17\n17\n\n\nford\nf150 pickup 4wd\n4.6\n1999\n8\nauto(l4)\n4\n13\n16\nr\npickup\n17\n17\n17\n\n\nford\nf150 pickup 4wd\n4.6\n2008\n8\nauto(l4)\n4\n13\n17\nr\npickup\n17\n17\n17\n\n\nford\nf150 pickup 4wd\n5.4\n1999\n8\nauto(l4)\n4\n11\n15\nr\npickup\n17\n17\n17\n\n\nford\nf150 pickup 4wd\n5.4\n2008\n8\nauto(l4)\n4\n13\n17\nr\npickup\n17\n17\n17\n\n\nford\nmustang\n3.8\n1999\n6\nmanual(m5)\nr\n18\n26\nr\nsubcompact\n26\n21\n20\n\n\nford\nmustang\n3.8\n1999\n6\nauto(l4)\nr\n18\n25\nr\nsubcompact\n26\n21\n20\n\n\nford\nmustang\n4.0\n2008\n6\nmanual(m5)\nr\n17\n26\nr\nsubcompact\n26\n21\n20\n\n\nford\nmustang\n4.0\n2008\n6\nauto(l5)\nr\n16\n24\nr\nsubcompact\n26\n21\n20\n\n\nford\nmustang\n4.6\n1999\n8\nauto(l4)\nr\n15\n21\nr\nsubcompact\n26\n21\n20\n\n\nford\nmustang\n4.6\n1999\n8\nmanual(m5)\nr\n15\n22\nr\nsubcompact\n26\n21\n20\n\n\nford\nmustang\n4.6\n2008\n8\nmanual(m5)\nr\n15\n23\nr\nsubcompact\n26\n21\n20\n\n\nford\nmustang\n4.6\n2008\n8\nauto(l5)\nr\n15\n22\nr\nsubcompact\n26\n21\n20\n\n\nford\nmustang\n5.4\n2008\n8\nmanual(m6)\nr\n14\n20\np\nsubcompact\n26\n21\n20\n\n\nhonda\ncivic\n1.6\n1999\n4\nmanual(m5)\nf\n28\n33\nr\nsubcompact\n33\n32\n29\n\n\nhonda\ncivic\n1.6\n1999\n4\nauto(l4)\nf\n24\n32\nr\nsubcompact\n33\n32\n29\n\n\nhonda\ncivic\n1.6\n1999\n4\nmanual(m5)\nf\n25\n32\nr\nsubcompact\n33\n32\n29\n\n\nhonda\ncivic\n1.6\n1999\n4\nmanual(m5)\nf\n23\n29\np\nsubcompact\n33\n32\n29\n\n\nhonda\ncivic\n1.6\n1999\n4\nauto(l4)\nf\n24\n32\nr\nsubcompact\n33\n32\n29\n\n\nhonda\ncivic\n1.8\n2008\n4\nmanual(m5)\nf\n26\n34\nr\nsubcompact\n33\n32\n29\n\n\nhonda\ncivic\n1.8\n2008\n4\nauto(l5)\nf\n25\n36\nr\nsubcompact\n33\n32\n29\n\n\nhonda\ncivic\n1.8\n2008\n4\nauto(l5)\nf\n24\n36\nc\nsubcompact\n33\n32\n29\n\n\nhonda\ncivic\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nsubcompact\n33\n32\n29\n\n\nhyundai\nsonata\n2.4\n1999\n4\nauto(l4)\nf\n18\n26\nr\nmidsize\n26\n26\n28\n\n\nhyundai\nsonata\n2.4\n1999\n4\nmanual(m5)\nf\n18\n27\nr\nmidsize\n26\n26\n28\n\n\nhyundai\nsonata\n2.4\n2008\n4\nauto(l4)\nf\n21\n30\nr\nmidsize\n26\n26\n28\n\n\nhyundai\nsonata\n2.4\n2008\n4\nmanual(m5)\nf\n21\n31\nr\nmidsize\n26\n26\n28\n\n\nhyundai\nsonata\n2.5\n1999\n6\nauto(l4)\nf\n18\n26\nr\nmidsize\n26\n26\n28\n\n\nhyundai\nsonata\n2.5\n1999\n6\nmanual(m5)\nf\n18\n26\nr\nmidsize\n26\n26\n28\n\n\nhyundai\nsonata\n3.3\n2008\n6\nauto(l5)\nf\n19\n28\nr\nmidsize\n26\n26\n28\n\n\nhyundai\ntiburon\n2.0\n1999\n4\nauto(l4)\nf\n19\n26\nr\nsubcompact\n26\n24\n24\n\n\nhyundai\ntiburon\n2.0\n1999\n4\nmanual(m5)\nf\n19\n29\nr\nsubcompact\n26\n24\n24\n\n\nhyundai\ntiburon\n2.0\n2008\n4\nmanual(m5)\nf\n20\n28\nr\nsubcompact\n26\n24\n24\n\n\nhyundai\ntiburon\n2.0\n2008\n4\nauto(l4)\nf\n20\n27\nr\nsubcompact\n26\n24\n24\n\n\nhyundai\ntiburon\n2.7\n2008\n6\nauto(l4)\nf\n17\n24\nr\nsubcompact\n26\n24\n24\n\n\nhyundai\ntiburon\n2.7\n2008\n6\nmanual(m6)\nf\n16\n24\nr\nsubcompact\n26\n24\n24\n\n\nhyundai\ntiburon\n2.7\n2008\n6\nmanual(m5)\nf\n17\n24\nr\nsubcompact\n26\n24\n24\n\n\njeep\ngrand cherokee 4wd\n3.0\n2008\n6\nauto(l5)\n4\n17\n22\nd\nsuv\n22\n12\n14\n\n\njeep\ngrand cherokee 4wd\n3.7\n2008\n6\nauto(l5)\n4\n15\n19\nr\nsuv\n22\n12\n14\n\n\njeep\ngrand cherokee 4wd\n4.0\n1999\n6\nauto(l4)\n4\n15\n20\nr\nsuv\n22\n12\n14\n\n\njeep\ngrand cherokee 4wd\n4.7\n1999\n8\nauto(l4)\n4\n14\n17\nr\nsuv\n22\n12\n14\n\n\njeep\ngrand cherokee 4wd\n4.7\n2008\n8\nauto(l5)\n4\n9\n12\ne\nsuv\n22\n12\n14\n\n\njeep\ngrand cherokee 4wd\n4.7\n2008\n8\nauto(l5)\n4\n14\n19\nr\nsuv\n22\n12\n14\n\n\njeep\ngrand cherokee 4wd\n5.7\n2008\n8\nauto(l5)\n4\n13\n18\nr\nsuv\n22\n12\n14\n\n\njeep\ngrand cherokee 4wd\n6.1\n2008\n8\nauto(l5)\n4\n11\n14\np\nsuv\n22\n12\n14\n\n\nland rover\nrange rover\n4.0\n1999\n8\nauto(l4)\n4\n11\n15\np\nsuv\n15\nNA\n15\n\n\nland rover\nrange rover\n4.2\n2008\n8\nauto(s6)\n4\n12\n18\nr\nsuv\n15\nNA\n15\n\n\nland rover\nrange rover\n4.4\n2008\n8\nauto(s6)\n4\n12\n18\nr\nsuv\n15\nNA\n15\n\n\nland rover\nrange rover\n4.6\n1999\n8\nauto(l4)\n4\n11\n15\np\nsuv\n15\nNA\n15\n\n\nlincoln\nnavigator 2wd\n5.4\n1999\n8\nauto(l4)\nr\n11\n17\nr\nsuv\n17\nNA\n18\n\n\nlincoln\nnavigator 2wd\n5.4\n1999\n8\nauto(l4)\nr\n11\n16\np\nsuv\n17\nNA\n18\n\n\nlincoln\nnavigator 2wd\n5.4\n2008\n8\nauto(l6)\nr\n12\n18\nr\nsuv\n17\nNA\n18\n\n\nmercury\nmountaineer 4wd\n4.0\n1999\n6\nauto(l5)\n4\n14\n17\nr\nsuv\n17\nNA\n17\n\n\nmercury\nmountaineer 4wd\n4.0\n2008\n6\nauto(l5)\n4\n13\n19\nr\nsuv\n17\nNA\n17\n\n\nmercury\nmountaineer 4wd\n4.6\n2008\n8\nauto(l6)\n4\n13\n19\nr\nsuv\n17\nNA\n17\n\n\nmercury\nmountaineer 4wd\n5.0\n1999\n8\nauto(l4)\n4\n13\n17\nr\nsuv\n17\nNA\n17\n\n\nnissan\naltima\n2.4\n1999\n4\nmanual(m5)\nf\n21\n29\nr\ncompact\n29\n27\n26\n\n\nnissan\naltima\n2.4\n1999\n4\nauto(l4)\nf\n19\n27\nr\ncompact\n29\n27\n26\n\n\nnissan\naltima\n2.5\n2008\n4\nauto(av)\nf\n23\n31\nr\nmidsize\n29\n27\n26\n\n\nnissan\naltima\n2.5\n2008\n4\nmanual(m6)\nf\n23\n32\nr\nmidsize\n29\n27\n26\n\n\nnissan\naltima\n3.5\n2008\n6\nmanual(m6)\nf\n19\n27\np\nmidsize\n29\n27\n26\n\n\nnissan\naltima\n3.5\n2008\n6\nauto(av)\nf\n19\n26\np\nmidsize\n29\n27\n26\n\n\nnissan\nmaxima\n3.0\n1999\n6\nauto(l4)\nf\n18\n26\nr\nmidsize\n26\nNA\n25\n\n\nnissan\nmaxima\n3.0\n1999\n6\nmanual(m5)\nf\n19\n25\nr\nmidsize\n26\nNA\n25\n\n\nnissan\nmaxima\n3.5\n2008\n6\nauto(av)\nf\n19\n25\np\nmidsize\n26\nNA\n25\n\n\nnissan\npathfinder 4wd\n3.3\n1999\n6\nauto(l4)\n4\n14\n17\nr\nsuv\n17\nNA\n18\n\n\nnissan\npathfinder 4wd\n3.3\n1999\n6\nmanual(m5)\n4\n15\n17\nr\nsuv\n17\nNA\n18\n\n\nnissan\npathfinder 4wd\n4.0\n2008\n6\nauto(l5)\n4\n14\n20\np\nsuv\n17\nNA\n18\n\n\nnissan\npathfinder 4wd\n5.6\n2008\n8\nauto(s5)\n4\n12\n18\np\nsuv\n17\nNA\n18\n\n\npontiac\ngrand prix\n3.1\n1999\n6\nauto(l4)\nf\n18\n26\nr\nmidsize\n26\n25\n25\n\n\npontiac\ngrand prix\n3.8\n1999\n6\nauto(l4)\nf\n16\n26\np\nmidsize\n26\n25\n25\n\n\npontiac\ngrand prix\n3.8\n1999\n6\nauto(l4)\nf\n17\n27\nr\nmidsize\n26\n25\n25\n\n\npontiac\ngrand prix\n3.8\n2008\n6\nauto(l4)\nf\n18\n28\nr\nmidsize\n26\n25\n25\n\n\npontiac\ngrand prix\n5.3\n2008\n8\nauto(s4)\nf\n16\n25\np\nmidsize\n26\n25\n25\n\n\nsubaru\nforester awd\n2.5\n1999\n4\nmanual(m5)\n4\n18\n25\nr\nsuv\n25\n26\n23\n\n\nsubaru\nforester awd\n2.5\n1999\n4\nauto(l4)\n4\n18\n24\nr\nsuv\n25\n26\n23\n\n\nsubaru\nforester awd\n2.5\n2008\n4\nmanual(m5)\n4\n20\n27\nr\nsuv\n25\n26\n23\n\n\nsubaru\nforester awd\n2.5\n2008\n4\nmanual(m5)\n4\n19\n25\np\nsuv\n25\n26\n23\n\n\nsubaru\nforester awd\n2.5\n2008\n4\nauto(l4)\n4\n20\n26\nr\nsuv\n25\n26\n23\n\n\nsubaru\nforester awd\n2.5\n2008\n4\nauto(l4)\n4\n18\n23\np\nsuv\n25\n26\n23\n\n\nsubaru\nimpreza awd\n2.2\n1999\n4\nauto(l4)\n4\n21\n26\nr\nsubcompact\n26\n25\n27\n\n\nsubaru\nimpreza awd\n2.2\n1999\n4\nmanual(m5)\n4\n19\n26\nr\nsubcompact\n26\n25\n27\n\n\nsubaru\nimpreza awd\n2.5\n1999\n4\nmanual(m5)\n4\n19\n26\nr\nsubcompact\n26\n25\n27\n\n\nsubaru\nimpreza awd\n2.5\n1999\n4\nauto(l4)\n4\n19\n26\nr\nsubcompact\n26\n25\n27\n\n\nsubaru\nimpreza awd\n2.5\n2008\n4\nauto(s4)\n4\n20\n25\np\ncompact\n26\n25\n27\n\n\nsubaru\nimpreza awd\n2.5\n2008\n4\nauto(s4)\n4\n20\n27\nr\ncompact\n26\n25\n27\n\n\nsubaru\nimpreza awd\n2.5\n2008\n4\nmanual(m5)\n4\n19\n25\np\ncompact\n26\n25\n27\n\n\nsubaru\nimpreza awd\n2.5\n2008\n4\nmanual(m5)\n4\n20\n27\nr\ncompact\n26\n25\n27\n\n\ntoyota\n4runner 4wd\n2.7\n1999\n4\nmanual(m5)\n4\n15\n20\nr\nsuv\n20\n20\n17\n\n\ntoyota\n4runner 4wd\n2.7\n1999\n4\nauto(l4)\n4\n16\n20\nr\nsuv\n20\n20\n17\n\n\ntoyota\n4runner 4wd\n3.4\n1999\n6\nauto(l4)\n4\n15\n19\nr\nsuv\n20\n20\n17\n\n\ntoyota\n4runner 4wd\n3.4\n1999\n6\nmanual(m5)\n4\n15\n17\nr\nsuv\n20\n20\n17\n\n\ntoyota\n4runner 4wd\n4.0\n2008\n6\nauto(l5)\n4\n16\n20\nr\nsuv\n20\n20\n17\n\n\ntoyota\n4runner 4wd\n4.7\n2008\n8\nauto(l5)\n4\n14\n17\nr\nsuv\n20\n20\n17\n\n\ntoyota\ncamry\n2.2\n1999\n4\nmanual(m5)\nf\n21\n29\nr\nmidsize\n29\n26\n28\n\n\ntoyota\ncamry\n2.2\n1999\n4\nauto(l4)\nf\n21\n27\nr\nmidsize\n29\n26\n28\n\n\ntoyota\ncamry\n2.4\n2008\n4\nmanual(m5)\nf\n21\n31\nr\nmidsize\n29\n26\n28\n\n\ntoyota\ncamry\n2.4\n2008\n4\nauto(l5)\nf\n21\n31\nr\nmidsize\n29\n26\n28\n\n\ntoyota\ncamry\n3.0\n1999\n6\nauto(l4)\nf\n18\n26\nr\nmidsize\n29\n26\n28\n\n\ntoyota\ncamry\n3.0\n1999\n6\nmanual(m5)\nf\n18\n26\nr\nmidsize\n29\n26\n28\n\n\ntoyota\ncamry\n3.5\n2008\n6\nauto(s6)\nf\n19\n28\nr\nmidsize\n29\n26\n28\n\n\ntoyota\ncamry solara\n2.2\n1999\n4\nauto(l4)\nf\n21\n27\nr\ncompact\n27\n26\n27\n\n\ntoyota\ncamry solara\n2.2\n1999\n4\nmanual(m5)\nf\n21\n29\nr\ncompact\n27\n26\n27\n\n\ntoyota\ncamry solara\n2.4\n2008\n4\nmanual(m5)\nf\n21\n31\nr\ncompact\n27\n26\n27\n\n\ntoyota\ncamry solara\n2.4\n2008\n4\nauto(s5)\nf\n22\n31\nr\ncompact\n27\n26\n27\n\n\ntoyota\ncamry solara\n3.0\n1999\n6\nauto(l4)\nf\n18\n26\nr\ncompact\n27\n26\n27\n\n\ntoyota\ncamry solara\n3.0\n1999\n6\nmanual(m5)\nf\n18\n26\nr\ncompact\n27\n26\n27\n\n\ntoyota\ncamry solara\n3.3\n2008\n6\nauto(s5)\nf\n18\n27\nr\ncompact\n27\n26\n27\n\n\ntoyota\ncorolla\n1.8\n1999\n4\nauto(l3)\nf\n24\n30\nr\ncompact\n30\n35\n35\n\n\ntoyota\ncorolla\n1.8\n1999\n4\nauto(l4)\nf\n24\n33\nr\ncompact\n30\n35\n35\n\n\ntoyota\ncorolla\n1.8\n1999\n4\nmanual(m5)\nf\n26\n35\nr\ncompact\n30\n35\n35\n\n\ntoyota\ncorolla\n1.8\n2008\n4\nmanual(m5)\nf\n28\n37\nr\ncompact\n30\n35\n35\n\n\ntoyota\ncorolla\n1.8\n2008\n4\nauto(l4)\nf\n26\n35\nr\ncompact\n30\n35\n35\n\n\ntoyota\nland cruiser wagon 4wd\n4.7\n1999\n8\nauto(l4)\n4\n11\n15\nr\nsuv\n15\nNA\n18\n\n\ntoyota\nland cruiser wagon 4wd\n5.7\n2008\n8\nauto(s6)\n4\n13\n18\nr\nsuv\n15\nNA\n18\n\n\ntoyota\ntoyota tacoma 4wd\n2.7\n1999\n4\nmanual(m5)\n4\n15\n20\nr\npickup\n20\n19\n20\n\n\ntoyota\ntoyota tacoma 4wd\n2.7\n1999\n4\nauto(l4)\n4\n16\n20\nr\npickup\n20\n19\n20\n\n\ntoyota\ntoyota tacoma 4wd\n2.7\n2008\n4\nmanual(m5)\n4\n17\n22\nr\npickup\n20\n19\n20\n\n\ntoyota\ntoyota tacoma 4wd\n3.4\n1999\n6\nmanual(m5)\n4\n15\n17\nr\npickup\n20\n19\n20\n\n\ntoyota\ntoyota tacoma 4wd\n3.4\n1999\n6\nauto(l4)\n4\n15\n19\nr\npickup\n20\n19\n20\n\n\ntoyota\ntoyota tacoma 4wd\n4.0\n2008\n6\nmanual(m6)\n4\n15\n18\nr\npickup\n20\n19\n20\n\n\ntoyota\ntoyota tacoma 4wd\n4.0\n2008\n6\nauto(l5)\n4\n16\n20\nr\npickup\n20\n19\n20\n\n\nvolkswagen\ngti\n2.0\n1999\n4\nmanual(m5)\nf\n21\n29\nr\ncompact\n29\n24\n24\n\n\nvolkswagen\ngti\n2.0\n1999\n4\nauto(l4)\nf\n19\n26\nr\ncompact\n29\n24\n24\n\n\nvolkswagen\ngti\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\ncompact\n29\n24\n24\n\n\nvolkswagen\ngti\n2.0\n2008\n4\nauto(s6)\nf\n22\n29\np\ncompact\n29\n24\n24\n\n\nvolkswagen\ngti\n2.8\n1999\n6\nmanual(m5)\nf\n17\n24\nr\ncompact\n29\n24\n24\n\n\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n44\n29\n24\n\n\nvolkswagen\njetta\n2.0\n1999\n4\nmanual(m5)\nf\n21\n29\nr\ncompact\n44\n29\n24\n\n\nvolkswagen\njetta\n2.0\n1999\n4\nauto(l4)\nf\n19\n26\nr\ncompact\n44\n29\n24\n\n\nvolkswagen\njetta\n2.0\n2008\n4\nauto(s6)\nf\n22\n29\np\ncompact\n44\n29\n24\n\n\nvolkswagen\njetta\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\ncompact\n44\n29\n24\n\n\nvolkswagen\njetta\n2.5\n2008\n5\nauto(s6)\nf\n21\n29\nr\ncompact\n44\n29\n24\n\n\nvolkswagen\njetta\n2.5\n2008\n5\nmanual(m5)\nf\n21\n29\nr\ncompact\n44\n29\n24\n\n\nvolkswagen\njetta\n2.8\n1999\n6\nauto(l4)\nf\n16\n23\nr\ncompact\n44\n29\n24\n\n\nvolkswagen\njetta\n2.8\n1999\n6\nmanual(m5)\nf\n17\n24\nr\ncompact\n44\n29\n24\n\n\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n44\n28\n29\n\n\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n44\n28\n29\n\n\nvolkswagen\nnew beetle\n2.0\n1999\n4\nmanual(m5)\nf\n21\n29\nr\nsubcompact\n44\n28\n29\n\n\nvolkswagen\nnew beetle\n2.0\n1999\n4\nauto(l4)\nf\n19\n26\nr\nsubcompact\n44\n28\n29\n\n\nvolkswagen\nnew beetle\n2.5\n2008\n5\nmanual(m5)\nf\n20\n28\nr\nsubcompact\n44\n28\n29\n\n\nvolkswagen\nnew beetle\n2.5\n2008\n5\nauto(s6)\nf\n20\n29\nr\nsubcompact\n44\n28\n29\n\n\nvolkswagen\npassat\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\nmidsize\n29\n26\n26\n\n\nvolkswagen\npassat\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\nmidsize\n29\n26\n26\n\n\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n29\n26\n26\n\n\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n29\n26\n26\n\n\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n29\n26\n26\n\n\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n29\n26\n26\n\n\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n29\n26\n26",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>数值</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html",
    "href": "dynamic_report.html",
    "title": "\n6  动态报告\n",
    "section": "",
    "text": "1 文本格式",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#section-text_format",
    "href": "dynamic_report.html#section-text_format",
    "title": "\n6  动态报告\n",
    "section": "",
    "text": "output\nsyntax\n\n\n\ncode\n` code `\n\n\n\n粗体\n**粗体**\n\n\n\n斜体\n*斜体*\n\n\n\n下横线\n[下横线]{.underline}\n\n\n\n删除线\n~~删除线~~\n\n\n\n上标X2\n\nX^2^\n\n\n\n下标 X1\n\nX~1~\n\n\n\n\n水平线分隔符\n\n\n***\n\n\n\nhttps://r4ds.hadley.nz/\n&lt;https://r4ds.hadley.nz/&gt;\n\n\n\nquarto\n[quarto](https://quarto.org)\n\n\n\n\n | \n\n\n\n\n\n\nBlockquote\n\n&gt; Blockquote",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#yaml",
    "href": "dynamic_report.html#yaml",
    "title": "\n6  动态报告\n",
    "section": "\n2 YAML",
    "text": "2 YAML\n\n2.1 Execute chunk\n\n\n\n\n\n\n\nOption\nDefault\nEffects\n\n\n\necho\ntrue\n\n\nfalse: hide code in output\\\n\ninclude code cell syntaxfenced\n\n\n\n\neval\ntrue\n\nfalse: don’t run code\n\n\ninclude\ntrue\n\nfalse: don’t include code or results\n\n\noutput\ntrue\n\n\nfalse: don’t include results\\\n\ntreat results as raw markdownasis\n\n\n\n\nwarning\ntrue\n\nfalse: don’t include warnings in output\n\n\nerror\nfalse\n\ntrue: include error in output and continue with render\n\n\n\n2.2 添加页脚\n您可以创建包含某些内容的文件。然后将其显示在 quarto 文档的底部。html\n首先，创建一个名为 file 的文件。在其中复制以下内容：footer.html\n在YAML block 中添加 include-after-body: \"footer.html\"\n\n2.3 标题上方添加额外空间\n使用自定义样式表可以直接实现此效果。此样式表将包含专门设计用于在标题上方添加额外空间的规则。\n首先创建一个名为并包含以下规则的 CSS 文件：style.css\nh1, .h1, h2, .h2, h3, .h3 {\n  margin-top: 84px;\n}\n这些 CSS 规则将在 1、2 和 3 级标题（分别由h1 、h2 和h3 标签表示）上方添加 84 像素的边距。\n最后，在YAML block 中添加 css: style.css",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#内部链接",
    "href": "dynamic_report.html#内部链接",
    "title": "\n6  动态报告\n",
    "section": "\n3 内部链接",
    "text": "3 内部链接\n如 文本格式 是第一节",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#脚注",
    "href": "dynamic_report.html#脚注",
    "title": "\n6  动态报告\n",
    "section": "\n4 脚注",
    "text": "4 脚注\n第一个1\nFor instance2, here is one attached to the word carrot3.",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#figure",
    "href": "dynamic_report.html#figure",
    "title": "\n6  动态报告\n",
    "section": "\n5 Figure",
    "text": "5 Figure\n\n5.1 Caption\n\nShow the codelibrary(tidyverse)\n\nmpg %&gt;%\n  ggplot(aes(x = reorder(class, hwy), y = hwy, fill = class)) +\n  geom_boxplot() +\n  xlab(\"class\") +\n  theme(legend.position = \"none\")\n\n\n\nFigure: Here is a really important caption.\n\n\n\n标题文本居中\ninclude-in-header:\n   - text: |\n       &lt;style&gt;\n       figcaption {\n         text-align: center;\n       }\n       &lt;/style&gt;\n\n5.2 交互式图\n\nShow the codelibrary(plotly)\np &lt;- mpg %&gt;%\n  ggplot(aes(x = reorder(class, hwy), y = hwy, fill = class)) +\n  geom_boxplot() +\n  xlab(\"class\") +\n  theme(legend.position = \"none\")\n\n# Turn it interactive with ggplotly\np &lt;- ggplotly(p)\np\n\n\n\n\n\n\n5.3 选项卡\nDiv .class .panel-tabset .nav-pills\n\n\nScatterplot\nBoxplot\nBarplot\n\n\n\n\nShow the codempg %&gt;%\n  ggplot(aes(x = reorder(class, hwy), y = hwy, fill = class)) +\n  geom_point() +\n  xlab(\"class\") +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n\nShow the codempg %&gt;%\n  ggplot(aes(x = reorder(class, hwy), y = hwy, fill = class)) +\n  geom_boxplot() +\n  xlab(\"class\") +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n\nShow the codempg %&gt;%\n  ggplot(aes(x = reorder(class, hwy), y = hwy, fill = class)) +\n  geom_bar(stat = \"identity\") +\n  xlab(\"class\") +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n\n\n5.4 全宽图\n\nShow the code\nlibrary(patchwork)\nlibrary(ggplot2)\n\nggplot(mtcars) + geom_point(aes(mpg, disp))+\nggplot(mtcars) + geom_boxplot(aes(gear, disp, group = gear))+\nggplot(mtcars) + geom_smooth(aes(disp, qsec))+\nggplot(mtcars) + geom_bar(aes(carb))\n\n\n\n\n\n\n\nShow the codeplot(1:25,1:25,pch=c(1:25))\nplot(1:25,c(1:25)^2,type=\"b\",pch=c(1:25))\n\n\n\n\n\n\n\n\n\n(a) 点\n\n\n\n\n\n\n\n\n\n(b) 线\n\n\n\n\n\n\n图 1: 左右图\n\n\n如左图 图 6.1 (a) 所示，点有25种不同的形状，\n右图 图 6.1 (b) 所示。\n\n5.4.1 EDA\n引用章节： Section 6.5.4.1 and Section 6.7\n引用图片 图 6.2 shows two histograms displaying the distributions of price and area individually.\n直方图ggplot(mpg, aes(cty)) +\n  geom_histogram() +\n  labs(title = \"Histogram of cty\")\n\nggplot(mpg, aes(x =hwy)) +\n  geom_histogram() +\n  labs(title = \"Histogram of hwy\")\n\n\n\n\n\n\n\n\n\n(a) Histogram of ctys\n\n\n\n\n\n\n\n\n\n(b) Histogram of hwys\n\n\n\n\n\n\n图 2: Histograms of mpg",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#表格",
    "href": "dynamic_report.html#表格",
    "title": "\n6  动态报告\n",
    "section": "\n6 表格",
    "text": "6 表格\n表 6.1 displays basic summary statistics for these two variables.\n\nShow the codempg %&gt;%\n  summarise(\n    mean_displ=mean(displ),\n    mean_hwy=mean(hwy),\n    mean_cty=mean(cty),\n    .by = cyl\n    ) %&gt;%\n  knitr::kable(digits = c(0, 0, 0, 0, 2))\n\n\n表 1: Table Summary statistics\n\n\n\n\ncyl\nmean_displ\nmean_hwy\nmean_cty\n\n\n\n4\n2\n29\n21\n\n\n6\n3\n23\n16\n\n\n8\n5\n18\n13\n\n\n5\n2\n29\n20",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#sec-formula",
    "href": "dynamic_report.html#sec-formula",
    "title": "\n6  动态报告\n",
    "section": "\n7 公式",
    "text": "7 公式\nBlack-Scholes (式 6.1) is a mathematical model that seeks to explain the behavior of financial derivatives, most commonly options:\n\\[ \\frac{\\partial \\mathrm C}{ \\partial \\mathrm t } + \\frac{1}{2}\\sigma^{2} \\mathrm S^{2} \\frac{\\partial^{2} \\mathrm C}{\\partial \\mathrm C^2}   + \\mathrm r \\mathrm S \\frac{\\partial \\mathrm C}{\\partial \\mathrm S}\\ =   \\mathrm r \\mathrm C   \\tag{1}\\]\nWe can fit a simple linear regression model of the form shown in 式 6.2.\n\\[\nprice = \\hat{\\beta}_0 + \\hat{\\beta}_1 \\times area + \\epsilon\n\\tag{2}\\]",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#callout",
    "href": "dynamic_report.html#callout",
    "title": "\n6  动态报告\n",
    "section": "\n8 Callout",
    "text": "8 Callout\n\n\n\n\n\n\nNote\n\n\n\nNote that there are five types of callouts, including: note, tip, warning, caution, and important.\n\n\n\n\n\n\n\n\nTip\n\n\n\nThis is an example of an tip callout\n\n\n\n\n\n\n\n\nCaution\n\n\n\nThis is an example of an caution callout\n\n\n\n\n\n\n\n\nWarning\n\n\n\nThis is an example of an warning callout\n\n\n\n\n\n\n\n\nImportant\n\n\n\nThis is an example of an important callout\n\n\n\n\n\n\n\n\nTip 1\n\n\n\n交叉引用 a Tip\nAdd an ID starting with #tip- to reference a tip.\n\n\nSee Tip 6.1…\n自定义callout\n\n\n\n\n\n\n\nNote\n\n\n\nThis is a custom callout.\nUsing CSS, you can control pretty much everything.\nThis div is even shaking every now and then 🙃\n\n\n\n\n\n标注类型\n前缀\n\n\n\nnote\n#nte-\n\n\ntip\n#tip-\n\n\nwarning\n#wrn-\n\n\nimportant\n#imp-\n\n\ncaution\n#cau-",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#页边距",
    "href": "dynamic_report.html#页边距",
    "title": "\n6  动态报告\n",
    "section": "\n9 页边距",
    "text": "9 页边距\n\n9.1 R结果\n\nShow the codeknitr::kable(\n  mtcars[1:3, 1:3]\n)\n\n\n\n\n\nmpg\ncyl\ndisp\n\n\n\nMazda RX4\n21.0\n6\n160\n\n\nMazda RX4 Wag\n21.0\n6\n160\n\n\nDatsun 710\n22.8\n4\n108\n\n\n\n\n\n9.2 Div\n\n\nHi! I’m a side note! 🔥",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#latex",
    "href": "dynamic_report.html#latex",
    "title": "\n6  动态报告\n",
    "section": "\n10 LaTex",
    "text": "10 LaTex\n\n10.1 公式对齐\n\\[\\begin{aligned}\n  f(x) =& \\sum_{k=0}^\\infty \\frac{1}{k!} x^k \\\\\n  =& e^x\n\\end{aligned}\\]\n\n10.2 括号等高\n\\[\\phi(x) = \\frac{1}{\\sqrt{2\\pi}} \\exp\\left\\{ \\frac{1}{2} x^2 \\right\\} \\]\n\n10.3 矩阵\n\\[\n\\begin{bmatrix}\nx_{11} & x_{12}&...&x_{1p} \\\\\nx_{21} & x_{22}&...&x_{2p} \\\\\n\\vdots &\\vdots &   &\\vdots\\\\\nx_{n1} & x_{n2}&...&x_{np} \\\\\n\\end{bmatrix}\n\\]\n\n10.4 向量表示\n\\[   \\boldsymbol{v} = (v_1, v_2)^T \\]",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#定理类段落",
    "href": "dynamic_report.html#定理类段落",
    "title": "\n6  动态报告\n",
    "section": "\n11 定理类段落",
    "text": "11 定理类段落\n\n术语\n\n定义：三角形的内角和等于180°。\n\n\n或者\n引用Theorem 6.1。\n\nTheorem 1 (勒贝格定理) 一元函数黎曼可积， 当且仅当其不连续点的集合为零测集。\n\n\n\n环境名\n默认显示名\n标签前缀\n\n\n\ntheorem\nTheorem\n#thm-\n\n\nlemma\nLemma\n#lem-\n\n\ncorollary\nCorollary\n#cor-\n\n\nproposition\nProposition\n#prp-\n\n\nconjecture\nConjecture\n#cnj-\n\n\ndefinition\nDefinition\n#def-\n\n\nexample\nExample\n#exm-\n\n\nexercise\nExercise\n#exr-",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#opts_chunkset.r",
    "href": "dynamic_report.html#opts_chunkset.r",
    "title": "\n6  动态报告\n",
    "section": "\n12 _opts_chunk$set.R",
    "text": "12 _opts_chunk$set.R\n\nShow the codeknitr::opts_chunk$set(\n  # comment = \"#&gt;\",\n  # collapse = TRUE,\n  # cache = TRUE,\n  # message = FALSE,\n  # error = FALSE,\n)\nggplot2::theme_set(new = ggplot2::theme_classic())",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#html",
    "href": "dynamic_report.html#html",
    "title": "\n6  动态报告\n",
    "section": "\n13 html",
    "text": "13 html\n\n    \n\n Mr.   \n\n\nCenter\n\n\n\nText highlight\n\nCtrl+C&gt;\n\n\n小文本Text\n\n\n13.1 内联代码\nUse computed values directly in text sections. Code is evaluated at render and results appear as text.\n\nShow the codea &lt;- 1+2+3\n\n\n\n13.1.1 Knitr\na 的值为 6",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#文本高亮",
    "href": "dynamic_report.html#文本高亮",
    "title": "\n6  动态报告\n",
    "section": "\n14 文本高亮",
    "text": "14 文本高亮\n\nText highlight\n\n keyboard   Ctrl+C    &gt;",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#会话信息",
    "href": "dynamic_report.html#会话信息",
    "title": "\n6  动态报告\n",
    "section": "\n15 会话信息",
    "text": "15 会话信息\n\n\nSession Information,click to show\n\n\nShow the codesessionInfo()\n#&gt; R version 4.4.1 (2024-06-14 ucrt)\n#&gt; Platform: x86_64-w64-mingw32/x64\n#&gt; Running under: Windows 10 x64 (build 19045)\n#&gt; \n#&gt; Matrix products: default\n#&gt; \n#&gt; \n#&gt; locale:\n#&gt; [1] LC_COLLATE=Chinese (Simplified)_China.utf8 \n#&gt; [2] LC_CTYPE=Chinese (Simplified)_China.utf8   \n#&gt; [3] LC_MONETARY=Chinese (Simplified)_China.utf8\n#&gt; [4] LC_NUMERIC=C                               \n#&gt; [5] LC_TIME=Chinese (Simplified)_China.utf8    \n#&gt; \n#&gt; time zone: Asia/Shanghai\n#&gt; tzcode source: internal\n#&gt; \n#&gt; attached base packages:\n#&gt; [1] stats     graphics  grDevices utils     datasets  methods   base     \n#&gt; \n#&gt; other attached packages:\n#&gt;  [1] plotly_4.10.4    writexl_1.5.0    readxl_1.4.3     patchwork_1.2.0 \n#&gt;  [5] lubridate_1.9.3  forcats_1.0.0    stringr_1.5.1    dplyr_1.1.4     \n#&gt;  [9] purrr_1.0.2      readr_2.1.5      tidyr_1.3.1      tibble_3.2.1    \n#&gt; [13] ggplot2_3.5.1    tidyverse_2.0.0  conflicted_1.2.0 showtext_0.9-7  \n#&gt; [17] showtextdb_3.0   sysfonts_0.8.9  \n#&gt; \n#&gt; loaded via a namespace (and not attached):\n#&gt;  [1] gtable_0.3.5            xfun_0.45               htmlwidgets_1.6.4      \n#&gt;  [4] lattice_0.22-6          tzdb_0.4.0              crosstalk_1.2.1        \n#&gt;  [7] vctrs_0.6.5             tools_4.4.1             generics_0.1.3         \n#&gt; [10] stats4_4.4.1            fansi_1.0.6             pkgconfig_2.0.3        \n#&gt; [13] Matrix_1.7-0            data.table_1.15.4       S4Vectors_0.42.1       \n#&gt; [16] lifecycle_1.0.4         GenomeInfoDbData_1.2.12 farver_2.1.2           \n#&gt; [19] compiler_4.4.1          munsell_0.5.1           codetools_0.2-20       \n#&gt; [22] GenomeInfoDb_1.40.1     htmltools_0.5.8.1       lazyeval_0.2.2         \n#&gt; [25] yaml_2.3.9              pillar_1.9.0            cachem_1.1.0           \n#&gt; [28] nlme_3.1-165            tidyselect_1.2.1        digest_0.6.36          \n#&gt; [31] stringi_1.8.4           splines_4.4.1           labeling_0.4.3         \n#&gt; [34] fastmap_1.2.0           grid_4.4.1              colorspace_2.1-0       \n#&gt; [37] cli_3.6.3               magrittr_2.0.3          utf8_1.2.4             \n#&gt; [40] withr_3.0.0             scales_1.3.0            UCSC.utils_1.0.0       \n#&gt; [43] timechange_0.3.0        rmarkdown_2.27          XVector_0.44.0         \n#&gt; [46] httr_1.4.7              cellranger_1.1.0        hms_1.1.3              \n#&gt; [49] memoise_2.0.1           evaluate_0.24.0         knitr_1.48             \n#&gt; [52] GenomicRanges_1.56.1    IRanges_2.38.1          viridisLite_0.4.2      \n#&gt; [55] mgcv_1.9-1              rlang_1.1.4             glue_1.7.0             \n#&gt; [58] BiocGenerics_0.50.0     rstudioapi_0.16.0       jsonlite_1.8.8         \n#&gt; [61] R6_2.5.1                zlibbioc_1.50.0",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "dynamic_report.html#footnotes",
    "href": "dynamic_report.html#footnotes",
    "title": "\n6  动态报告\n",
    "section": "",
    "text": "WANG,A.,et al.(2025)↩︎\ndafhaifhafoahfo↩︎\nThe carrot (Daucus carota subsp. sativus) is a root vegetable, typically orange in color↩︎",
    "crumbs": [
      "R Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>动态报告</span>"
    ]
  },
  {
    "objectID": "control_structure.html",
    "href": "control_structure.html",
    "title": "\n7  控制结构\n",
    "section": "",
    "text": "7.1 顺序结构",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>控制结构</span>"
    ]
  },
  {
    "objectID": "control_structure.html#分支结构",
    "href": "control_structure.html#分支结构",
    "title": "\n7  控制结构\n",
    "section": "\n7.2 分支结构",
    "text": "7.2 分支结构\n\n7.2.1 if() 和 else\n\nShow the codex &lt;- 10\n\nif(x %%3 ==0) {\n    message(\"能被3整除\")\n} else {\n    message(\"不能被3整除\")\n}\n\n\n\n7.2.2 ifelse()\n\nShow the codex &lt;- c(10,9)\nifelse(x %%3 ==0,\"能被3整除\",\"不能被3整除\")\n#&gt; [1] \"不能被3整除\" \"能被3整除\"\nif_else(x %%3 ==0,\"能被3整除\",\"不能被3整除\")\n#&gt; [1] \"不能被3整除\" \"能被3整除\"\n\n\n\n7.2.3 case_when()\n\nShow the codex &lt;- 1:10\ndplyr::case_when(\n  x %% 35 == 0 ~ \"fizz buzz\",\n  x %% 5 == 0 ~ \"fizz\",\n  x %% 7 == 0 ~ \"buzz\",\n  is.na(x) ~ \"???\",\n  TRUE ~ as.character(x)\n)\n#&gt;  [1] \"1\"    \"2\"    \"3\"    \"4\"    \"fizz\" \"6\"    \"buzz\" \"8\"    \"9\"    \"fizz\"\n\n\n\n7.2.4 switch()\n\nShow the code# 如果多个输入具有相同的输出，则可以将右侧留空，输入将“掉入”到下一个值。这模仿了 C 语句的行为\nnlegs &lt;- function(x) {\n  switch(x,\n    cow = ,\n    horse = ,\n    dog = 4,\n    human = ,\n    chicken = 2,\n    plant = 0,\n    stop(\"Unknown input\")  #最后应该始终抛出错误，否则不匹配的输入将返回 NULL\n  )\n}\nnlegs(\"cow\")\n#&gt; [1] 4\n\nnlegs(\"do6\")\n#&gt; Error in nlegs(\"do6\"): Unknown input",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>控制结构</span>"
    ]
  },
  {
    "objectID": "control_structure.html#循环结构",
    "href": "control_structure.html#循环结构",
    "title": "\n7  控制结构\n",
    "section": "\n7.3 循环结构",
    "text": "7.3 循环结构\n\n7.3.1 for\n\nShow the codefor(i in 1:5){\n    print(1:i)\n}\n#&gt; [1] 1\n#&gt; [1] 1 2\n#&gt; [1] 1 2 3\n#&gt; [1] 1 2 3 4\n#&gt; [1] 1 2 3 4 5\n\n\n\nShow the codefor (i in 1:10) {\n  if (i &lt; 3) \n    next  # 退出当前迭代,后面不执行了\n\n  print(i)\n  \n  if (i &gt;= 5)\n    break # 退出整个循环\n}\n#&gt; [1] 3\n#&gt; [1] 4\n#&gt; [1] 5\n\n\n\n7.3.2 while()\n\nShow the codei &lt;- 0\nwhile(i&lt;=10){\n    print(i)\n    i=i+1\n}\n#&gt; [1] 0\n#&gt; [1] 1\n#&gt; [1] 2\n#&gt; [1] 3\n#&gt; [1] 4\n#&gt; [1] 5\n#&gt; [1] 6\n#&gt; [1] 7\n#&gt; [1] 8\n#&gt; [1] 9\n#&gt; [1] 10\n\n\n\nShow the codeflag &lt;- TRUE\nx &lt;- 0\ni &lt;- 0\nwhile(flag){\n    x &lt;- x+1\n    if(x%%3==0) {\n        i &lt;- i+1\n        print(x)\n    }\n    if(i==25) flag &lt;- FALSE\n}\n#&gt; [1] 3\n#&gt; [1] 6\n#&gt; [1] 9\n#&gt; [1] 12\n#&gt; [1] 15\n#&gt; [1] 18\n#&gt; [1] 21\n#&gt; [1] 24\n#&gt; [1] 27\n#&gt; [1] 30\n#&gt; [1] 33\n#&gt; [1] 36\n#&gt; [1] 39\n#&gt; [1] 42\n#&gt; [1] 45\n#&gt; [1] 48\n#&gt; [1] 51\n#&gt; [1] 54\n#&gt; [1] 57\n#&gt; [1] 60\n#&gt; [1] 63\n#&gt; [1] 66\n#&gt; [1] 69\n#&gt; [1] 72\n#&gt; [1] 75\n\n\n\n7.3.3 repeat()\n\nShow the codei &lt;- 1\n\nrepeat{\n  print(i)\n  i &lt;- i*2\n  if (i &gt; 100) break  # 跳出当前的循环\n}\n#&gt; [1] 1\n#&gt; [1] 2\n#&gt; [1] 4\n#&gt; [1] 8\n#&gt; [1] 16\n#&gt; [1] 32\n#&gt; [1] 64\n\n\n\nShow the codei &lt;- 1\n\nrepeat{\n  print(i)\n  i &lt;- i*2\n  if (i &gt; 200) break()\n  if (i &gt; 100) next()  #跳过后续代码的运行进入下一次循环\n  print(\"Can you see me?\")\n}\n#&gt; [1] 1\n#&gt; [1] \"Can you see me?\"\n#&gt; [1] 2\n#&gt; [1] \"Can you see me?\"\n#&gt; [1] 4\n#&gt; [1] \"Can you see me?\"\n#&gt; [1] 8\n#&gt; [1] \"Can you see me?\"\n#&gt; [1] 16\n#&gt; [1] \"Can you see me?\"\n#&gt; [1] 32\n#&gt; [1] \"Can you see me?\"\n#&gt; [1] 64\n#&gt; [1] 128",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>控制结构</span>"
    ]
  },
  {
    "objectID": "exception_handling.html",
    "href": "exception_handling.html",
    "title": "\n8  异常处理\n",
    "section": "",
    "text": "8.1 error\n停止执行并返回到顶部\nShow the codeh &lt;- function() stop(\"This is an error!\")\nh()\n#&gt; Error in h(): This is an error!\n\n# 不包含调用信息\nh &lt;- function() stop(\"This is an error!\", call. = FALSE)\nh()\n#&gt; Error: This is an error!\n\nh &lt;- function() rlang::abort(\"This is an error!\")\nh()\n#&gt; Error in `h()`:\n#&gt; ! This is an error!",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>异常处理</span>"
    ]
  },
  {
    "objectID": "exception_handling.html#warning",
    "href": "exception_handling.html#warning",
    "title": "\n8  异常处理\n",
    "section": "\n8.2 warning",
    "text": "8.2 warning\n捕获警告并聚合显示\n\n要使警告立即显示，请设置 options(warn = 1)\n要将警告转换为错误，请设置 options(warn = 2)。这通常是 调试警告的最简单方法，因为一旦出现错误，就可以 使用工具，例如查找源头traceback()\n使用 options(warn = 0)恢复默认行为。\n\n\nShow the codefw &lt;- function() {\n  cat(\"1\\n\")\n  warning(\"W1\")\n  cat(\"2\\n\")\n  warning(\"W2\")\n  cat(\"3\\n\")\n  warning(\"W3\",call. = FALSE)\n}\nfw()\n#&gt; 1\n#&gt; 2\n#&gt; 3\n\nfw &lt;- function() {\n  cat(\"1\\n\")\n  rlang::warn(\"W1\")\n  cat(\"2\\n\")\n  rlang::warn(\"W2\")\n  cat(\"3\\n\")\n  rlang::warn(\"W3\")\n}\nfw()\n#&gt; 1\n#&gt; 2\n#&gt; 3",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>异常处理</span>"
    ]
  },
  {
    "objectID": "exception_handling.html#message",
    "href": "exception_handling.html#message",
    "title": "\n8  异常处理\n",
    "section": "\n8.3 message",
    "text": "8.3 message\n消息立即显示\n参数quiet = TRUE 抑制所有消息suppressMessages()\n\nShow the code# 无 call. 参数\nfm &lt;- function() {\n  cat(\"1\\n\")\n  message(\"M1\")\n  cat(\"2\\n\")\n  message(\"M2\")\n  cat(\"3\\n\")\n  message(\"M3\")\n}\n\nfm()\n#&gt; 1\n#&gt; 2\n#&gt; 3",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>异常处理</span>"
    ]
  },
  {
    "objectID": "exception_handling.html#忽略信息",
    "href": "exception_handling.html#忽略信息",
    "title": "\n8  异常处理\n",
    "section": "\n8.4 忽略信息",
    "text": "8.4 忽略信息\n\n\n忽略错误：try()，最好是使用tryCatch()\n\nShow the codedefault &lt;- NULL\ntry(default=read.csv(\"possibly-bad-input.csv\"), silent = FALSE)\n#&gt; Error in try(default = read.csv(\"possibly-bad-input.csv\"), silent = FALSE): unused argument (default = read.csv(\"possibly-bad-input.csv\"))\n\n\n\n\n忽略警告。suppressWarnings()\n\nShow the codesuppressWarnings({\n    warning(\"Uhoh!\")\n    warning(\"Another warning\")\n    1\n})\n#&gt; [1] 1\n\n\n\n\n忽略消息。suppressMessages()\n\nShow the codesuppressMessages({\n    message(\"Hello there\")\n    \"ABC\"\n})\n#&gt; [1] \"ABC\"",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>异常处理</span>"
    ]
  },
  {
    "objectID": "exception_handling.html#条件处理程序",
    "href": "exception_handling.html#条件处理程序",
    "title": "\n8  异常处理\n",
    "section": "\n8.5 条件处理程序",
    "text": "8.5 条件处理程序\n\n8.5.1 条件对象\n\nShow the codecnd &lt;- rlang::catch_cnd(stop(\"An error\"))\nstr(cnd)\n#&gt; List of 2\n#&gt;  $ message: chr \"An error\"\n#&gt;  $ call   : language force(expr)\n#&gt;  - attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n\nconditionMessage(cnd)\n#&gt; [1] \"An error\"\nconditionCall(cnd)\n#&gt; force(expr)\n\n\n\n8.5.2 退出处理程序\ntryCatch()定义exitinghandlers，，通常用于处理错误情况。它允许您覆盖默认的错误行为。\n\nShow the codetryCatch(\n  error = function(cnd) {\n    # code to run when error is thrown\n  },\n  code_to_run_while_handlers_are_active\n)\n\n\n\nShow the codef3 &lt;- function(x) {\n  tryCatch(\n    error = function(cnd) NA,\n    log(x)\n  )\n}\n\nf3(\"x\")\n#&gt; [1] NA\n\n\n在发出条件信号后，控制权将传递给处理程序，并且永远不会返回到原始代码，这实际上意味着代码退出\n\nShow the codetryCatch(\n  message = function(cnd) \"There\",\n  {\n    message(\"Here\")\n    stop(\"This code is never run!\")\n  }\n)\n#&gt; [1] \"There\"\n\n\n类似Python的\ntry: \n    {}\nfinally:\n    {}\n\nShow the codetryCatch(\n  {\n    write.table(\"Hi!\", \"data/异常处理.csv\")\n  },\n  finally = {\n    # always run\n    x &lt;- read.table(\"data/异常处理.csv\")\n    print(\"你好\")\n  }\n)\n#&gt; [1] \"你好\"\n\n\n\n8.5.3 调用处理程序\nwithCallingHandlers()定义callinghandlers，适合处理非错误条件，一旦处理程序返回，代码执行将正常继续\n\nShow the codewithCallingHandlers(\n  warning = function(cnd) {\n    # code to run when warning is signalled\n  },\n  message = function(cnd) {\n    # code to run when message is signalled\n  },\n  code_to_run_while_handlers_are_active\n)\n\n\n\nShow the codetryCatch(\n  message = function(cnd) cat(\"Caught a message!\\n\"), \n  {\n    message(\"Someone there?\")\n    message(\"Why, yes!\")\n  }\n)\n#&gt; Caught a message!\n\n\nwithCallingHandlers(\n  message = function(cnd) cat(\"Caught a message!\\n\"), \n  {\n    message(\"Someone there?\")\n    message(\"Why, yes!\")\n  }\n)\n#&gt; Caught a message!\n#&gt; Caught a message!",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>异常处理</span>"
    ]
  },
  {
    "objectID": "exception_handling.html#自定义条件",
    "href": "exception_handling.html#自定义条件",
    "title": "\n8  异常处理\n",
    "section": "\n8.6 自定义条件",
    "text": "8.6 自定义条件\n\nShow the codelibrary(rlang)\n\nmy_log &lt;- function(x, base = exp(1)) {\n  if (!is.numeric(x)) {\n    abort(paste0(\n      \"`x` must be a numeric vector; not \", typeof(x), \".\"\n    ))\n  }\n  if (!is.numeric(base)) {\n    abort(paste0(\n      \"`base` must be a numeric vector; not \", typeof(base), \".\"\n    ))\n  }\n\n  base::log(x, base = base)\n}\n\n\n\nShow the codemy_log(letters)\n#&gt; Error in `my_log()`:\n#&gt; ! `x` must be a numeric vector; not character.\nmy_log(1:10, base = letters)\n#&gt; Error in `my_log()`:\n#&gt; ! `base` must be a numeric vector; not character.\n\n\n\nShow the codeabort_bad_argument &lt;- function(arg, must, not = NULL) {\n  msg &lt;- glue::glue(\"`{arg}` must {must}\")\n  if (!is.null(not)) {\n    not &lt;- typeof(not)\n    msg &lt;- glue::glue(\"{msg}; not {not}.\")\n  }\n  \n  abort(\"error_bad_argument\", \n    message = msg, \n    arg = arg, \n    must = must, \n    not = not\n  )\n}\n\nstop_custom &lt;- function(.subclass, message, call = NULL, ...) {\n  err &lt;- structure(\n    list(\n      message = message,\n      call = call,\n      ...\n    ),\n    class = c(.subclass, \"error\", \"condition\")\n  )\n  stop(err)\n}\n\nerr &lt;- catch_cnd(\n  stop_custom(\"error_new\", \"This is a custom error\", x = 10)\n)\nclass(err)\n#&gt; [1] \"error_new\" \"error\"     \"condition\"\nerr$x\n#&gt; [1] 10\n\n\n重写my_log\n\nShow the codemy_log &lt;- function(x, base = exp(1)) {\n  if (!is.numeric(x)) {\n    abort_bad_argument(\"x\", must = \"be numeric\", not = x)\n  }\n  if (!is.numeric(base)) {\n    abort_bad_argument(\"base\", must = \"be numeric\", not = base)\n  }\n\n  base::log(x, base = base)\n}\n\n\n\nShow the codemy_log(letters)\n#&gt; Error in `abort_bad_argument()`:\n#&gt; ! `x` must be numeric; not character.\nmy_log(letters)\n#&gt; Error in `abort_bad_argument()`:\n#&gt; ! `x` must be numeric; not character.",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>异常处理</span>"
    ]
  },
  {
    "objectID": "functions.html",
    "href": "functions.html",
    "title": "\n9  函数\n",
    "section": "",
    "text": "9.1 函数类型\nR 语言中函数主要有内置函数（builtin） 、 特殊函数（special ）和 闭包函数（closure）三种类型\nShow the codetypeof(sum)    \n#&gt; [1] \"builtin\"\ntypeof(`[`)\n#&gt; [1] \"special\"\ntypeof(`%&gt;%`)\n#&gt; [1] \"closure\"",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#函数组件",
    "href": "functions.html#函数组件",
    "title": "\n9  函数\n",
    "section": "\n9.2 函数组件",
    "text": "9.2 函数组件\n\n\nformals() 参数列表\n\nbody() 函数体，包括异常处理、执行程序\n\nenvironment() 确定函数如何查找与名称相关联的值的数据结构，俗称环境\n\n\nShow the codef02 &lt;- function(x, y) {\n  # 注释\n  x + y\n}\n\nformals(f02)\n#&gt; $x\n#&gt; \n#&gt; \n#&gt; $y\nbody(f02)\n#&gt; {\n#&gt;     x + y\n#&gt; }\nenvironment(f02)\n#&gt; &lt;environment: R_GlobalEnv&gt;\n\n\n属性 srcref（source reference ），指向函数的源代码\n\nShow the codeattributes(f02)\n#&gt; $srcref\n#&gt; function(x, y) {\n#&gt;   # 注释\n#&gt;   x + y\n#&gt; }",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#sec-Primitive_functions",
    "href": "functions.html#sec-Primitive_functions",
    "title": "\n9  函数\n",
    "section": "\n9.3 原函数",
    "text": "9.3 原函数\n在R中，原函数（primitive functions） 不具备上述三个组件，而是直接通过.Primitive()调用C语言代码实现。\n\nShow the codeformals(sum)\n#&gt; NULL\nbody(sum)\n#&gt; NULL\nenvironment(sum)\n#&gt; NULL\nattributes(sum)\n#&gt; NULL\n\n\n在R语言中，“Primitive functions”（始函数）是使用C语言实现的核心函数，它们是R的基础并且直接映射到底层操作，从而提供了更高的运行效率。原始函数的类型为builtin或special，并且它们通常不接受延迟求值的参数，而是在调用时立即求值 。\n原函数有内置函数（builtin） 和 特殊函数（special ）两种类型。\n\nShow the codesum\n#&gt; function (..., na.rm = FALSE)  .Primitive(\"sum\")\ntypeof(sum)\n#&gt; [1] \"builtin\"\n.Primitive(\"sum\")\n#&gt; function (..., na.rm = FALSE)  .Primitive(\"sum\")\nget(\"sum\",envir = baseenv())\n#&gt; function (..., na.rm = FALSE)  .Primitive(\"sum\")\n\n`[`\n#&gt; .Primitive(\"[\")\ntypeof(`[`)\n#&gt; [1] \"special\"\n.Primitive(\"[\")\n#&gt; .Primitive(\"[\")",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#first-class-functions",
    "href": "functions.html#first-class-functions",
    "title": "\n9  函数\n",
    "section": "\n9.4 First-class functions",
    "text": "9.4 First-class functions\n在编程语言中，“First-class functions”（一级函数或函数作为一等公民）是函数式编程的一个核心概念，它意味着函数可以像任何其他类型的数据（如数字、字符串和对象）一样被传递和操作。具体来说，一级函数具有以下几个关键特性：\n\n可赋值：可以给函数分配一个变量。\n可传递：可以作为参数传递给其他函数。\n可返回：可以从其他函数中作为返回值。\n可创建：可以在运行时创建新函数。\n\n这些特性使得一级函数非常灵活，并且允许编程者以声明式的方式构建复杂的逻辑。\nR语言是一种支持函数式编程的语言，它自然地支持一级函数。以下是R语言中一级函数的一些应用示例：\n\n\n将函数赋值给变量：\n\nShow the codef01 &lt;- function(x) {\n  x^2\n}\n\n\n\n\n将函数作为参数传递：\n\nShow the codeapply_func &lt;- function(x, f) {\n  f(x)\n}\nresult &lt;- apply_func(10, f01) # 将函数f01()作为参数传递\n\n\n\n\n从函数中返回函数：\n\nShow the codecreate_multiplier &lt;- function(n) {\n  function(x) {\n    x * n\n  }\n}\n\ndouble &lt;- create_multiplier(2)\nresult &lt;- double(10) # 返回20\n\n\n\n\n匿名函数 anonymous function：\n\nShow the codesapply(c(1,2,3,4,5), function(x) x*2)\n#&gt; [1]  2  4  6  8 10\n\n\n\n\nLambda函数：在较新版本的R中，可以使用~来定义Lambda函数，是一种简洁的匿名函数定义方式。\n\nShow the codemap_dbl(1:5, ~.x * 2)\n#&gt; [1]  2  4  6  8 10\n\n\n\n\n函数的高阶特性：\n\nShow the codemap_values &lt;- function(x, f) {\n  vapply(x, f, FUN.VALUE = double(1))\n}\n\nresult &lt;- map_values(c(1,2,3,4,5), function(x) x ^ 2)\n\n\n在R中，vapply、sapply、lapply、mapply 等函数都是高阶函数的例子，它们可以接受另一个函数作为参数，并对数据集执行操作。\n\n\n\n9.4.1 一级函数的优势：\n\n代码复用：通过将函数作为参数，可以编写更通用、更可重用的代码。\n模块化：一级函数有助于将程序分解为更小、更易于管理的部分。\n抽象：它们允许开发者创建更高级别的抽象，简化复杂逻辑的表达。\n灵活性：一级函数提供了编写灵活和动态代码的能力。\n\n函数式编程和一级函数是现代编程范式的重要组成部分，它们在数据处理和统计计算中尤其有用，这也是R语言作为统计计算语言的一个强大特性。\n\n9.4.2 函数列表\n\nShow the codefuns &lt;- list(\n  half = function(x) x / 2,\n  double = function(x) x * 2\n)\nfuns$double(10)\n#&gt; [1] 20\n\n\n\n9.4.3 函数闭包\n在 R 中，你经常会看到称为 闭包（closure）（内嵌在函数体的函数） 的函数。\n函数是对象，使用创建函数闭包（function closure）时的即存在的状态值进行封装的函数。\n\nShow the codetypeof(ggplot)\n#&gt; [1] \"closure\"",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#函数调用",
    "href": "functions.html#函数调用",
    "title": "\n9  函数\n",
    "section": "\n9.5 函数调用",
    "text": "9.5 函数调用\n\nShow the codeargs &lt;- list(1:10, na.rm = TRUE)  # 参数列表\ndo.call(mean, args)\n#&gt; [1] 5.5",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#词法作用域",
    "href": "functions.html#词法作用域",
    "title": "\n9  函数\n",
    "section": "\n9.6 词法作用域",
    "text": "9.6 词法作用域\n词法作用域lexical scoping ，即函数运行中需要使用某个变量时，从其定义时的环境向外层逐层查找，而不是在调用时的环境中查找。这种查找找到变量对应的存储空间后，使用其当前值，而不是历史值，这种规则称为动态查找（dynamic lookup）\n函数的作用域（scope）在R中称为环境。当一个函数被创建后，R 中存在一个让这个函数发挥作用的环境。\n在启动 R 之后，我们就进去了一个全局环境之中（Global Environment），我们创建的各自变量、函数都会处于其中。\n对象可以通过参数传递到函数中，但不会被函数改变。传递的是对象的副本而不是对象本身。除非使用 &lt;&lt;- 特殊赋值符。\n\nShow the codex &lt;- 2\ny &lt;- 3\nz &lt;- 4\nf &lt;- function(w){\n    z &lt;- 2\n    x &lt;- w*y*z\n    return(x)\n}\nf(x)\n#&gt; [1] 12\nx\n#&gt; [1] 2\ny\n#&gt; [1] 3\nz\n#&gt; [1] 4\n\n\nLexical scoping:\n\nName masking\nFunctions versus variables\nA fresh start\nDynamic lookup\n\n\n9.6.1 Name masking\n在函数内部定义的名称会掩盖在函数外部定义的名称。\n\nShow the codex &lt;- 10\ny &lt;- 20\ng02 &lt;- function() {\n  x &lt;- 1\n  y &lt;- 2\n  c(x, y)\n}\ng02()\n#&gt; [1] 1 2\n\n\n如果未在函数中定义名称，则 R 将向上查找。\n\nShow the codex &lt;- 2\ng03 &lt;- function() {\n  y &lt;- 1\n  c(x, y)\n}\ng03()\n#&gt; [1] 2 1\n\ny\n#&gt; [1] 20",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#惰性求值",
    "href": "functions.html#惰性求值",
    "title": "\n9  函数\n",
    "section": "\n9.7 惰性求值",
    "text": "9.7 惰性求值\nLazy evaluation 是一种将操作延迟到真正需要它的结果时才执行的优化技术。\n惰性求值由称为 promise 或thunk 的数据结构提供支持。\n\n9.7.1 promise\n一个表达式，调用函数的环境，一个值，局部变量作用域求值\n\nShow the codedouble &lt;- function(x) { \n  message(\"Calculating...\")\n  x * 2\n}\n\nh03 &lt;- function(x) {\n  c(x, x)\n}\n\nh03(double(20))\n#&gt; [1] 40 40",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#传递参数",
    "href": "functions.html#传递参数",
    "title": "\n9  函数\n",
    "section": "\n9.8 传递参数",
    "text": "9.8 传递参数\n关键字传参，位置传参\n\n9.8.1 默认参数\n\nShow the codeh04 &lt;- function(x = 1, y = x * 2, z = a + b) {\n  a &lt;- 10\n  b &lt;- 100\n  \n  c(x, y, z)\n}\nh04()\n#&gt; [1]   1   2 110\n\n# 查看参数的名称和默认值\nargs(h04)\n#&gt; function (x = 1, y = x * 2, z = a + b) \n#&gt; NULL\n\n\n\n9.8.2 缺失参数\n\nShow the codeh06 &lt;- function(x = 10) {\n  list(missing(x), x)\n}\nstr(h06())\n#&gt; List of 2\n#&gt;  $ : logi TRUE\n#&gt;  $ : num 10\n\nstr(h06(10))\n#&gt; List of 2\n#&gt;  $ : logi FALSE\n#&gt;  $ : num 10",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#特殊参数...",
    "href": "functions.html#特殊参数...",
    "title": "\n9  函数\n",
    "section": "\n9.9 特殊参数...\n",
    "text": "9.9 特殊参数...\n\nvariable arguments，有了它，函数可以接受任意数量的附加参数。还可以将附加参数传递给另一个函数\n\nShow the codeaddAll &lt;- function(x, ...) {\n  args &lt;- list(...)\n  for (a in args) {\n    x &lt;- x + a\n  }\n  return(x)\n}\naddAll(3, 4, 5, 6, 7, 8)\n#&gt; [1] 33\n\n\n使用list() 将传入的 ... 转换为列表，然后再进行处理\n\nShow the codei01 &lt;- function(y, z) {\n  list(y = y, z = z)\n}\n\ni02 &lt;- function(x, ...) {\n  i01(...)\n}\nstr(i02(x = 1, y = 2, z = 3))\n#&gt; List of 2\n#&gt;  $ y: num 2\n#&gt;  $ z: num 3\ni02(x = 1, y = 2, z = 3)\n#&gt; $y\n#&gt; [1] 2\n#&gt; \n#&gt; $z\n#&gt; [1] 3\n\n\n特殊形式 ..N，按位置引用参数，使用 ..1、..2 等直接引用 … 对象中的第 1 个元素、第 2 个元素。\n\nShow the codei03 &lt;- function(...) {\n  list(first = ..1, third = ..3)\n}\nstr(i03(1, 2, 3))\n#&gt; List of 2\n#&gt;  $ first: num 1\n#&gt;  $ third: num 3\n\n\nlist(...)计算参数并将它们存储在列表中\n\nShow the codei04 &lt;- function(...) {\n  list(...)\n}\nstr(i04(a = 1, b = 2))\n#&gt; List of 2\n#&gt;  $ a: num 1\n#&gt;  $ b: num 2",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#退出函数",
    "href": "functions.html#退出函数",
    "title": "\n9  函数\n",
    "section": "\n9.10 退出函数",
    "text": "9.10 退出函数\n返回一个对象，或者，错误\n\n9.10.1 隐式返回值\n最后计算的表达式是返回值\n\nShow the codej01 &lt;- function(x) {\n  if (x &lt; 10) {\n    0\n  } else {\n    10\n  }\n}\nj01(5)\n#&gt; [1] 0\n\nj01(15)\n#&gt; [1] 10\n\n\n\n9.10.2 显示返回值\n调用return()\n\nShow the codej02 &lt;- function(x) {\n  if (x &lt; 10) {\n    return(0)\n  } else {\n    return(10)\n  }\n}\n\n\n\n9.10.3 不可见值\n大多数函数都以可见方式返回：在交互式上下文中调用函数会自动打印结果\n\nShow the codej03 &lt;- function() 1\nj03()\n#&gt; [1] 1\n\n\n通过应用invisible()于最后一个值来阻止自动打印：\n\nShow the codej04 &lt;- function() invisible(1)\nj04()\n\n\n若要验证此值是否确实存在，可以显式打印它或将其括在括号中,或者使用返回值和可见性标志：withVisible()\n\nShow the codeprint(j04())\n#&gt; [1] 1\n\n\n(j04())\n#&gt; [1] 1\n\nwithVisible(j04())\n#&gt; $value\n#&gt; [1] 1\n#&gt; \n#&gt; $visible\n#&gt; [1] FALSE\n\n\n不可见返回的最常见函数是：&lt;-\n\nShow the codea &lt;- 2\n(a &lt;- 2)\n#&gt; [1] 2\n\na &lt;- b &lt;- c &lt;- d &lt;- 2\n\n\n\n9.10.4 Errors\n如果函数无法完成其分配的任务，则应抛出错误，并立即终止函数的执行。\n\nShow the codej05 &lt;- function() {\n  stop(\"I'm an error\")\n  return(10)\n}\nj05()\n#&gt; Error in j05(): I'm an error\n\n\n\n9.10.5 退出处理程序\n\nShow the codej06 &lt;- function(x) {\n  cat(\"Hello\\n\")\n  on.exit(cat(\"Goodbye!\\n\"), add = TRUE) # 使用  add = TRUE 时始终设置\n  \n  if (x) {\n    return(10)\n  } else {\n    stop(\"Error\")\n  }\n}\n\nj06(TRUE)\n#&gt; Hello\n#&gt; Goodbye!\n#&gt; [1] 10\n\n\nj06(FALSE)\n#&gt; Hello\n#&gt; Error in j06(FALSE): Error\n#&gt; Goodbye!",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#函数形式",
    "href": "functions.html#函数形式",
    "title": "\n9  函数\n",
    "section": "\n9.11 函数形式",
    "text": "9.11 函数形式\n\nprefix： foofy(a, b, c)\n\ninfix： x + y\n\nreplacement：names(df) &lt;- c(\"a\", \"b\", \"c\")\n\nspecial：[[, if ,for\n\n\n\nShow the codex &lt;- 2\ny &lt;- 1\nx + y\n#&gt; [1] 3\n`+`(x, y)\n#&gt; [1] 3\n\n\nfor(i in 1:10) print(i)\n#&gt; [1] 1\n#&gt; [1] 2\n#&gt; [1] 3\n#&gt; [1] 4\n#&gt; [1] 5\n#&gt; [1] 6\n#&gt; [1] 7\n#&gt; [1] 8\n#&gt; [1] 9\n#&gt; [1] 10\n`for`(i, 1:10, print(i))\n#&gt; [1] 1\n#&gt; [1] 2\n#&gt; [1] 3\n#&gt; [1] 4\n#&gt; [1] 5\n#&gt; [1] 6\n#&gt; [1] 7\n#&gt; [1] 8\n#&gt; [1] 9\n#&gt; [1] 10\n\n\n\n9.11.1 前缀形式\n是 R 代码中最常见的形式，参数按确切名称匹配，然后与唯一前缀匹配，最后按位置匹配。\n\nShow the codek01 &lt;- function(abcdef, bcde1, bcde2) {\n  list(a = abcdef, b1 = bcde1, b2 = bcde2)\n}\nstr(k01(2, 3, abcdef = 1))\n#&gt; List of 3\n#&gt;  $ a : num 1\n#&gt;  $ b1: num 2\n#&gt;  $ b2: num 3\nstr(k01(2, 3, a = 1))  # 部分匹配\n#&gt; List of 3\n#&gt;  $ a : num 1\n#&gt;  $ b1: num 2\n#&gt;  $ b2: num 3\noptions(warnPartialMatchArgs = TRUE)\nx &lt;- k01(a = 1, 2, 3)\n\n\n\n9.11.2 中缀形式\n\nShow the code`%+%` &lt;- function(a, b) paste0(a, b)\n\"new \" %+% \"string\"\n#&gt; [1] \"new string\"\n\n\n\n9.11.3 替换形式\n\nShow the code`second&lt;-` &lt;- function(x, value) {\n  x[2] &lt;- value\n  x\n}\nx &lt;- 1:10\nsecond(x) &lt;- 5L\nx\n#&gt;  [1]  1  5  3  4  5  6  7  8  9 10\n\n\n\n9.11.4 特殊形式\n所有特殊形式都作为原函数 实现（即在 C 中），这意味着打印这些函数没有信息。\n\nShow the code`for`\n#&gt; .Primitive(\"for\")\nformals(`for`)\n#&gt; NULL",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "environments.html",
    "href": "environments.html",
    "title": "\n10  环境\n",
    "section": "",
    "text": "10.1 环境类型",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>环境</span>"
    ]
  },
  {
    "objectID": "environments.html#环境类型",
    "href": "environments.html#环境类型",
    "title": "\n10  环境\n",
    "section": "",
    "text": "10.1.1 当前环境与全局环境\n\nShow the code# 访问全局环境\nglobalenv()\n#&gt; &lt;environment: R_GlobalEnv&gt;\n\n# 访问当前环境\nenvironment()\n#&gt; &lt;environment: R_GlobalEnv&gt;\n\n\ncurrent_env()\nglobal_env()\n\nShow the codelibrary(rlang)\nidentical(global_env(), current_env())\n#&gt; [1] TRUE\n\n# 环境不是向量\nglobal_env() == current_env() \n#&gt; Error in global_env() == current_env(): comparison (==) is possible only for atomic and list types\n\n\n\nShow the codetypeof(globalenv())\n#&gt; [1] \"environment\"\nclass(globalenv())\n#&gt; [1] \"environment\"\n\nis.atomic(globalenv())\n#&gt; [1] FALSE\nis.list(globalenv())\n#&gt; [1] FALSE\n\nis.environment(globalenv())\n#&gt; [1] TRUE\n\n\n\n10.1.2 父环境\n每个环境都有一个父环境（parent）。用于实现词法作用域：如果在当前环境中找不到名称，则 R 将在其父环境中查找（依此类推）。可以通过向 env() 提供未命名的参数来设置父环境。如果不提供它，它将默认为当前环境。\n\nShow the codee2a&lt;- env(d = 4, e = 5)\ne2b &lt;- env(e2a, a = 1, b = 2, c = 3)\n\n\n\n\n\n\ne2a 是 e2b 的父级。\n\nShow the code# 查看父级\nidentical(e2a, env_parent(e2b))\n#&gt; [1] TRUE\nenv_parent(e2a)\n#&gt; &lt;environment: R_GlobalEnv&gt;\n\n\n默认情况下，当到达全局环境时停止。如果覆盖默认行为，则可以看到全局环境的父级包括每个加载的包。\n\nShow the code# 查看所有父级\ne2a\n#&gt; &lt;environment: 0x000001cdd7f51e30&gt;\nenv_parents(e2b)\n#&gt; [[1]]   &lt;env: 0x000001cdd7f51e30&gt;\n#&gt; [[2]] $ &lt;env: global&gt;\nenv_parents(e2b, last = empty_env())\n#&gt;  [[1]]   &lt;env: 0x000001cdd7f51e30&gt;\n#&gt;  [[2]] $ &lt;env: global&gt;\n#&gt;  [[3]] $ &lt;env: .conflicts&gt;\n#&gt;  [[4]] $ &lt;env: package:lobstr&gt;\n#&gt;  [[5]] $ &lt;env: package:rlang&gt;\n#&gt;  [[6]] $ &lt;env: package:stats&gt;\n#&gt;  [[7]] $ &lt;env: package:graphics&gt;\n#&gt;  [[8]] $ &lt;env: package:grDevices&gt;\n#&gt;  [[9]] $ &lt;env: package:utils&gt;\n#&gt; [[10]] $ &lt;env: package:datasets&gt;\n#&gt; [[11]] $ &lt;env: package:writexl&gt;\n#&gt; [[12]] $ &lt;env: package:readxl&gt;\n#&gt; [[13]] $ &lt;env: package:patchwork&gt;\n#&gt; [[14]] $ &lt;env: package:lubridate&gt;\n#&gt; [[15]] $ &lt;env: package:forcats&gt;\n#&gt; [[16]] $ &lt;env: package:stringr&gt;\n#&gt; [[17]] $ &lt;env: package:dplyr&gt;\n#&gt; [[18]] $ &lt;env: package:purrr&gt;\n#&gt; [[19]] $ &lt;env: package:readr&gt;\n#&gt; [[20]] $ &lt;env: package:tidyr&gt;\n#&gt; ... and 11 more environments\n\n\n\n10.1.3 空环境\n只有一个环境没有父环境：空( empty)环境。每个环境的父级最终都会随着空环境而终止。\n\nShow the codee2c &lt;- env(empty_env(), d = 4, e = 5)\ne2d &lt;- env(e2c, a = 1, b = 2, c = 3)\n\n\n\n\n\n\n\nShow the code# 查看所有父级\nenv_parents(e2d)\n#&gt; [[1]]   &lt;env: 0x000001c32bc9b6b8&gt;\n#&gt; [[2]] $ &lt;env: empty&gt;\ne2c\n#&gt; &lt;environment: 0x000001c32bc9b6b8&gt;\nenv_parents(e2c)\n#&gt; [[1]] $ &lt;env: empty&gt;",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>环境</span>"
    ]
  },
  {
    "objectID": "environments.html#环境操作",
    "href": "environments.html#环境操作",
    "title": "\n10  环境\n",
    "section": "\n10.2 环境操作",
    "text": "10.2 环境操作\n\n修改时不会复制环境。\n\n\n10.2.1 创建环境\n环境的工作是将一组名称关联或绑定（bind）到一组值。\n\nShow the code# name-value pairs\ne1 &lt;- rlang::env(\n  a = FALSE,\n  b = \"a\",\n  c = 2.3,\n  d = 1:3,\n)\n\n\n# 绑定自身\ne1$d &lt;- e1\n\n# 只显示内存地址\ne1 \n#&gt; &lt;environment: 0x000001cdcf314e48&gt;\n\n# \nenv_print(e1)\n#&gt; &lt;environment: 0x000001cdcf314e48&gt;\n#&gt; Parent: &lt;environment: global&gt;\n#&gt; Bindings:\n#&gt; • a: &lt;lgl&gt;\n#&gt; • b: &lt;chr&gt;\n#&gt; • c: &lt;dbl&gt;\n#&gt; • d: &lt;env&gt;\nenv_names(e1)\n#&gt; [1] \"a\" \"b\" \"c\" \"d\"\nnames(e1)\n#&gt; [1] \"a\" \"b\" \"c\" \"d\"\n\n\nnew.env() 也可用于创建新环境。 hash size\n\nShow the codemy_env &lt;- base::new.env(parent = emptyenv())\nmy_env$a &lt;- 1\n\n\n\n10.2.2 超级赋值 &lt;&lt;-\n\n常规赋值 &lt;- 始终在当前环境中创建绑定一个变量\n超级赋值 &lt;&lt;- ，重新绑定当前环境的父级中的现有名称\n\nShow the codex &lt;- 0\nf &lt;- function() {\n  x &lt;&lt;- 1\n}\nf()\nx\n#&gt; [1] 1\n\n\n\n10.2.3 访问对象\n\nShow the codeenv_print(e1)\n#&gt; &lt;environment: 0x000001cdcf314e48&gt;\n#&gt; Parent: &lt;environment: global&gt;\n#&gt; Bindings:\n#&gt; • a: &lt;lgl&gt;\n#&gt; • b: &lt;chr&gt;\n#&gt; • c: &lt;dbl&gt;\n#&gt; • d: &lt;env&gt;\n\n# error  无顺序，不能用数字索引\ne1[[1]]\n#&gt; Error in e1[[1]]: wrong arguments for subsetting an environment\n\n# $ [[\"name]]\ne1$b\n#&gt; [1] \"a\"\ne1[[\"a\"]]\n#&gt; [1] FALSE\n\n\n\n10.2.4 添加绑定\n\nShow the code# 单个\nenv_poke(e1, \"e\", 100)\n\n# 多个\nenv_bind(e1, x = 10, y = 20)\n\nenv_print(e1)\n#&gt; &lt;environment: 0x000001cdcf314e48&gt;\n#&gt; Parent: &lt;environment: global&gt;\n#&gt; Bindings:\n#&gt; • x: &lt;dbl&gt;\n#&gt; • y: &lt;dbl&gt;\n#&gt; • a: &lt;lgl&gt;\n#&gt; • b: &lt;chr&gt;\n#&gt; • c: &lt;dbl&gt;\n#&gt; • d: &lt;env&gt;\n#&gt; • e: &lt;dbl&gt;\n\n\n\n10.2.5 解除绑定\n\nShow the codee1$x &lt;- NULL  # 不能删除\nenv_has(e1, \"x\")\n#&gt;    x \n#&gt; TRUE\n\n\nenv_unbind(e1, \"x\") # 解绑定\nenv_has(e1, \"x\")\n#&gt;     x \n#&gt; FALSE\n\nenv_print(e1)\n#&gt; &lt;environment: 0x000001cdcf314e48&gt;\n#&gt; Parent: &lt;environment: global&gt;\n#&gt; Bindings:\n#&gt; • y: &lt;dbl&gt;\n#&gt; • a: &lt;lgl&gt;\n#&gt; • b: &lt;chr&gt;\n#&gt; • c: &lt;dbl&gt;\n#&gt; • d: &lt;env&gt;\n#&gt; • e: &lt;dbl&gt;\n\n\n\n10.2.6 高级绑定\n\n10.2.6.1 延迟绑定\ndelayed bindings autoload()允许 R 包提供行为类似于加载内存中的数据集\n延迟绑定会创建 unevaluated promise\n\nShow the codeenv_bind_lazy(current_env(), b =object.size(e1))\nforce(b)\n#&gt; 56 bytes\n\nsystem.time(print(b))\n#&gt; 56 bytes\n#&gt;    user  system elapsed \n#&gt;       0       0       0\n\nsystem.time(print(b))\n#&gt; 56 bytes\n#&gt;    user  system elapsed \n#&gt;       0       0       0\n\n\n\n\n\n\n\n10.2.6.2 动态绑定\nactive bindings 每次访问它们时都会重新计算\n\nShow the codeenv_bind_active(current_env(), z1 = function(val) runif(1))\nz1\n#&gt; [1] 0.08058083\nz1\n#&gt; [1] 0.5469654",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>环境</span>"
    ]
  },
  {
    "objectID": "environments.html#在环境中递归",
    "href": "environments.html#在环境中递归",
    "title": "\n10  环境\n",
    "section": "\n10.3 在环境中递归",
    "text": "10.3 在环境中递归\n\n10.3.1 递归recurse\n\nShow the codef_recur &lt;- function(..., env = caller_env()) {\n  if (identical(env, empty_env())) {\n    # base case\n  } else if (success) {\n    # success case\n  } else {\n    # recursive case\n    f(..., env = env_parent(env))\n  }\n}\n\n\n\nShow the codewhere &lt;- function(name, env = caller_env()) {\n  if (identical(env, empty_env())) {\n    # Base case\n    stop(\"Can't find \", name, call. = FALSE)\n  } else if (env_has(env, name)) {\n    # Success case\n    env\n  } else {\n    # Recursive case\n    where(name, env_parent(env))\n  }\n}\n\n\n\nShow the codee3a &lt;- env(empty_env(), a = 1, b = 2)\ne3b &lt;- env(e3a, x = 10, a = 11)\n\n\n\n\n\n\n\nShow the codewhere(\"a\", e3b)\n#&gt; &lt;environment: 0x000001cdd7cbf3a8&gt;\n\nwhere(\"b\", e3b)\n#&gt; &lt;environment: 0x000001cdd7d6b538&gt;\ne3a\n#&gt; &lt;environment: 0x000001cdd7d6b538&gt;\n\nwhere(\"c\", e3b)\n#&gt; Error: Can't find c\n\n\n\n10.3.2 迭代iteration\n\nShow the codef_iter &lt;- function(..., env = caller_env()) {\n  while (!identical(env, empty_env())) {\n    if (success) {\n      # success case\n      return()\n    }\n    # inspect parent\n    env &lt;- env_parent(env)\n  }\n\n  # base case\n}",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>环境</span>"
    ]
  },
  {
    "objectID": "environments.html#特殊环境",
    "href": "environments.html#特殊环境",
    "title": "\n10  环境\n",
    "section": "\n10.4 特殊环境",
    "text": "10.4 特殊环境\n大多数环境是由 R 创建的\n\n10.4.1 包环境和搜索路径\n\n\n\n\n搜索路径：R_EmptyEnv→pkgs→R_GlobalENV\n\nShow the codebase::search()\n#&gt;  [1] \".GlobalEnv\"         \".conflicts\"         \"package:lobstr\"    \n#&gt;  [4] \"package:rlang\"      \"package:stats\"      \"package:graphics\"  \n#&gt;  [7] \"package:grDevices\"  \"package:utils\"      \"package:datasets\"  \n#&gt; [10] \"package:writexl\"    \"package:readxl\"     \"package:patchwork\" \n#&gt; [13] \"package:lubridate\"  \"package:forcats\"    \"package:stringr\"   \n#&gt; [16] \"package:dplyr\"      \"package:purrr\"      \"package:readr\"     \n#&gt; [19] \"package:tidyr\"      \"package:tibble\"     \"package:ggplot2\"   \n#&gt; [22] \"package:tidyverse\"  \"package:conflicted\" \"package:showtext\"  \n#&gt; [25] \"package:showtextdb\" \"package:sysfonts\"   \"package:methods\"   \n#&gt; [28] \"Autoloads\"          \"package:base\"\nrlang::search_envs()\n#&gt;  [[1]] $ &lt;env: global&gt;\n#&gt;  [[2]] $ &lt;env: .conflicts&gt;\n#&gt;  [[3]] $ &lt;env: package:lobstr&gt;\n#&gt;  [[4]] $ &lt;env: package:rlang&gt;\n#&gt;  [[5]] $ &lt;env: package:stats&gt;\n#&gt;  [[6]] $ &lt;env: package:graphics&gt;\n#&gt;  [[7]] $ &lt;env: package:grDevices&gt;\n#&gt;  [[8]] $ &lt;env: package:utils&gt;\n#&gt;  [[9]] $ &lt;env: package:datasets&gt;\n#&gt; [[10]] $ &lt;env: package:writexl&gt;\n#&gt; [[11]] $ &lt;env: package:readxl&gt;\n#&gt; [[12]] $ &lt;env: package:patchwork&gt;\n#&gt; [[13]] $ &lt;env: package:lubridate&gt;\n#&gt; [[14]] $ &lt;env: package:forcats&gt;\n#&gt; [[15]] $ &lt;env: package:stringr&gt;\n#&gt; [[16]] $ &lt;env: package:dplyr&gt;\n#&gt; [[17]] $ &lt;env: package:purrr&gt;\n#&gt; [[18]] $ &lt;env: package:readr&gt;\n#&gt; [[19]] $ &lt;env: package:tidyr&gt;\n#&gt; [[20]] $ &lt;env: package:tibble&gt;\n#&gt; ... and 9 more environments\n\n\n搜索路径上的最后两个环境始终相同：\n\n环境Autoloads使用延迟绑定来节省内存，仅通过需要时加载包对象（如大型数据集）节省内存 。\n基本环境package:base，是 base package 的环，它能够引导所有其他包的加载。访问base_env()\n\n请注意，当您附加另一个包时，全局环境的父环境会发生变化：\n\n\n\n\n\n10.4.2 命名空间\n命名空间 （namespaces） 的目标是确保以不同的顺序加载包，包将找到相同的功能，并且无论用户附加什么包，每个包的工作方式都相同。\n\nShow the codesd\n#&gt; function (x, na.rm = FALSE) \n#&gt; sqrt(var(if (is.vector(x) || is.factor(x)) x else as.double(x), \n#&gt;     na.rm = na.rm))\n#&gt; &lt;bytecode: 0x000001cdd56211e8&gt;\n#&gt; &lt;environment: namespace:stats&gt;\n\n\n包中的每个函数都与一对环境相关联：前面的包环境和命名空间环境。\n\n包环境是包的外部接口。\n命名空间环境是包的内部接口。\n\n包环境控制我们如何找到函数；命名空间控制函数查找其变量的方式。\n包环境中的每个绑定也可以在命名空间环境中找到。\n每个命名空间都有一个import环境，import环境的父级是base namespace，base namespace的父级是全局环境。\n\n\n\n\n\n10.4.3 函数环境\n函数在创建时绑定当前环境，称为函数环境，用于词法作用域。在计算机语言中，捕获（或封闭）其环境的函数被称为闭包 closures 。\n访问函数环境\n\nShow the codey &lt;- 1\nf &lt;- function(x) x + y\nfn_env(f)\n#&gt; &lt;environment: R_GlobalEnv&gt;\n\n\n\n\n\n\n\nShow the codee &lt;- env()  # 绑定当前环境为父级\nenv_parent(e)\n#&gt; &lt;environment: R_GlobalEnv&gt;\n\ne$g &lt;- function() 1  # g绑定在e中\n\nenv_print(e)\n#&gt; &lt;environment: 0x000001cdd4151420&gt;\n#&gt; Parent: &lt;environment: global&gt;\n#&gt; Bindings:\n#&gt; • g: &lt;fn&gt;\n\n\n\n10.4.4 执行环境\n执行环境是函数环境的子级，由函数的创建位置决定。\n\nShow the codeg &lt;- function(x) {\n  if (!env_has(current_env(), \"a\")) {\n    message(\"Defining a\")\n    a &lt;- 1\n  } else {\n    a &lt;- a + 1\n  }\n  a\n}\n\n\n\nShow the code# A fresh start principle\ng(10)\n#&gt; [1] 1\ng(10)\n#&gt; [1] 1\n\n\n每次调用函数时，都会创建一个新环境来托管执行。这称为执行环境（execution environment），其父级是函数环境\n\nShow the codeh &lt;- function(x) {\n  # 1.\n  a &lt;- 2 # 2.\n  x + a\n}\ny &lt;- h(1) # 3.\n\n\n\n\n\n\n\nFigure 10.1\n\n\n执行环境通常是短暂的;函数完成后，环境将被垃圾回收（garbage collected）。",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>环境</span>"
    ]
  },
  {
    "objectID": "environments.html#call-stacks",
    "href": "environments.html#call-stacks",
    "title": "\n10  环境\n",
    "section": "\n10.5 Call stacks",
    "text": "10.5 Call stacks\ncaller environment\nrlang::caller_env() 提供了调用函数的环境。\n调用栈（call stacks）由 frames 组成。调用栈是由调用函数的位置创建的。\n\nShow the codef &lt;- function(x) {\n  g(x = 2)\n}\ng &lt;- function(x) {\n  h(x = 3)\n}\nh &lt;- function(x) {\n  stop()\n}\n\n\n在 R 中最常查看调用栈的方式是查看错误发生后的情况：traceback()\n\nShow the codef(x = 1)\n#&gt; Error in h(x = 3):\ntraceback()\n#&gt; No traceback available\n\n\n使用 lobstr::cst()从头开始 来理解调用栈, call stack tree Figure 10.2\n\nShow the codeh &lt;- function(x) {\n  lobstr::cst()\n}\nf(x = 1)\n#&gt;     ▆\n#&gt;  1. └─global f(x = 1)\n#&gt;  2.   └─global g(x = 2)\n#&gt;  3.     └─global h(x = 3)\n#&gt;  4.       └─lobstr::cst()\n\n\n\n10.5.1 frames\n调用栈的每个元素都是一个frame，也称为 evaluation context。Frames 是一个极其重要的内部数据结构，R 代码只能访问它的一小部分，因为篡改它会破坏 R。\nframe 有三个关键组件：\n\n给出函数调用的表达式（标有expr ）\n环境（标记为env ）\n父级，调用栈中的上一个调用（由灰色箭头显示）\n\n\n\n\n\n\nFigure 10.2\n\n\n\n10.5.2 Dynamic scope\n在调用栈中而不是在封闭环境中查找变量称为dynamic scoping 。",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>环境</span>"
    ]
  },
  {
    "objectID": "object_oriented_programming.html",
    "href": "object_oriented_programming.html",
    "title": "\n11  面向对象编程\n",
    "section": "",
    "text": "11.1 R 中的对象\nR中存在的一切都是一个对象，包括 base objects 和 OO objects 。",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>面向对象编程</span>"
    ]
  },
  {
    "objectID": "object_oriented_programming.html#r-中的对象",
    "href": "object_oriented_programming.html#r-中的对象",
    "title": "\n11  面向对象编程\n",
    "section": "",
    "text": "11.1.1 base objects\n基本对象来自 S\n\nShow the codeif(!require(sloop)) install.packages(\"sloop\")\n# A base object:\nsloop::otype(1:10)\n#&gt; [1] \"base\"\nis.object(1:10)\n#&gt; [1] FALSE\n\n# An OO object\nis.object(mtcars)\n#&gt; [1] TRUE\nsloop::otype(mtcars)\n#&gt; [1] \"S3\"\n\n\n基本对象和 OO 对象之间的区别在于 OO 对象具有“类”属性\n\nShow the codeattr(1:10, \"class\")\n#&gt; NULL\nattr(mtcars, \"class\")\n#&gt; [1] \"data.frame\"\n\n\n虽然只有 OO 对象具有类”class”属性，但每个对象都具有基本类型（base type）：\n\nShow the codetypeof(1:10)\n#&gt; [1] \"integer\"\ntypeof(mtcars)\n#&gt; [1] \"list\"\ntypeof(NULL)\n#&gt; [1] \"NULL\"\ntypeof(mean)\n#&gt; [1] \"closure\"\ntypeof(`[`)\n#&gt; [1] \"special\"\ntypeof(sum) \n#&gt; [1] \"builtin\"\ntypeof(globalenv())\n#&gt; [1] \"environment\"\nmle_obj &lt;- stats4::mle(function(x = 1) (x - 2) ^ 2)\ntypeof(mle_obj)\n#&gt; [1] \"S4\"\n\n\n基本类型包括数据的基本类型（数值，字符，逻辑，复数等），函数类型（闭包、内置、特殊），环境，类，…… 等等。\n\n11.1.2 OO objects：class 属性\n\nS3：是 R 的第一个 OOP 系统，Statistical Models in S\nS4：是对 S3 的正式和严格的重写，Programming with Data，S4 在默认安装(options()$defaultPackages) methods 包中实现。Bioconductor 项目使用的就是S4类。\nR6：构建在环境之上的封装OOP，具有引用语义，modified in-place 而非“修改时复制（copy-on-modify）”，在 R6 包中实现。\nprototype（原型）：模糊类和类（对象）的实例之间的区别，通常指的是一个对象的初始实例，它定义了一组属性和方法，其他对象可以基于这个原型进行创建。例如ggplot2 包的ggproto类",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>面向对象编程</span>"
    ]
  },
  {
    "objectID": "object_oriented_programming.html#s3类",
    "href": "object_oriented_programming.html#s3类",
    "title": "\n11  面向对象编程\n",
    "section": "\n11.2 S3类",
    "text": "11.2 S3类\nS3 对象是至少具有一个属性（其他属性可用于存储其他数据）的base type( 有mode属性)。\n\nShow the codef &lt;- factor(c(\"a\", \"b\", \"c\"))\n\n# 基本类型\ntypeof(f)\n#&gt; [1] \"integer\"\n\n# 其他属性\nattributes(f)\n#&gt; $levels\n#&gt; [1] \"a\" \"b\" \"c\"\n#&gt; \n#&gt; $class\n#&gt; [1] \"factor\"\n\n\n剥离类属性，保留其他属性\n\nShow the codeunclass(f)\n#&gt; [1] 1 2 3\n#&gt; attr(,\"levels\")\n#&gt; [1] \"a\" \"b\" \"c\"\n\n\n查看方法调度，generic.class()\n\nShow the codelibrary(sloop)\ns3_dispatch(print(f))\n#&gt; =&gt; print.factor\n#&gt;  * print.default\n\n\n\n11.2.1 类的实例\n要使对象成为类的实例，您只需设置类属性即可。\n\nShow the codex &lt;- structure(list(), class = \"custom_class\")\n\n# 或者\nx &lt;- list()\nclass(x) &lt;- \"custom_class\"\n\n\n\nShow the codeclass(x)\n#&gt; [1] \"custom_class\"\n\ninherits(x, \"custom_class\")\n#&gt; [1] TRUE\n\n\n构造S3类的三原则\n\n命名 new_myclass()\nbase object有一个参数，每个属性有一个参数。\n检查base object的类型和每个属性的类型\n\n例如 Date 类\n\nShow the codenew_Date &lt;- function(x = double()) {\n  stopifnot(is.double(x))\n  structure(x, class = \"Date\")\n}\nnew_Date(c(-1, 0, 1))\n#&gt; [1] \"1969-12-31\" \"1970-01-01\" \"1970-01-02\"\n\n\ndifftime 类\n\nShow the codenew_difftime &lt;- function(x = double(), units = \"secs\") {\n  stopifnot(is.double(x))\n  units &lt;- match.arg(units, c(\"secs\", \"mins\", \"hours\", \"days\", \"weeks\"))\n\n  structure(x,\n    class = \"difftime\",\n    units = units\n  )\n}\nnew_difftime(52, \"weeks\")\n#&gt; Time difference of 52 weeks\n\n\n有效性验证\n\nShow the codenew_factor &lt;- function(x = integer(), levels = character()) {\n  stopifnot(is.integer(x))\n  stopifnot(is.character(levels))\n\n  structure(\n    x,\n    levels = levels,\n    class = \"factor\"\n  )\n}\n\nnew_factor(1:5, \"a\")\n#&gt; Error in as.character.factor(x): malformed factor\nnew_factor(0:1, \"a\")\n#&gt; Error in as.character.factor(x): malformed factor\n\n\n\nShow the codevalidate_factor &lt;- function(x) {\n  values &lt;- unclass(x)\n  levels &lt;- attr(x, \"levels\")\n\n  if (!all(!is.na(values) & values &gt; 0)) {\n    stop(\n      \"All `x` values must be non-missing and greater than zero\",\n      call. = FALSE\n    )\n  }\n\n  if (length(levels) &lt; max(values)) {\n    stop(\n      \"There must be at least as many `levels` as possible values in `x`\",\n      call. = FALSE\n    )\n  }\n\n  x\n}\nvalidate_factor(new_factor(1:5, \"a\"))\n#&gt; Error: There must be at least as many `levels` as possible values in `x`\nvalidate_factor(new_factor(0:1, \"a\"))\n#&gt; Error: All `x` values must be non-missing and greater than zero\n\n\n如果希望用户从类中构造对象，还应该提供一个帮助程序方法\n\n强制类型转换\n\n\nShow the codedifftime &lt;- function(x = double(), units = \"secs\") {\n  x &lt;- as.double(x)\n  new_difftime(x, units = units)\n}\n\ndifftime(1:10)\n#&gt; Time differences in secs\n#&gt;  [1]  1  2  3  4  5  6  7  8  9 10\n\n\n\n复杂对象字符串表示\n\n\nShow the codefactor &lt;- function(x = character(), levels = unique(x)) {\n  ind &lt;- match(x, levels)\n  validate_factor(new_factor(ind, levels))\n}\n\nfactor(c(\"a\", \"a\", \"b\"))\n#&gt; [1] a a b\n#&gt; Levels: a b\n\n\n\n复杂对象由多个简单组件指定\n\n\nShow the codePOSIXct &lt;- function(year = integer(), \n                    month = integer(), \n                    day = integer(), \n                    hour = 0L, \n                    minute = 0L, \n                    sec = 0, \n                    tzone = \"\") {\n  ISOdatetime(year, month, day, hour, minute, sec, tz = tzone)\n}\n\nPOSIXct(2020, 1, 1, tzone = \"Asia/Shanghai\")\n#&gt; [1] \"2020-01-01 CST\"\n\n\n\n11.2.2 泛型函数和方法调度\n泛型函数（generic function）\n\nShow the codemy_new_generic &lt;- function(x) {\n  UseMethod(\"my_new_generic\")\n}\n\n\n\nShow the codelibrary(\"sloop\")\nx &lt;- matrix(1:10, nrow = 2)\ns3_dispatch(mean(x))\n#&gt;    mean.matrix\n#&gt;    mean.integer\n#&gt;    mean.numeric\n#&gt; =&gt; mean.default\n\n\n=&gt;指示调用的方法\n*指示此处已定义但未调用的方法，“default”类是一个特殊的伪类。这不是一个真正的类，但包含它是为了可以定义一个标准回退，每当特定于类的方法不可用时，就会找到该回退。\n\nShow the codemean\n#&gt; function (x, ...) \n#&gt; UseMethod(\"mean\")\n#&gt; &lt;bytecode: 0x000001bd3db95df0&gt;\n#&gt; &lt;environment: namespace:base&gt;\ns3_methods_generic(\"mean\")\n\n\n\n\ngeneric\nclass\nvisible\nsource\n\n\n\nmean\nDate\nTRUE\nbase\n\n\nmean\ndefault\nTRUE\nbase\n\n\nmean\ndifftime\nTRUE\nbase\n\n\nmean\nPOSIXct\nTRUE\nbase\n\n\nmean\nPOSIXlt\nTRUE\nbase\n\n\nmean\nquosure\nFALSE\nregistered S3method\n\n\nmean\nvctrs_vctr\nFALSE\nregistered S3method\n\n\n\n\n\nShow the codes3_methods_class(\"ordered\")\n\n\n\n\ngeneric\nclass\nvisible\nsource\n\n\n\nas.data.frame\nordered\nTRUE\nbase\n\n\nOps\nordered\nTRUE\nbase\n\n\nrelevel\nordered\nFALSE\nregistered S3method\n\n\nscale_type\nordered\nFALSE\nregistered S3method\n\n\nSummary\nordered\nTRUE\nbase\n\n\ntype_sum\nordered\nFALSE\nregistered S3method\n\n\n\n\n\n\n\n11.2.3 S3 方法重载\n\nShow the code# S3 方法重载示例\ngeneric_function &lt;- function(x, y) {\n  UseMethod(\"generic_function\")\n}\n\n# 为numeric类定义方法\ngeneric_function.numeric &lt;- function(x, y) {\n  print(x + y)\n}\n\n# 为character类定义方法\ngeneric_function.character &lt;- function(x, y) {\n  print(paste(x, y))\n}\n\n# 调用函数\ngeneric_function(1, 2)  # 输出 3\n#&gt; [1] 3\ngeneric_function(\"Hello\", \"World\")  # 输出 \"HelloWorld\"\n#&gt; [1] \"Hello World\"\n\n\n# S3 方法重载示例\n`+` &lt;- function(x, y) {\n  UseMethod(\"+\")\n}\n\n# 为character类定义方法\n`+.character`&lt;- function(x, y) {\n  print(paste0(x, y))\n}\n\n\"a\"+\"b\"+\"c\"\n#&gt; [1] \"ab\"\n#&gt; [1] \"abc\"",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>面向对象编程</span>"
    ]
  },
  {
    "objectID": "object_oriented_programming.html#r6-类",
    "href": "object_oriented_programming.html#r6-类",
    "title": "\n11  面向对象编程\n",
    "section": "\n11.3 R6 类",
    "text": "11.3 R6 类\nR6::R6Class(classname = NULL，public = list)",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>面向对象编程</span>"
    ]
  },
  {
    "objectID": "object_oriented_programming.html#s4类",
    "href": "object_oriented_programming.html#s4类",
    "title": "\n11  面向对象编程\n",
    "section": "\n11.4 S4类",
    "text": "11.4 S4类\n创建类 setClass() ，创建泛型函数 setGeneric() ，创建方法 setMethod()\n此外，S4 提供多重继承（即一个类可以有多个父级）和多重调度（即方法调度可以使用多个参数的类）\nS4 的一个重要新组件是 slot，它是对象的命名组件，使用专用子集运算符 @（发音为 at）进行访问。\naccessor functions @\nbioconductor S4类和方法\n\nShow the codelibrary(methods)\n\n\n\n11.4.1 创建类、泛型和方法\n\nShow the codesetClass(\n    #类名\n    \"Person\",\n    \n    # 名称和类的命名字符向量\n    slots = c(name = \"character\", age = \"numeric\"),\n    \n    # 默认值列表\n    prototype = list(name = NA_character_, age = NA_real_)\n)\n\nx &lt;- new(\"Person\", name = \"XXX\",age=24)\n\nstr(x)\n#&gt; Formal class 'Person' [package \".GlobalEnv\"] with 2 slots\n#&gt;   ..@ name: chr \"XXX\"\n#&gt;   ..@ age : num 24\n\nx@name\n#&gt; [1] \"XXX\"\nslot(x,\"age\")\n#&gt; [1] 24\n\n\n# 泛型\n\nsetGeneric(\"age\", function(x) standardGeneric(\"age\"))\n#&gt; [1] \"age\"\nsetGeneric(\"age&lt;-\", function(x, value) standardGeneric(\"age&lt;-\"))\n#&gt; [1] \"age&lt;-\"\n\n# 方法\n\nsetMethod(\"age\", \"Person\", function(x) x@age)\nsetMethod(\"age&lt;-\", \"Person\", function(x, value) {\n  x@age &lt;- value\n  x\n})\nage(x)\n#&gt; [1] 24\nage(x) &lt;- 13\nage(x)\n#&gt; [1] 13\n\nsetMethod(\"show\", \"Person\", function(object) {\n  cat(is(object)[[1]], \"\\n\",\n      \"  Name: \", object@name, \"\\n\",\n      \"  Age:  \", object@age, \"\\n\",\n      sep = \"\"\n  )\n})\nsloop::otype(x)\n#&gt; [1] \"S4\"\nsloop::ftype(age)\n#&gt; [1] \"S4\"      \"generic\"\n\nx\n#&gt; Person\n#&gt;   Name: XXX\n#&gt;   Age:  13\n\nsetGeneric(\"name\", function(x) standardGeneric(\"name\"))\n#&gt; [1] \"name\"\nsetMethod(\"name\", \"Person\", function(x) x@name)\n\nname(x)\n#&gt; [1] \"XXX\"\nsetGeneric(\"name&lt;-\", function(x, value) standardGeneric(\"name&lt;-\"))\n#&gt; [1] \"name&lt;-\"\nsetMethod(\"name&lt;-\", \"Person\", function(x, value) {\n  x@name &lt;- value\n  validObject(x)\n  x\n})\n\nname(x) &lt;- \"Lily\"\nname(x)\n#&gt; [1] \"Lily\"\n\n\n\n11.4.2 继承\n\nShow the codesetClass(\"Employee\", \n  contains = \"Person\", \n  slots = c(\n    boss = \"Person\"\n  ),\n  prototype = list(\n    boss = new(\"Person\")\n  )\n)\n\nstr(new(\"Employee\"))\n#&gt; Formal class 'Employee' [package \".GlobalEnv\"] with 3 slots\n#&gt;   ..@ boss:Formal class 'Person' [package \".GlobalEnv\"] with 2 slots\n#&gt;   .. .. ..@ name: chr NA\n#&gt;   .. .. ..@ age : num NA\n#&gt;   ..@ name: chr NA\n#&gt;   ..@ age : num NA\n\n\n\nShow the codeis(x, \"Person\")\n#&gt; [1] TRUE\nis(new(\"Person\"))\n#&gt; [1] \"Person\"\nis(new(\"Employee\"))\n#&gt; [1] \"Employee\" \"Person\"\n\n\n\n11.4.3 多重继承和多重调度\n。。。",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>面向对象编程</span>"
    ]
  },
  {
    "objectID": "object_oriented_programming.html#原型类",
    "href": "object_oriented_programming.html#原型类",
    "title": "\n11  面向对象编程\n",
    "section": "\n11.5 原型类",
    "text": "11.5 原型类\n\n11.5.1 ggproto 类\n参考 ggplot2-book.org/internals#sec-ggproto\n\nShow the codeNewObject &lt;- ggproto(\n  `_class` = NULL, \n  `_inherits` = NULL\n)\nNewObject \n#&gt; &lt;ggproto object: Class gg&gt;\n#&gt;     _inherits: NULL\n\n\n\nShow the code# 新类\nNewClass &lt;- ggproto(\"NewClass\", NULL,\n                    # fields     默认值 \n                    geom=NA,\n                    # methods\n                    \n                    )\nNewClass\n#&gt; &lt;ggproto object: Class NewClass, gg&gt;\n#&gt;     geom: NA\n\n\n\nShow the code# 实例\ninstance &lt;- ggproto(NULL, NewClass,\n                    # 字段赋值\n                    geom=\"point\"\n                    )\ninstance\n#&gt; &lt;ggproto object: Class NewClass, gg&gt;\n#&gt;     geom: point\n#&gt;     super:  &lt;ggproto object: Class NewClass, gg&gt;\n\n\n\nShow the code# 继承\nNewSubClass &lt;- ggproto(\"NewSubClass\", NewClass)\nNewSubClass\n#&gt; &lt;ggproto object: Class NewSubClass, NewClass, gg&gt;\n#&gt;     geom: NA\n#&gt;     super:  &lt;ggproto object: Class NewClass, gg&gt;",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>面向对象编程</span>"
    ]
  },
  {
    "objectID": "meta_programming.html",
    "href": "meta_programming.html",
    "title": "\n12  元编程\n",
    "section": "",
    "text": "12.1 捕获代码结构 expression\n表达式 （expression ）指 捕获的代码结构 ，包括四种类型（调用call、符号symbol、常量constant或配对列表pairlist）。",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>元编程</span>"
    ]
  },
  {
    "objectID": "meta_programming.html#捕获代码结构-expression",
    "href": "meta_programming.html#捕获代码结构-expression",
    "title": "\n12  元编程\n",
    "section": "",
    "text": "12.1.1 expr() 和 enexpr()\n\n\nShow the coderlang::expr(mean(x, na.rm = TRUE))\n#&gt; mean(x, na.rm = TRUE)\n\n\n\nShow the codecapture_it &lt;- function(x) {\n  expr(x)\n}\ncapture_it(a + b + c)\n#&gt; x\n\n\n捕获用户输入的函数参数\n\nShow the codecapture_it &lt;- function(x) {\n  enexpr(x)\n}\n\ncapture_it(mtcars$mpg)\n#&gt; mtcars$mpg\n\n\n\n12.1.2 增删改操作\n捕获表达式后，可以检查和修改它，方法与列表类似。\n捕获的表达式分为两个部分\n\n第一个元素为函数调用call\n其他部分为位置参数或嵌套调用\n\n\nShow the codef &lt;- expr(fn &lt;- anystrings(x = 1, y = 2))\nexpr(`&lt;-`(fn,anystrings(x = 1, y = 2)))\n#&gt; fn &lt;- anystrings(x = 1, y = 2)\nf[[1]]\n#&gt; `&lt;-`\nf[[2]]\n#&gt; fn\nf[[3]]\n#&gt; anystrings(x = 1, y = 2)\n\n\nf[[3]][[1]]\n#&gt; anystrings\nf[[3]]$x\n#&gt; [1] 1\nf[[3]]$z &lt;- 3\nf\n#&gt; fn &lt;- anystrings(x = 1, y = 2, z = 3)\n\n\nf[[3]][[2]] &lt;- NULL\nf\n#&gt; fn &lt;- anystrings(y = 2, z = 3)\n\n\n\n12.1.3 执行表达式\n将代码的结构描述expression和执行evaluate分开。\n\nShow the codez &lt;- rlang::expr(y &lt;- x * 10)\nz\n#&gt; y &lt;- x * 10\nx &lt;- 8\neval(z)\ny\n#&gt; [1] 80",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>元编程</span>"
    ]
  },
  {
    "objectID": "meta_programming.html#执行表达式-1",
    "href": "meta_programming.html#执行表达式-1",
    "title": "\n12  元编程\n",
    "section": "\n12.2 执行表达式",
    "text": "12.2 执行表达式\n\nShow the codebase::eval(expr(x + y), env(x = 1, y = 10))\n#&gt; [1] 11\n\n\n如果省略环境，将使用当前环境\n\nShow the codex &lt;- 10\ny &lt;- 100\neval(expr(x + y))\n#&gt; [1] 110",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>元编程</span>"
    ]
  },
  {
    "objectID": "meta_programming.html#函数自定义求值",
    "href": "meta_programming.html#函数自定义求值",
    "title": "\n12  元编程\n",
    "section": "\n12.3 函数自定义求值",
    "text": "12.3 函数自定义求值\nRebinding functions，改变函数内部的变量绑定\n\nShow the code\n# 字符串的加法和乘法 多态\nstring_math &lt;- function(x) {\n  e &lt;- env(\n    caller_env(),\n    `+` = function(x, y) paste0(x, y),\n    `*` = function(x, y) strrep(x, y)\n  )\n\n  eval(enexpr(x), e)\n}\n\nname &lt;- \"Hadley\"\nstring_math(\"Hello \" + name)\n#&gt; [1] \"Hello Hadley\"\nstring_math((\"x\" * 2 + \"-y\") * 3)\n#&gt; [1] \"xx-yxx-yxx-y\"\n\n\ndplyr将这个想法发挥到了极致，在生成 SQL 以在远程数据库中执行的环境中运行代码：\n\nShow the codelibrary(dplyr)\ncon &lt;- DBI::dbConnect(RSQLite::SQLite(), filename = \":memory:\")\nmtcars_db &lt;- copy_to(con, mtcars)\n\nmtcars_db %&gt;%\n  filter(cyl &gt; 2) %&gt;%\n  select(mpg:hp) %&gt;%\n  head(10) %&gt;%\n  show_query()\n#&gt; &lt;SQL&gt;\n#&gt; SELECT `mpg`, `cyl`, `disp`, `hp`\n#&gt; FROM `mtcars`\n#&gt; WHERE (`cyl` &gt; 2.0)\n#&gt; LIMIT 10\n\nDBI::dbDisconnect(con)",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>元编程</span>"
    ]
  },
  {
    "objectID": "meta_programming.html#数据自定义求值",
    "href": "meta_programming.html#数据自定义求值",
    "title": "\n12  元编程\n",
    "section": "\n12.4 数据自定义求值",
    "text": "12.4 数据自定义求值\n在数据处理和分析中，“data masking”（数据掩蔽）是一种技术，用于隐藏或保护敏感信息，同时保留数据集中的模式和结构，以供分析使用。\n\n替换：将敏感数据替换为假数据或占位符。\n加密：对数据进行加密处理，只有拥有密钥的人才能访问原始数据。\n扰动：对数据进行小的随机变化，以保护数据的统计特性，同时避免识别出原始数据。\n\n使用数据掩码进行求值是交互式分析的有用技术，因为它允许您编写 x + y而不是df$x + df$y .然而，这种便利是有代价的：模棱两可\n\nShow the codeset.seed(10)\ndf &lt;- data.frame(x = 1:5, y = sample(5))\n\ndf\n\n\n\n\nx\ny\n\n\n\n1\n3\n\n\n2\n1\n\n\n3\n2\n\n\n4\n5\n\n\n5\n4\n\n\n\n\n\nShow the codeeval_tidy(expr(x + y), df)\n#&gt; [1] 4 3 5 9 9\n\n\nbase::with\n\nShow the codewith2 &lt;- function(df, expr) {\n  eval_tidy(enexpr(expr), df)\n}\n\nwith2(df, x + y)\n#&gt; [1] 4 3 5 9 9",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>元编程</span>"
    ]
  },
  {
    "objectID": "meta_programming.html#抽象语法树",
    "href": "meta_programming.html#抽象语法树",
    "title": "\n12  元编程\n",
    "section": "\n12.5 抽象语法树",
    "text": "12.5 抽象语法树\n表达式（expressions） 也称为抽象语法树（ abstract syntax trees ，ASTs）。\n\n12.5.1 树结构\n\n实际运行代码，橙色矩形是分支，紫色符号是函数调用，白色是函数参数\n渲染成书后，灰色矩形是分支，右连函数调用，下连子项参数或函数\n\n\nShow the codelibrary(rlang)\nlibrary(lobstr)\nlobstr::ast(f(g(1, 2), h(3, 4, i())))\n#&gt; █─f \n#&gt; ├─█─g \n#&gt; │ ├─1 \n#&gt; │ └─2 \n#&gt; └─█─h \n#&gt;   ├─3 \n#&gt;   ├─4 \n#&gt;   └─█─i\n\n\n\n12.5.2 空格和注释\n\nShow the codeast(\n  f(x,  y)  # important!\n)\n#&gt; █─f \n#&gt; ├─x \n#&gt; └─y\n\nlobstr::ast(y &lt;-  x)\n#&gt; █─`&lt;-` \n#&gt; ├─y \n#&gt; └─x\n\nlobstr::ast(y &lt; -x)\n#&gt; █─`&lt;` \n#&gt; ├─y \n#&gt; └─█─`-` \n#&gt;   └─x\n\n\n\n12.5.3 中缀调用\n\nShow the codex &lt;- 4\n`&lt;-`(y,x)\n`&lt;-`(y, `*`(x, 10))\nexpr(`&lt;-`(y, `*`(x, 10)))\n#&gt; y &lt;- x * 10\nlobstr::ast(y &lt;- x * 10)\n#&gt; █─`&lt;-` \n#&gt; ├─y \n#&gt; └─█─`*` \n#&gt;   ├─x \n#&gt;   └─10",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>元编程</span>"
    ]
  },
  {
    "objectID": "meta_programming.html#表达式",
    "href": "meta_programming.html#表达式",
    "title": "\n12  元编程\n",
    "section": "\n12.6 表达式",
    "text": "12.6 表达式\nconstant scalars, symbols, call objects, and pairlists\n\n12.6.1 常量\n\nShow the code# constant\nnum &lt;- expr(123)\nstring &lt;- expr(\"Variable\")\n\nclass(num)\n#&gt; [1] \"numeric\"\n\nexpr(TRUE)==TRUE\n#&gt; [1] TRUE\n\n\n\n12.6.2 符号\nsymbol表示对象的名称\n\nShow the code# 字符串转换名称\nexpr(x) == rlang::sym(\"x\")\n#&gt; [1] TRUE\n\n\n\nchar &lt;- \"Variable\"\n# symbol  name\nsbl &lt;- sym(char)\nsbl\n#&gt; Variable\n\nclass(sbl)\n#&gt; [1] \"name\"\nsbl |&gt; as_string()\n#&gt; [1] \"Variable\"\n\n# 字符串与符号\n\nas_string(expr(x))\n#&gt; [1] \"x\"\nstr(expr(x))\n#&gt;  symbol x\nis.symbol(expr(x))\n#&gt; [1] TRUE\n\n\n符号的长度始终为1，多个符号使用rlang::syms()\n\n12.6.3 调用\n\nShow the code# call\ncall &lt;- call2(\"+\", 1, call2(\"*\", 2, 3))\n\nclass(call)\n#&gt; [1] \"call\"\n\n\n调用对象是一种特殊类型的列表，其中第一个组件指定要调用的函数名称（通常为符号），其余元素是该函数调用的参数。\n\nShow the codelobstr::ast(read.table(file = \"important.csv\", row.names = FALSE))\n#&gt; █─read.table \n#&gt; ├─file = \"important.csv\" \n#&gt; └─row.names = FALSE\n\nx &lt;- expr(read.table(file = \"important.csv\", row.names = FALSE))\n\ntypeof(x)\n#&gt; [1] \"language\"\n\n\n\nShow the codex[[1]]\n#&gt; read.table\nis.symbol(x[[1]])\n#&gt; [1] TRUE\nas.list(x[-1])\n#&gt; $file\n#&gt; [1] \"important.csv\"\n#&gt; \n#&gt; $row.names\n#&gt; [1] FALSE\nx$header &lt;- TRUE\nx\n#&gt; read.table(file = \"important.csv\", row.names = FALSE, header = TRUE)\n\n\n由于 R 灵活的参数匹配规则，从调用中提取特定参数具有挑战性：它可能位于任何位置，具有全名、缩写名称或无名称。若要解决此问题，可以使用 rlang::call_standardise()标准化所有参数来使用全名。\n\nShow the coderlang::call_standardise(x)\n#&gt; read.table(file = \"important.csv\", header = TRUE, row.names = FALSE)\n\n\n\n12.6.3.1 函数位置\n\nShow the codelobstr::ast(\"foo\"())\n#&gt; █─foo\nlobstr::ast(foo())\n#&gt; █─foo\nlobstr::ast(pkg::foo(1))\n#&gt; █─█─`::` \n#&gt; │ ├─pkg \n#&gt; │ └─foo \n#&gt; └─1\nlobstr::ast(foo(1)(2))\n#&gt; █─█─foo \n#&gt; │ └─1 \n#&gt; └─2\n\n\n\n12.6.3.2 构造函数调用\n\nShow the codecall2(\"mean\", x = expr(x), na.rm = TRUE)\n#&gt; mean(x = x, na.rm = TRUE)\ncall2(expr(base::mean), x = expr(x), na.rm = TRUE)\n#&gt; base::mean(x = x, na.rm = TRUE)\ncall2(\"&lt;-\", expr(x), 10)\n#&gt; x &lt;- 10\n\n\n\n12.6.4 配对列表\n\nShow the codef &lt;- expr(function(x, y = 10) x + y)\n\nargs &lt;- f[[2]]\nargs\n#&gt; $x\n#&gt; \n#&gt; \n#&gt; $y\n#&gt; [1] 10\ntypeof(args)\n#&gt; [1] \"pairlist\"\npl &lt;- pairlist(x = 1, y = 2)\nlength(pl)\n#&gt; [1] 2\npl$x\n#&gt; [1] 1\n\n\n\n12.6.5 缺失参数\n空符号，empty symbol，表示缺失的参数\n\nShow the codemissing_arg()\ntypeof(missing_arg())\n#&gt; [1] \"symbol\"\nis_missing(missing_arg())\n#&gt; [1] TRUE\n\nis_missing(args[[1]])\n#&gt; [1] TRUE\n\n\n\n12.6.6 ...\n\n\nShow the codeg &lt;- expr(function(...) list(...))\ng\n#&gt; function(...) list(...)\nargs &lt;- g[[2]]\nargs \n#&gt; $...\nis_missing(args[[1]])\n#&gt; [1] TRUE\n\n\n\n12.6.7 表达式向量\n\nShow the codeexp1 &lt;- parse(text = c(\"\nx &lt;- 4\nx\n\"))\nexp2 &lt;- expression(x &lt;- 4, x)\n\ntypeof(exp1)\n#&gt; [1] \"expression\"\ntypeof(exp2)\n#&gt; [1] \"expression\"\n\nexp1\n#&gt; expression(x &lt;- 4, x)\nexp2\n#&gt; expression(x &lt;- 4, x)\n\n\n表达式向量的行为也类似于列表\n\nShow the codeexp1[[1]]\n#&gt; x &lt;- 4\n\n\n\n12.6.8 解析表达式\n\nShow the code# 字符串\nx1 &lt;- \"y &lt;- x + 10\"\nx1\n#&gt; [1] \"y &lt;- x + 10\"\nis.call(x1)\n#&gt; [1] FALSE\n\n\nas.formula(\"y~ x1+x2\")\n#&gt; y ~ x1 + x2\n\n# 表达式\nx2 &lt;- rlang::parse_expr(x1)\nx2\n#&gt; y &lt;- x + 10\nis.call(x2)\n#&gt; [1] TRUE\n\n\n\nShow the codex3 &lt;- \"a &lt;- 1; a + 1\"\nrlang::parse_exprs(x3)\n#&gt; [[1]]\n#&gt; a &lt;- 1\n#&gt; \n#&gt; [[2]]\n#&gt; a + 1\n\n\n\nShow the codez &lt;- expr(y &lt;- x + 10)\nexpr_text(z)\n#&gt; [1] \"y &lt;- x + 10\"",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>元编程</span>"
    ]
  },
  {
    "objectID": "meta_programming.html#quosure",
    "href": "meta_programming.html#quosure",
    "title": "\n12  元编程\n",
    "section": "\n12.7 quosure",
    "text": "12.7 quosure\n\nShow the codewith2 &lt;- function(df, expr) {\n  a &lt;- 1000\n  eval_tidy(enexpr(expr), df)\n}\n\ndf &lt;- data.frame(x = 1:3)\na &lt;- 10\nwith2(df, x + a)\n#&gt; [1] 1001 1002 1003\n\n\n将表达式与环境捆绑在一起的 quosure 数据结构,每当使用数据掩码时，必须始终使用enquo() 而不是enexpr()\n\nShow the codewith2 &lt;- function(df, expr) {\n  a &lt;- 1000\n  eval_tidy(enexpr(expr), df)\n}\n\nwith2(df, x + a)\n#&gt; [1] 1001 1002 1003",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>元编程</span>"
    ]
  },
  {
    "objectID": "meta_programming.html#取消引用",
    "href": "meta_programming.html#取消引用",
    "title": "\n12  元编程\n",
    "section": "\n12.8 取消引用",
    "text": "12.8 取消引用\nunquote operator !!（发音为 bang-bang）\n\nShow the code\n# call\nxx &lt;- expr(x + x)\nyy &lt;- expr(y + y)\n\nexpr(!!xx / !!yy)\n#&gt; (x + x)/(y + y)\n\n\n\nShow the code# 变异系数\ncv &lt;- function(var) {\n  var &lt;- enexpr(var)\n  expr(sd(!!var) / mean(!!var))\n}\n\ncv(x)\n#&gt; sd(x)/mean(x)\ncv(x + y)\n#&gt; sd(x + y)/mean(x + y)",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>元编程</span>"
    ]
  },
  {
    "objectID": "quasiquotation.html",
    "href": "quasiquotation.html",
    "title": "\n13  Quasiquotation\n",
    "section": "",
    "text": "13.1 引用",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Quasiquotation</span>"
    ]
  },
  {
    "objectID": "quasiquotation.html#引用",
    "href": "quasiquotation.html#引用",
    "title": "\n13  Quasiquotation\n",
    "section": "",
    "text": "13.1.1 捕获表达式\n空格和注释不是表达式的一部分\n捕获（开发人员）形参的表达式，函数主体中\n\nShow the codeexpr(x + y)\n#&gt; x + y\nexpr(1 / 2 / 3)\n#&gt; 1/2/3\n\nexprs(x = x ^ 2, y = y ^ 3, z = z ^ 4)\n#&gt; $x\n#&gt; x^2\n#&gt; \n#&gt; $y\n#&gt; y^3\n#&gt; \n#&gt; $z\n#&gt; z^4\n\n\nf1 &lt;- function(x) expr(x)\nf1(a + b + c)\n#&gt; x\n\n\n捕获用户作为参数传入的表达式，通过传参提供\n\nShow the codef2 &lt;- function(x) enexpr(x)\nf2(a + b + c)\n#&gt; a + b + c\n\n# 捕获多个表达式\nf &lt;- function(...) enexprs(...)\nf(x = 1, y = 10 * z)\n#&gt; $x\n#&gt; [1] 1\n#&gt; \n#&gt; $y\n#&gt; 10 * z\n\nf(mtcars$mpg)\n#&gt; [[1]]\n#&gt; mtcars$mpg\n\n\n\n13.1.2 捕获 symbol\nensym()\nensyms()\n\nShow the codef &lt;- function(...) ensyms(...)\nf(x)\n#&gt; [[1]]\n#&gt; x\nf(\"x\")\n#&gt; [[1]]\n#&gt; x\n\n\n\n13.1.3 替换\n\nShow the codef4 &lt;- function(x) substitute(x * 2)\nf4(a + b + c)\n#&gt; (a + b + c) * 2",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Quasiquotation</span>"
    ]
  },
  {
    "objectID": "quasiquotation.html#取消引用",
    "href": "quasiquotation.html#取消引用",
    "title": "\n13  Quasiquotation\n",
    "section": "\n13.2 取消引用",
    "text": "13.2 取消引用\n\n13.2.1 取消引用一个参数\n\nShow the codex &lt;- expr(-1)\nexpr(f(!!x, y))\n#&gt; f(-1, y)\n\na &lt;- sym(\"y\")\nb &lt;- 1\nexpr(f(!!a, !!b))\n#&gt; f(y, 1)\n\n\n右边是函数调用，评估并插入结果\n\nShow the codemean_rm &lt;- function(var) {\n  var &lt;- ensym(var)\n  expr(mean(!!var, na.rm = TRUE))\n}\n\n\nexpr(mean_rm(x) + mean_rm(y))\n#&gt; mean_rm(x) + mean_rm(y)\n\nexpr(!!mean_rm(x) + !!mean_rm(y))\n#&gt; mean(x, na.rm = TRUE) + mean(y, na.rm = TRUE)\n\n\n保留运算符的优先级\n\nShow the codex1 &lt;- expr(x + 1)\nx2 &lt;- expr(x + 2)\n\nexpr(!!x1 / !!x2)\n#&gt; (x + 1)/(x + 2)\n\n\n\n13.2.2 取消引用函数\n\nShow the codef &lt;- expr(pkg::foo)\nf\n#&gt; pkg::foo\nexpr((!!f)(x, y))\n#&gt; pkg::foo(x, y)\n\ncall2(f, expr(x), expr(y))\n#&gt; pkg::foo(x, y)\n\n\n\n13.2.3 取消引用缺失的参数\n\nShow the code\narg &lt;- missing_arg()\n\nexpr(foo(!!arg, !!arg))\n#&gt; Error in eval(expr, envir, enclos): argument \"arg\" is missing, with no default\n\nexpr(foo(!!maybe_missing(arg), !!maybe_missing(arg)))\n#&gt; foo(, )\n\n\n\n13.2.4 取消引用特殊形式函数参数\n\nShow the codex &lt;- expr(mpg)\nexpr(`$`(mtcars, !!x))\n#&gt; mtcars$mpg\n\n\n\n13.2.5 取消引用多个参数\nunquote-splice !!! ，发音为 bang-bang-bang，一对多的替换插入\n\nShow the codexs &lt;- exprs(1, a, -b)\nexpr(f(!!!xs, y))\n#&gt; f(1, a, -b, y)\n\n\n# Or with names\nys &lt;- set_names(xs, c(\"a\", \"b\", \"c\"))\nexpr(f(!!!ys, d = 4))\n#&gt; f(a = 1, b = a, c = -b, d = 4)\n\n\ncall2(\"f\", !!!xs, expr(y))\n#&gt; f(1, a, -b, y)\n\n\n\n13.2.6 点-点-点 ...\n\n与 Python 中的 args 和 kwarg（star-star-kwargs） 密切相关\n\nShow the codedfs &lt;- list(\n  a = data.frame(x = 1, y = 2),\n  b = data.frame(x = 3, y = 4)\n)\n\ndplyr::bind_rows(!!!dfs)\n\n\n\n\nx\ny\n\n\n\n1\n2\n\n\n3\n4\n\n\n\n\n\nShow the code\ndo.call(\"rbind\", dfs)\n\n\n\n\n\nx\ny\n\n\n\na\n1\n2\n\n\nb\n3\n4\n\n\n\n\n\n\n间接提供参数名称，:= 发音为 colon-equals\n\nShow the codevar &lt;- \"x\"\nval &lt;- c(4, 3, 9)\n\ntibble::tibble(!!var := val)\n\n\n\n\nx\n\n\n\n4\n\n\n3\n\n\n9\n\n\n\n\n\nShow the code\nargs &lt;- list(val)\nnames(args) &lt;- var\n\ndo.call(\"data.frame\", args)\n\n\n\n\nx\n\n\n\n4\n\n\n3\n\n\n9",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Quasiquotation</span>"
    ]
  },
  {
    "objectID": "evaluation.html",
    "href": "evaluation.html",
    "title": "\n14  Evaluation\n",
    "section": "",
    "text": "14.1 非标准求值",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Evaluation</span>"
    ]
  },
  {
    "objectID": "evaluation.html#整洁求值",
    "href": "evaluation.html#整洁求值",
    "title": "\n14  Evaluation\n",
    "section": "\n14.2 整洁求值",
    "text": "14.2 整洁求值\n\nquasiquotation\nquosures\ndata masks\n\n\nShow the codelibrary(rlang)\nlibrary(purrr)",
    "crumbs": [
      "R Programming",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Evaluation</span>"
    ]
  }
]