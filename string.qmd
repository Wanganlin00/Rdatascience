# 文本

[`stringi`](https://stringi.gagolewski.com/)**+ [`stringr`](https://stringr.tidyverse.org/) + [`glue`](https://glue.tidyverse.org/) +** [`stringx`](https://stringx.gagolewski.com/)

## 连接

```{r}

cat("hello","BOb","\b\n","\bIsn\' R","\t","GREAT?\n",sep = " " )

str_c("x", "y", "z")

str_c("Hello ", c("John", "Susan"))

paste0("x","y")
paste0("Hello ", c("John", "Susan"))
paste("x",c("a","b"),sep="",collapse = "?")  

paste0("x",c("A","B"),collapse="?")
```

## [**`stringr`**](https://stringr.tidyverse.org/)

```{r}
x <- c("why", "video", "cross", "extra")
str_length(x) 
str_c(x, collapse = "; ")
str_sub(x,start =  1,end =  2)

# 正则表达式
str_detect(x, "[aeiou]")
str_count(x, "[aeiou]")
str_subset(x, "[aeiou]")
str_locate(x, "[aeiou]")
str_extract(x, "[aeiou]")
str_match(x, "(.)[aeiou](.)")
str_replace(x, "[aeiou]", "?")
str_split(c("a,b", "c,d,e"), ",")

# 空格
str_pad(x, 10, "both")
x <- c("  a   ", "b   ",  "   c")
str_trim(x)
```

## 子集

```{r}

x <- c("Apple", "Banana", "Pear")
substr(x=x,start = 2,stop=4)   
str_sub(string = x,start = 2,end = 4)
str_sub(x, -3, -1)
```

## 长度

```{r}
nchar(c("a", "R for data science", NA))
str_length(c("a", "R for data science", NA))
```

## 字母大小写

```{r}
str_to_upper(c("i", "ı"))
str_to_upper(c("i", "ı"), locale = "tr")
toupper("abc")              #大写转换
tolower("aaAGEErg")         #小写转换
```

## `str_flatten`

```{r}
df <- tribble(
  ~ name, ~ fruit,
  "Carmen", "banana",
  "Carmen", "apple",
  "Marvin", "nectarine",
  "Terence", "cantaloupe",
  "Terence", "papaya",
  "Terence", "mandarin"
)
df |>
  group_by(name) |> 
  summarize(fruits = str_flatten(fruit, ", ",last = ", and "))
```

## 排序

```{r}
str_sort(c("a", "c", "ch", "h", "z"))
```

## 分离

```{r}
# df |> separate_longer_delim(cols, delim)
# df |> separate_longer_position(cols, width)
# df |> separate_wider_delim(cols, delim, names)
# df |> separate_wider_position(cols, widths)
# df |> separate_wider_regex(cols,patterns)
```

### `separate_longer_*`

```{r}
df1 <- tibble(x = c("a,b,c", "d,e", "f"))
df1 |> 
  separate_longer_delim(x, delim = ",")

df2 <- tibble(x = c("1211", "131", "21"))
df2 |> 
  separate_longer_position(x, width = 1)
```

### `separate_wider_*`

```{r}
df3 <- tibble(x = c("a10.1.2022", "b10.2.2011", "e15.1.2015"))
df3
df3 |> 
  separate_wider_delim(
    x,
    delim = ".",
    names = c("code", "edition", "year")
  )
df3 |> 
  separate_wider_delim(
    x,
    delim = ".",
    names = c("code", NA, "year")
  )

df4 <- tibble(x = c("202215TX", "202122LA", "202325CA")) 
df4 |> 
  separate_wider_position(
    x,
    widths = c(year = 4, age = 2, state = 2)
  )
```

## 转义

escape

```{r}
x <- c("one\ntwo", "one\ttwo", "\u00b5", "\U0001f604")
x
str_view(x)
```

```{r}

# 转义字符串
single_quote <- "\'"
double_quote <- '\"'
backslash <- "\\"
x <- c(single_quote, double_quote, backslash)
x

# 查看
str_view(x)
```

## raw

```{r}
single_quote <- r"(')"        # []    ---()---  -()-
double_quote <- r"["]"
backslash <- r"--(\)--"

x <- c(single_quote, double_quote, backslash)
x
str_view(x)
```
